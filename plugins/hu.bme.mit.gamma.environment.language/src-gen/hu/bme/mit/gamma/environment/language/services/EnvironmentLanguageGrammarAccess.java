/*
 * generated by Xtext 2.30.0.M2
 */
package hu.bme.mit.gamma.environment.language.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import hu.bme.mit.gamma.action.language.services.ActionLanguageGrammarAccess;
import hu.bme.mit.gamma.expression.language.services.ExpressionLanguageGrammarAccess;
import hu.bme.mit.gamma.statechart.language.services.StatechartLanguageGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EnvironmentLanguageGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cImportKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cImportsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cImportsPackageCrossReference_2_1_0 = (CrossReference)cImportsAssignment_2_1.eContents().get(0);
		private final RuleCall cImportsPackageSTRINGTerminalRuleCall_2_1_0_1 = (RuleCall)cImportsPackageCrossReference_2_1_0.eContents().get(1);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cConstantDeclarationsAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cConstantDeclarationsConstantDeclarationParserRuleCall_3_0_0 = (RuleCall)cConstantDeclarationsAssignment_3_0.eContents().get(0);
		private final Assignment cFunctionDeclarationsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cFunctionDeclarationsFunctionDeclarationParserRuleCall_3_1_0 = (RuleCall)cFunctionDeclarationsAssignment_3_1.eContents().get(0);
		private final Assignment cTypeDeclarationsAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cTypeDeclarationsTypeDeclarationParserRuleCall_3_2_0 = (RuleCall)cTypeDeclarationsAssignment_3_2.eContents().get(0);
		private final Assignment cComponentsAssignment_3_3 = (Assignment)cAlternatives_3.eContents().get(3);
		private final RuleCall cComponentsComponentParserRuleCall_3_3_0 = (RuleCall)cComponentsAssignment_3_3.eContents().get(0);
		private final Assignment cInterfacesAssignment_3_4 = (Assignment)cAlternatives_3.eContents().get(4);
		private final RuleCall cInterfacesInterfaceParserRuleCall_3_4_0 = (RuleCall)cInterfacesAssignment_3_4.eContents().get(0);
		
		////generate EnvironmentLanguage "http://www.mit.bme.hu/gamma/environment/language/dwdEnvironmentLanguage"
		//@Override
		//Package returns InterfaceModel::Package: 'package' name=ID
		//    ('import' imports+=[InterfaceModel::Package | STRING])*
		//    (
		//        constantDeclarations+=ConstantDeclaration |
		//        functionDeclarations+=FunctionDeclaration |
		//        typeDeclarations+=TypeDeclaration |
		//        components+=Component |
		//        interfaces+=Interface
		//    )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'package' name=ID
		//   ('import' imports+=[InterfaceModel::Package | STRING])*
		//   (
		//       constantDeclarations+=ConstantDeclaration |
		//       functionDeclarations+=FunctionDeclaration |
		//       typeDeclarations+=TypeDeclaration |
		//       components+=Component |
		//       interfaces+=Interface
		//   )*
		public Group getGroup() { return cGroup; }
		
		//'package'
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('import' imports+=[InterfaceModel::Package | STRING])*
		public Group getGroup_2() { return cGroup_2; }
		
		//'import'
		public Keyword getImportKeyword_2_0() { return cImportKeyword_2_0; }
		
		//imports+=[InterfaceModel::Package | STRING]
		public Assignment getImportsAssignment_2_1() { return cImportsAssignment_2_1; }
		
		//[InterfaceModel::Package | STRING]
		public CrossReference getImportsPackageCrossReference_2_1_0() { return cImportsPackageCrossReference_2_1_0; }
		
		//STRING
		public RuleCall getImportsPackageSTRINGTerminalRuleCall_2_1_0_1() { return cImportsPackageSTRINGTerminalRuleCall_2_1_0_1; }
		
		//(
		//    constantDeclarations+=ConstantDeclaration |
		//    functionDeclarations+=FunctionDeclaration |
		//    typeDeclarations+=TypeDeclaration |
		//    components+=Component |
		//    interfaces+=Interface
		//)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//constantDeclarations+=ConstantDeclaration
		public Assignment getConstantDeclarationsAssignment_3_0() { return cConstantDeclarationsAssignment_3_0; }
		
		//ConstantDeclaration
		public RuleCall getConstantDeclarationsConstantDeclarationParserRuleCall_3_0_0() { return cConstantDeclarationsConstantDeclarationParserRuleCall_3_0_0; }
		
		//functionDeclarations+=FunctionDeclaration
		public Assignment getFunctionDeclarationsAssignment_3_1() { return cFunctionDeclarationsAssignment_3_1; }
		
		//FunctionDeclaration
		public RuleCall getFunctionDeclarationsFunctionDeclarationParserRuleCall_3_1_0() { return cFunctionDeclarationsFunctionDeclarationParserRuleCall_3_1_0; }
		
		//typeDeclarations+=TypeDeclaration
		public Assignment getTypeDeclarationsAssignment_3_2() { return cTypeDeclarationsAssignment_3_2; }
		
		//TypeDeclaration
		public RuleCall getTypeDeclarationsTypeDeclarationParserRuleCall_3_2_0() { return cTypeDeclarationsTypeDeclarationParserRuleCall_3_2_0; }
		
		//components+=Component
		public Assignment getComponentsAssignment_3_3() { return cComponentsAssignment_3_3; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_3_3_0() { return cComponentsComponentParserRuleCall_3_3_0; }
		
		//interfaces+=Interface
		public Assignment getInterfacesAssignment_3_4() { return cInterfacesAssignment_3_4; }
		
		//Interface
		public RuleCall getInterfacesInterfaceParserRuleCall_3_4_0() { return cInterfacesInterfaceParserRuleCall_3_4_0; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.Component");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSynchronousComponentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnvironmentCascadeCompositeComponentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnvironmentSynchronousCompositeComponentParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEnvironmentAsynchronousCompositeComponentParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAnalysisComponentParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//@Override
		//Component returns InterfaceModel::Component:
		//    SynchronousComponent |
		//    EnvironmentCascadeCompositeComponent |
		//    EnvironmentSynchronousCompositeComponent |
		//    EnvironmentAsynchronousCompositeComponent |
		//    AnalysisComponent //|
		//    //RequirementComponent
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SynchronousComponent |
		//EnvironmentCascadeCompositeComponent |
		//EnvironmentSynchronousCompositeComponent |
		//EnvironmentAsynchronousCompositeComponent |
		//AnalysisComponent
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SynchronousComponent
		public RuleCall getSynchronousComponentParserRuleCall_0() { return cSynchronousComponentParserRuleCall_0; }
		
		//EnvironmentCascadeCompositeComponent
		public RuleCall getEnvironmentCascadeCompositeComponentParserRuleCall_1() { return cEnvironmentCascadeCompositeComponentParserRuleCall_1; }
		
		//EnvironmentSynchronousCompositeComponent
		public RuleCall getEnvironmentSynchronousCompositeComponentParserRuleCall_2() { return cEnvironmentSynchronousCompositeComponentParserRuleCall_2; }
		
		//EnvironmentAsynchronousCompositeComponent
		public RuleCall getEnvironmentAsynchronousCompositeComponentParserRuleCall_3() { return cEnvironmentAsynchronousCompositeComponentParserRuleCall_3; }
		
		//AnalysisComponent
		public RuleCall getAnalysisComponentParserRuleCall_4() { return cAnalysisComponentParserRuleCall_4; }
	}
	public class AnalysisComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AnalysisComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalysisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cParameterDeclarationsAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0_0 = (RuleCall)cParameterDeclarationsAssignment_2_1_0.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cGroup_2_1.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cParameterDeclarationsAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_2_1_1_1_0 = (RuleCall)cParameterDeclarationsAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cInKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAnalyzedComponentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnalyzedComponentEnvironmentAsynchronousCompositeComponentInstanceParserRuleCall_5_0 = (RuleCall)cAnalyzedComponentAssignment_5.eContents().get(0);
		private final Assignment cAspectAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAspectAnalysisAspectParserRuleCall_6_0 = (RuleCall)cAspectAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommercialAtKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cConditionsKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Alternatives cAlternatives_7_3 = (Alternatives)cGroup_7.eContents().get(3);
		private final Assignment cConditionsAssignment_7_3_0 = (Assignment)cAlternatives_7_3.eContents().get(0);
		private final RuleCall cConditionsAnalysisConditionParserRuleCall_7_3_0_0 = (RuleCall)cConditionsAssignment_7_3_0.eContents().get(0);
		private final Assignment cPriorydistributionAssignment_7_3_1 = (Assignment)cAlternatives_7_3.eContents().get(1);
		private final RuleCall cPriorydistributionPrioryDistributionParserRuleCall_7_3_1_0 = (RuleCall)cPriorydistributionAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Assignment cAnalysismethodAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAnalysismethodAnalysisMethodParserRuleCall_8_0 = (RuleCall)cAnalysismethodAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		////defining Analysis and Requirement models
		///*
		//RequirementComponent returns AnalysisModel::RequirementComponent:
		//    'requirement' name=ID
		//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//    '{'
		//        'in' analyzedComponent=EnvironmentAsynchronousCompositeComponentInstance
		//        (aspect+=AnalysisAspect |
		//        requirement+=RequirementAspect |
		//        conditions+=AnalysisCondition)*
		//    '}'
		//;
		//RequirementAspect returns AnalysisModel::RequirementAspect:
		//    LowerThan | GreaterThan | IsBetween
		//;
		//LowerThan returns AnalysisModel::LowerThan:
		//    'lower than' value=DOUBLE
		//    ('description' description=STRING)?
		//;
		//GreaterThan returns AnalysisModel::GreaterThan:
		//    'greater than' value=DOUBLE
		//    ('description' description=STRING)?
		//;
		//IsBetween returns AnalysisModel::IsBetween:
		//    'in' '[' lowerBound=DOUBLE ',' upperBound=DOUBLE ']'
		//    ('description' description=STRING)?
		//;
		//*/
		//AnalysisComponent returns AnalysisModel::AnalysisComponent:
		//    'analysis' name=ID
		//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//    '{'
		//        'in' analyzedComponent=EnvironmentAsynchronousCompositeComponentInstance
		//        (aspect+=AnalysisAspect)+
		//        ('@' 'Conditions' '{'
		//            ((conditions+=AnalysisCondition)|
		//            (priorydistribution+=PrioryDistribution))*
		//        '}')?
		//        analysismethod=AnalysisMethod
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'analysis' name=ID
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//'{'
		//    'in' analyzedComponent=EnvironmentAsynchronousCompositeComponentInstance
		//    (aspect+=AnalysisAspect)+
		//    ('@' 'Conditions' '{'
		//        ((conditions+=AnalysisCondition)|
		//        (priorydistribution+=PrioryDistribution))*
		//    '}')?
		//    analysismethod=AnalysisMethod
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'analysis'
		public Keyword getAnalysisKeyword_0() { return cAnalysisKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)?
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//(parameterDeclarations+=ParameterDeclaration)
		public Assignment getParameterDeclarationsAssignment_2_1_0() { return cParameterDeclarationsAssignment_2_1_0; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_2_1_0_0; }
		
		//(',' parameterDeclarations+=ParameterDeclaration)*
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }
		
		//','
		public Keyword getCommaKeyword_2_1_1_0() { return cCommaKeyword_2_1_1_0; }
		
		//parameterDeclarations+=ParameterDeclaration
		public Assignment getParameterDeclarationsAssignment_2_1_1_1() { return cParameterDeclarationsAssignment_2_1_1_1; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_2_1_1_1_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_2_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'in'
		public Keyword getInKeyword_4() { return cInKeyword_4; }
		
		//analyzedComponent=EnvironmentAsynchronousCompositeComponentInstance
		public Assignment getAnalyzedComponentAssignment_5() { return cAnalyzedComponentAssignment_5; }
		
		//EnvironmentAsynchronousCompositeComponentInstance
		public RuleCall getAnalyzedComponentEnvironmentAsynchronousCompositeComponentInstanceParserRuleCall_5_0() { return cAnalyzedComponentEnvironmentAsynchronousCompositeComponentInstanceParserRuleCall_5_0; }
		
		//(aspect+=AnalysisAspect)+
		public Assignment getAspectAssignment_6() { return cAspectAssignment_6; }
		
		//AnalysisAspect
		public RuleCall getAspectAnalysisAspectParserRuleCall_6_0() { return cAspectAnalysisAspectParserRuleCall_6_0; }
		
		//('@' 'Conditions' '{'
		//    ((conditions+=AnalysisCondition)|
		//    (priorydistribution+=PrioryDistribution))*
		//'}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'@'
		public Keyword getCommercialAtKeyword_7_0() { return cCommercialAtKeyword_7_0; }
		
		//'Conditions'
		public Keyword getConditionsKeyword_7_1() { return cConditionsKeyword_7_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_2() { return cLeftCurlyBracketKeyword_7_2; }
		
		//((conditions+=AnalysisCondition)|
		//(priorydistribution+=PrioryDistribution))*
		public Alternatives getAlternatives_7_3() { return cAlternatives_7_3; }
		
		//(conditions+=AnalysisCondition)
		public Assignment getConditionsAssignment_7_3_0() { return cConditionsAssignment_7_3_0; }
		
		//AnalysisCondition
		public RuleCall getConditionsAnalysisConditionParserRuleCall_7_3_0_0() { return cConditionsAnalysisConditionParserRuleCall_7_3_0_0; }
		
		//(priorydistribution+=PrioryDistribution)
		public Assignment getPriorydistributionAssignment_7_3_1() { return cPriorydistributionAssignment_7_3_1; }
		
		//PrioryDistribution
		public RuleCall getPriorydistributionPrioryDistributionParserRuleCall_7_3_1_0() { return cPriorydistributionPrioryDistributionParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//analysismethod=AnalysisMethod
		public Assignment getAnalysismethodAssignment_8() { return cAnalysismethodAssignment_8; }
		
		//AnalysisMethod
		public RuleCall getAnalysismethodAnalysisMethodParserRuleCall_8_0() { return cAnalysismethodAnalysisMethodParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class AnalysisMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AnalysisMethod");
		private final RuleCall cSimulationAnalysisMethodParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnalysisMethod returns AnalysisModel::AnalysisMethod:
		//    SimulationAnalysisMethod
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SimulationAnalysisMethod
		public RuleCall getSimulationAnalysisMethodParserRuleCall() { return cSimulationAnalysisMethodParserRuleCall; }
	}
	public class SimulationAnalysisMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.SimulationAnalysisMethod");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cImportanceSamplingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMCMCParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SimulationAnalysisMethod returns AnalysisModel::SimulationAnalysisMethod:
		//    ImportanceSampling | MCMC
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ImportanceSampling | MCMC
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ImportanceSampling
		public RuleCall getImportanceSamplingParserRuleCall_0() { return cImportanceSamplingParserRuleCall_0; }
		
		//MCMC
		public RuleCall getMCMCParserRuleCall_1() { return cMCMCParserRuleCall_1; }
	}
	public class ImportanceSamplingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ImportanceSampling");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cConfigurationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cImportanceSamplingKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cEndconditionAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cEndconditionEndConditionParserRuleCall_6_0_0 = (RuleCall)cEndconditionAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cSimulationKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Keyword cTimeKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Keyword cEqualsSignKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final Assignment cSimulationTimeAssignment_6_1_3 = (Assignment)cGroup_6_1.eContents().get(3);
		private final RuleCall cSimulationTimeExpressionParserRuleCall_6_1_3_0 = (RuleCall)cSimulationTimeAssignment_6_1_3.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cAlternatives_6.eContents().get(2);
		private final Keyword cSimulationKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Keyword cNumberKeyword_6_2_1 = (Keyword)cGroup_6_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_6_2_2 = (Keyword)cGroup_6_2.eContents().get(2);
		private final Assignment cSimulationNumberAssignment_6_2_3 = (Assignment)cGroup_6_2.eContents().get(3);
		private final RuleCall cSimulationNumberIntegerLiteralExpressionParserRuleCall_6_2_3_0 = (RuleCall)cSimulationNumberAssignment_6_2_3.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cAlternatives_6.eContents().get(3);
		private final Keyword cWarmupKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Keyword cTimeKeyword_6_3_1 = (Keyword)cGroup_6_3.eContents().get(1);
		private final Keyword cEqualsSignKeyword_6_3_2 = (Keyword)cGroup_6_3.eContents().get(2);
		private final Assignment cWarmupTimeAssignment_6_3_3 = (Assignment)cGroup_6_3.eContents().get(3);
		private final RuleCall cWarmupTimeExpressionParserRuleCall_6_3_3_0 = (RuleCall)cWarmupTimeAssignment_6_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ImportanceSampling returns AnalysisModel::ImportanceSampling:
		//    '@' 'Configuration' '(' 'ImportanceSampling' ')' '{'
		//            ((endcondition+=EndCondition)|
		//            ("simulation" "time" "=" simulationTime=Expression)|
		//            ("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
		//            ("warmup" "time" "=" warmupTime=Expression))*
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' 'Configuration' '(' 'ImportanceSampling' ')' '{'
		//        ((endcondition+=EndCondition)|
		//        ("simulation" "time" "=" simulationTime=Expression)|
		//        ("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
		//        ("warmup" "time" "=" warmupTime=Expression))*
		//    '}'
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//'Configuration'
		public Keyword getConfigurationKeyword_1() { return cConfigurationKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//'ImportanceSampling'
		public Keyword getImportanceSamplingKeyword_3() { return cImportanceSamplingKeyword_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//((endcondition+=EndCondition)|
		//("simulation" "time" "=" simulationTime=Expression)|
		//("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
		//("warmup" "time" "=" warmupTime=Expression))*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//(endcondition+=EndCondition)
		public Assignment getEndconditionAssignment_6_0() { return cEndconditionAssignment_6_0; }
		
		//EndCondition
		public RuleCall getEndconditionEndConditionParserRuleCall_6_0_0() { return cEndconditionEndConditionParserRuleCall_6_0_0; }
		
		//("simulation" "time" "=" simulationTime=Expression)
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//"simulation"
		public Keyword getSimulationKeyword_6_1_0() { return cSimulationKeyword_6_1_0; }
		
		//"time"
		public Keyword getTimeKeyword_6_1_1() { return cTimeKeyword_6_1_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_1_2() { return cEqualsSignKeyword_6_1_2; }
		
		//simulationTime=Expression
		public Assignment getSimulationTimeAssignment_6_1_3() { return cSimulationTimeAssignment_6_1_3; }
		
		//Expression
		public RuleCall getSimulationTimeExpressionParserRuleCall_6_1_3_0() { return cSimulationTimeExpressionParserRuleCall_6_1_3_0; }
		
		//("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//"simulation"
		public Keyword getSimulationKeyword_6_2_0() { return cSimulationKeyword_6_2_0; }
		
		//"number"
		public Keyword getNumberKeyword_6_2_1() { return cNumberKeyword_6_2_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_2_2() { return cEqualsSignKeyword_6_2_2; }
		
		//simulationNumber=IntegerLiteralExpression
		public Assignment getSimulationNumberAssignment_6_2_3() { return cSimulationNumberAssignment_6_2_3; }
		
		//IntegerLiteralExpression
		public RuleCall getSimulationNumberIntegerLiteralExpressionParserRuleCall_6_2_3_0() { return cSimulationNumberIntegerLiteralExpressionParserRuleCall_6_2_3_0; }
		
		//("warmup" "time" "=" warmupTime=Expression)
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//"warmup"
		public Keyword getWarmupKeyword_6_3_0() { return cWarmupKeyword_6_3_0; }
		
		//"time"
		public Keyword getTimeKeyword_6_3_1() { return cTimeKeyword_6_3_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_3_2() { return cEqualsSignKeyword_6_3_2; }
		
		//warmupTime=Expression
		public Assignment getWarmupTimeAssignment_6_3_3() { return cWarmupTimeAssignment_6_3_3; }
		
		//Expression
		public RuleCall getWarmupTimeExpressionParserRuleCall_6_3_3_0() { return cWarmupTimeExpressionParserRuleCall_6_3_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MCMCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.MCMC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cConfigurationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cMCMCKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cEndconditionAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cEndconditionEndConditionParserRuleCall_6_0_0 = (RuleCall)cEndconditionAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final Keyword cSimulationKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Keyword cTimeKeyword_6_1_1 = (Keyword)cGroup_6_1.eContents().get(1);
		private final Keyword cEqualsSignKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final Assignment cSimulationTimeAssignment_6_1_3 = (Assignment)cGroup_6_1.eContents().get(3);
		private final RuleCall cSimulationTimeExpressionParserRuleCall_6_1_3_0 = (RuleCall)cSimulationTimeAssignment_6_1_3.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cAlternatives_6.eContents().get(2);
		private final Keyword cSimulationKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Keyword cNumberKeyword_6_2_1 = (Keyword)cGroup_6_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_6_2_2 = (Keyword)cGroup_6_2.eContents().get(2);
		private final Assignment cSimulationNumberAssignment_6_2_3 = (Assignment)cGroup_6_2.eContents().get(3);
		private final RuleCall cSimulationNumberIntegerLiteralExpressionParserRuleCall_6_2_3_0 = (RuleCall)cSimulationNumberAssignment_6_2_3.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cAlternatives_6.eContents().get(3);
		private final Keyword cWarmupKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Keyword cStepKeyword_6_3_1 = (Keyword)cGroup_6_3.eContents().get(1);
		private final Keyword cNumberKeyword_6_3_2 = (Keyword)cGroup_6_3.eContents().get(2);
		private final Keyword cEqualsSignKeyword_6_3_3 = (Keyword)cGroup_6_3.eContents().get(3);
		private final Assignment cWarmupStepNumAssignment_6_3_4 = (Assignment)cGroup_6_3.eContents().get(4);
		private final RuleCall cWarmupStepNumIntegerLiteralExpressionParserRuleCall_6_3_4_0 = (RuleCall)cWarmupStepNumAssignment_6_3_4.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cAlternatives_6.eContents().get(4);
		private final Keyword cKernelKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_4_1 = (Keyword)cGroup_6_4.eContents().get(1);
		private final Assignment cKernelAssignment_6_4_2 = (Assignment)cGroup_6_4.eContents().get(2);
		private final RuleCall cKernelMCMCKernelParserRuleCall_6_4_2_0 = (RuleCall)cKernelAssignment_6_4_2.eContents().get(0);
		private final Group cGroup_6_5 = (Group)cAlternatives_6.eContents().get(5);
		private final Keyword cWarmupKeyword_6_5_0 = (Keyword)cGroup_6_5.eContents().get(0);
		private final Keyword cTimeKeyword_6_5_1 = (Keyword)cGroup_6_5.eContents().get(1);
		private final Keyword cEqualsSignKeyword_6_5_2 = (Keyword)cGroup_6_5.eContents().get(2);
		private final Assignment cWarmupTimeAssignment_6_5_3 = (Assignment)cGroup_6_5.eContents().get(3);
		private final RuleCall cWarmupTimeExpressionParserRuleCall_6_5_3_0 = (RuleCall)cWarmupTimeAssignment_6_5_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MCMC returns AnalysisModel::MCMC:
		//    '@' 'Configuration' '(' 'MCMC' ')' '{'
		//            ((endcondition+=EndCondition)|
		//            ("simulation" "time" "=" simulationTime=Expression)|
		//            ("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
		//            ("warmup" "step" "number" "=" warmupStepNum=IntegerLiteralExpression)|
		//            ("kernel" "=" kernel=MCMCKernel)|
		//            ("warmup" "time" "=" warmupTime=Expression))*
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'@' 'Configuration' '(' 'MCMC' ')' '{'
		//        ((endcondition+=EndCondition)|
		//        ("simulation" "time" "=" simulationTime=Expression)|
		//        ("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
		//        ("warmup" "step" "number" "=" warmupStepNum=IntegerLiteralExpression)|
		//        ("kernel" "=" kernel=MCMCKernel)|
		//        ("warmup" "time" "=" warmupTime=Expression))*
		//    '}'
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//'Configuration'
		public Keyword getConfigurationKeyword_1() { return cConfigurationKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//'MCMC'
		public Keyword getMCMCKeyword_3() { return cMCMCKeyword_3; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//((endcondition+=EndCondition)|
		//("simulation" "time" "=" simulationTime=Expression)|
		//("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
		//("warmup" "step" "number" "=" warmupStepNum=IntegerLiteralExpression)|
		//("kernel" "=" kernel=MCMCKernel)|
		//("warmup" "time" "=" warmupTime=Expression))*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//(endcondition+=EndCondition)
		public Assignment getEndconditionAssignment_6_0() { return cEndconditionAssignment_6_0; }
		
		//EndCondition
		public RuleCall getEndconditionEndConditionParserRuleCall_6_0_0() { return cEndconditionEndConditionParserRuleCall_6_0_0; }
		
		//("simulation" "time" "=" simulationTime=Expression)
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//"simulation"
		public Keyword getSimulationKeyword_6_1_0() { return cSimulationKeyword_6_1_0; }
		
		//"time"
		public Keyword getTimeKeyword_6_1_1() { return cTimeKeyword_6_1_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_1_2() { return cEqualsSignKeyword_6_1_2; }
		
		//simulationTime=Expression
		public Assignment getSimulationTimeAssignment_6_1_3() { return cSimulationTimeAssignment_6_1_3; }
		
		//Expression
		public RuleCall getSimulationTimeExpressionParserRuleCall_6_1_3_0() { return cSimulationTimeExpressionParserRuleCall_6_1_3_0; }
		
		//("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//"simulation"
		public Keyword getSimulationKeyword_6_2_0() { return cSimulationKeyword_6_2_0; }
		
		//"number"
		public Keyword getNumberKeyword_6_2_1() { return cNumberKeyword_6_2_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_2_2() { return cEqualsSignKeyword_6_2_2; }
		
		//simulationNumber=IntegerLiteralExpression
		public Assignment getSimulationNumberAssignment_6_2_3() { return cSimulationNumberAssignment_6_2_3; }
		
		//IntegerLiteralExpression
		public RuleCall getSimulationNumberIntegerLiteralExpressionParserRuleCall_6_2_3_0() { return cSimulationNumberIntegerLiteralExpressionParserRuleCall_6_2_3_0; }
		
		//("warmup" "step" "number" "=" warmupStepNum=IntegerLiteralExpression)
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//"warmup"
		public Keyword getWarmupKeyword_6_3_0() { return cWarmupKeyword_6_3_0; }
		
		//"step"
		public Keyword getStepKeyword_6_3_1() { return cStepKeyword_6_3_1; }
		
		//"number"
		public Keyword getNumberKeyword_6_3_2() { return cNumberKeyword_6_3_2; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_3_3() { return cEqualsSignKeyword_6_3_3; }
		
		//warmupStepNum=IntegerLiteralExpression
		public Assignment getWarmupStepNumAssignment_6_3_4() { return cWarmupStepNumAssignment_6_3_4; }
		
		//IntegerLiteralExpression
		public RuleCall getWarmupStepNumIntegerLiteralExpressionParserRuleCall_6_3_4_0() { return cWarmupStepNumIntegerLiteralExpressionParserRuleCall_6_3_4_0; }
		
		//("kernel" "=" kernel=MCMCKernel)
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//"kernel"
		public Keyword getKernelKeyword_6_4_0() { return cKernelKeyword_6_4_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_4_1() { return cEqualsSignKeyword_6_4_1; }
		
		//kernel=MCMCKernel
		public Assignment getKernelAssignment_6_4_2() { return cKernelAssignment_6_4_2; }
		
		//MCMCKernel
		public RuleCall getKernelMCMCKernelParserRuleCall_6_4_2_0() { return cKernelMCMCKernelParserRuleCall_6_4_2_0; }
		
		//("warmup" "time" "=" warmupTime=Expression)
		public Group getGroup_6_5() { return cGroup_6_5; }
		
		//"warmup"
		public Keyword getWarmupKeyword_6_5_0() { return cWarmupKeyword_6_5_0; }
		
		//"time"
		public Keyword getTimeKeyword_6_5_1() { return cTimeKeyword_6_5_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_6_5_2() { return cEqualsSignKeyword_6_5_2; }
		
		//warmupTime=Expression
		public Assignment getWarmupTimeAssignment_6_5_3() { return cWarmupTimeAssignment_6_5_3; }
		
		//Expression
		public RuleCall getWarmupTimeExpressionParserRuleCall_6_5_3_0() { return cWarmupTimeExpressionParserRuleCall_6_5_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MCMCKernelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.MCMCKernel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNUTSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHMCParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MCMCKernel returns AnalysisModel::MCMCKernel:
		//    NUTS | HMC
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//NUTS | HMC
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NUTS
		public RuleCall getNUTSParserRuleCall_0() { return cNUTSParserRuleCall_0; }
		
		//HMC
		public RuleCall getHMCParserRuleCall_1() { return cHMCParserRuleCall_1; }
	}
	public class NUTSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.NUTS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNUTSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNUTSKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//NUTS returns AnalysisModel::NUTS:
		//    {AnalysisModel::NUTS} "NUTS"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{AnalysisModel::NUTS} "NUTS"
		public Group getGroup() { return cGroup; }
		
		//{AnalysisModel::NUTS}
		public Action getNUTSAction_0() { return cNUTSAction_0; }
		
		//"NUTS"
		public Keyword getNUTSKeyword_1() { return cNUTSKeyword_1; }
	}
	public class HMCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.HMC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHMCAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHMCKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//HMC returns AnalysisModel::HMC:
		//    {AnalysisModel::HMC} "HMC"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{AnalysisModel::HMC} "HMC"
		public Group getGroup() { return cGroup; }
		
		//{AnalysisModel::HMC}
		public Action getHMCAction_0() { return cHMCAction_0; }
		
		//"HMC"
		public Keyword getHMCKeyword_1() { return cHMCKeyword_1; }
	}
	public class RecursiveComponentReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.RecursiveComponentReference");
		private final Assignment cComponentAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cComponentEnvironmentAsynchronousCompositeComponentInstanceCrossReference_0 = (CrossReference)cComponentAssignment.eContents().get(0);
		private final RuleCall cComponentEnvironmentAsynchronousCompositeComponentInstanceIDTerminalRuleCall_0_1 = (RuleCall)cComponentEnvironmentAsynchronousCompositeComponentInstanceCrossReference_0.eContents().get(1);
		
		//RecursiveComponentReference returns AnalysisModel::RecursiveComponentReference:
		//    component = [EnvironmentModel::EnvironmentAsynchronousCompositeComponentInstance]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//component = [EnvironmentModel::EnvironmentAsynchronousCompositeComponentInstance]
		public Assignment getComponentAssignment() { return cComponentAssignment; }
		
		//[EnvironmentModel::EnvironmentAsynchronousCompositeComponentInstance]
		public CrossReference getComponentEnvironmentAsynchronousCompositeComponentInstanceCrossReference_0() { return cComponentEnvironmentAsynchronousCompositeComponentInstanceCrossReference_0; }
		
		//ID
		public RuleCall getComponentEnvironmentAsynchronousCompositeComponentInstanceIDTerminalRuleCall_0_1() { return cComponentEnvironmentAsynchronousCompositeComponentInstanceIDTerminalRuleCall_0_1; }
	}
	public class ComponentPortEventReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ComponentPortEventReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cComponentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cComponentRecursiveComponentReferenceParserRuleCall_1_0 = (RuleCall)cComponentAssignment_1.eContents().get(0);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPortAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cPortPortCrossReference_3_0 = (CrossReference)cPortAssignment_3.eContents().get(0);
		private final RuleCall cPortPortIDTerminalRuleCall_3_0_1 = (RuleCall)cPortPortCrossReference_3_0.eContents().get(1);
		private final Keyword cFullStopKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEventAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cEventEventCrossReference_5_0 = (CrossReference)cEventAssignment_5.eContents().get(0);
		private final RuleCall cEventEventIDTerminalRuleCall_5_0_1 = (RuleCall)cEventEventCrossReference_5_0.eContents().get(1);
		
		//ComponentPortEventReference returns AnalysisModel::ComponentPortEventReference:
		//    'event'  component=RecursiveComponentReference '.'port=[InterfaceModel::Port]'.'event=[InterfaceModel::Event]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'event'  component=RecursiveComponentReference '.'port=[InterfaceModel::Port]'.'event=[InterfaceModel::Event]
		public Group getGroup() { return cGroup; }
		
		//'event'
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }
		
		//component=RecursiveComponentReference
		public Assignment getComponentAssignment_1() { return cComponentAssignment_1; }
		
		//RecursiveComponentReference
		public RuleCall getComponentRecursiveComponentReferenceParserRuleCall_1_0() { return cComponentRecursiveComponentReferenceParserRuleCall_1_0; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//port=[InterfaceModel::Port]
		public Assignment getPortAssignment_3() { return cPortAssignment_3; }
		
		//[InterfaceModel::Port]
		public CrossReference getPortPortCrossReference_3_0() { return cPortPortCrossReference_3_0; }
		
		//ID
		public RuleCall getPortPortIDTerminalRuleCall_3_0_1() { return cPortPortIDTerminalRuleCall_3_0_1; }
		
		//'.'
		public Keyword getFullStopKeyword_4() { return cFullStopKeyword_4; }
		
		//event=[InterfaceModel::Event]
		public Assignment getEventAssignment_5() { return cEventAssignment_5; }
		
		//[InterfaceModel::Event]
		public CrossReference getEventEventCrossReference_5_0() { return cEventEventCrossReference_5_0; }
		
		//ID
		public RuleCall getEventEventIDTerminalRuleCall_5_0_1() { return cEventEventIDTerminalRuleCall_5_0_1; }
	}
	public class AnalysisAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AnalysisAspect");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cProbabilityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMeanTimeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFrequencyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMeanParameterParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cParameterDistributionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMeanTimeBetweenEventsParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEventTimeRatioParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//AnalysisAspect returns AnalysisModel::AnalysisAspect:
		//    Probability  | MeanTime | Frequency | MeanParameter | ParameterDistribution | MeanTimeBetweenEvents | EventTimeRatio //| TimedProbability | TimeBoundedProbability
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Probability  | MeanTime | Frequency | MeanParameter | ParameterDistribution | MeanTimeBetweenEvents | EventTimeRatio
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Probability
		public RuleCall getProbabilityParserRuleCall_0() { return cProbabilityParserRuleCall_0; }
		
		//MeanTime
		public RuleCall getMeanTimeParserRuleCall_1() { return cMeanTimeParserRuleCall_1; }
		
		//Frequency
		public RuleCall getFrequencyParserRuleCall_2() { return cFrequencyParserRuleCall_2; }
		
		//MeanParameter
		public RuleCall getMeanParameterParserRuleCall_3() { return cMeanParameterParserRuleCall_3; }
		
		//ParameterDistribution
		public RuleCall getParameterDistributionParserRuleCall_4() { return cParameterDistributionParserRuleCall_4; }
		
		//MeanTimeBetweenEvents
		public RuleCall getMeanTimeBetweenEventsParserRuleCall_5() { return cMeanTimeBetweenEventsParserRuleCall_5; }
		
		//EventTimeRatio
		public RuleCall getEventTimeRatioParserRuleCall_6() { return cEventTimeRatioParserRuleCall_6; }
	}
	public class MeanParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.MeanParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMeanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_3_0 = (RuleCall)cEventAssignment_3.eContents().get(0);
		private final Keyword cFullStopKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cParameterAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cParameterParameterDeclarationCrossReference_5_0 = (CrossReference)cParameterAssignment_5.eContents().get(0);
		private final RuleCall cParameterParameterDeclarationIDTerminalRuleCall_5_0_1 = (RuleCall)cParameterParameterDeclarationCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// analysis aspects
		//MeanParameter returns AnalysisModel::MeanParameter:
		//    'mean' 'parameter' 'of' event=ComponentPortEventReference  '.' parameter=[ParameterDeclaration] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'mean' 'parameter' 'of' event=ComponentPortEventReference  '.' parameter=[ParameterDeclaration] ';'
		public Group getGroup() { return cGroup; }
		
		//'mean'
		public Keyword getMeanKeyword_0() { return cMeanKeyword_0; }
		
		//'parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//'of'
		public Keyword getOfKeyword_2() { return cOfKeyword_2; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_3() { return cEventAssignment_3; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_3_0() { return cEventComponentPortEventReferenceParserRuleCall_3_0; }
		
		//'.'
		public Keyword getFullStopKeyword_4() { return cFullStopKeyword_4; }
		
		//parameter=[ParameterDeclaration]
		public Assignment getParameterAssignment_5() { return cParameterAssignment_5; }
		
		//[ParameterDeclaration]
		public CrossReference getParameterParameterDeclarationCrossReference_5_0() { return cParameterParameterDeclarationCrossReference_5_0; }
		
		//ID
		public RuleCall getParameterParameterDeclarationIDTerminalRuleCall_5_0_1() { return cParameterParameterDeclarationIDTerminalRuleCall_5_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ParameterDistributionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ParameterDistribution");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDistributionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_3_0 = (RuleCall)cEventAssignment_3.eContents().get(0);
		private final Keyword cFullStopKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cParameterAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cParameterParameterDeclarationCrossReference_5_0 = (CrossReference)cParameterAssignment_5.eContents().get(0);
		private final RuleCall cParameterParameterDeclarationIDTerminalRuleCall_5_0_1 = (RuleCall)cParameterParameterDeclarationCrossReference_5_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ParameterDistribution returns AnalysisModel::ParameterDistribution:
		//    'parameter' 'distribution' 'of' event=ComponentPortEventReference '.' parameter=[ParameterDeclaration] ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'parameter' 'distribution' 'of' event=ComponentPortEventReference '.' parameter=[ParameterDeclaration] ';'
		public Group getGroup() { return cGroup; }
		
		//'parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//'distribution'
		public Keyword getDistributionKeyword_1() { return cDistributionKeyword_1; }
		
		//'of'
		public Keyword getOfKeyword_2() { return cOfKeyword_2; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_3() { return cEventAssignment_3; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_3_0() { return cEventComponentPortEventReferenceParserRuleCall_3_0; }
		
		//'.'
		public Keyword getFullStopKeyword_4() { return cFullStopKeyword_4; }
		
		//parameter=[ParameterDeclaration]
		public Assignment getParameterAssignment_5() { return cParameterAssignment_5; }
		
		//[ParameterDeclaration]
		public CrossReference getParameterParameterDeclarationCrossReference_5_0() { return cParameterParameterDeclarationCrossReference_5_0; }
		
		//ID
		public RuleCall getParameterParameterDeclarationIDTerminalRuleCall_5_0_1() { return cParameterParameterDeclarationIDTerminalRuleCall_5_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class ProbabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.Probability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProbabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Probability returns AnalysisModel::Probability:
		//    'probability' 'of' event=ComponentPortEventReference  ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'probability' 'of' event=ComponentPortEventReference  ';'
		public Group getGroup() { return cGroup; }
		
		//'probability'
		public Keyword getProbabilityKeyword_0() { return cProbabilityKeyword_0; }
		
		//'of'
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_2_0() { return cEventComponentPortEventReferenceParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class TimedProbabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.TimedProbability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProbabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		private final Keyword cUntilKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTimeLimitAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTimeLimitDOUBLETerminalRuleCall_4_0 = (RuleCall)cTimeLimitAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TimedProbability returns AnalysisModel::TimedProbability:
		//    'probability' 'of' event=ComponentPortEventReference  'until' timeLimit=DOUBLE ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'probability' 'of' event=ComponentPortEventReference  'until' timeLimit=DOUBLE ';'
		public Group getGroup() { return cGroup; }
		
		//'probability'
		public Keyword getProbabilityKeyword_0() { return cProbabilityKeyword_0; }
		
		//'of'
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_2_0() { return cEventComponentPortEventReferenceParserRuleCall_2_0; }
		
		//'until'
		public Keyword getUntilKeyword_3() { return cUntilKeyword_3; }
		
		//timeLimit=DOUBLE
		public Assignment getTimeLimitAssignment_4() { return cTimeLimitAssignment_4; }
		
		//DOUBLE
		public RuleCall getTimeLimitDOUBLETerminalRuleCall_4_0() { return cTimeLimitDOUBLETerminalRuleCall_4_0; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class TimeBoundedProbabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.TimeBoundedProbability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProbabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLowerBoundAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLowerBoundDOUBLETerminalRuleCall_4_0 = (RuleCall)cLowerBoundAssignment_4.eContents().get(0);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cUpperBoundAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cUpperBoundDOUBLETerminalRuleCall_6_0 = (RuleCall)cUpperBoundAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TimeBoundedProbability returns AnalysisModel::TimeBoundedProbability:
		//    'probability' 'of' event=ComponentPortEventReference  'from' lowerBound=DOUBLE 'to'upperBound=DOUBLE ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'probability' 'of' event=ComponentPortEventReference  'from' lowerBound=DOUBLE 'to'upperBound=DOUBLE ';'
		public Group getGroup() { return cGroup; }
		
		//'probability'
		public Keyword getProbabilityKeyword_0() { return cProbabilityKeyword_0; }
		
		//'of'
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_2_0() { return cEventComponentPortEventReferenceParserRuleCall_2_0; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//lowerBound=DOUBLE
		public Assignment getLowerBoundAssignment_4() { return cLowerBoundAssignment_4; }
		
		//DOUBLE
		public RuleCall getLowerBoundDOUBLETerminalRuleCall_4_0() { return cLowerBoundDOUBLETerminalRuleCall_4_0; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//upperBound=DOUBLE
		public Assignment getUpperBoundAssignment_6() { return cUpperBoundAssignment_6; }
		
		//DOUBLE
		public RuleCall getUpperBoundDOUBLETerminalRuleCall_6_0() { return cUpperBoundDOUBLETerminalRuleCall_6_0; }
		
		//';'
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class MeanTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.MeanTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMeanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTimeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_3_0 = (RuleCall)cEventAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MeanTime returns AnalysisModel::MeanTime:
		//    'mean' 'time' 'of' event=ComponentPortEventReference ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'mean' 'time' 'of' event=ComponentPortEventReference ';'
		public Group getGroup() { return cGroup; }
		
		//'mean'
		public Keyword getMeanKeyword_0() { return cMeanKeyword_0; }
		
		//'time'
		public Keyword getTimeKeyword_1() { return cTimeKeyword_1; }
		
		//'of'
		public Keyword getOfKeyword_2() { return cOfKeyword_2; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_3() { return cEventAssignment_3; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_3_0() { return cEventComponentPortEventReferenceParserRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class FrequencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.Frequency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFrequencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Frequency returns AnalysisModel::Frequency:
		//    'frequency' 'of' event=ComponentPortEventReference ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'frequency' 'of' event=ComponentPortEventReference ';'
		public Group getGroup() { return cGroup; }
		
		//'frequency'
		public Keyword getFrequencyKeyword_0() { return cFrequencyKeyword_0; }
		
		//'of'
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_2_0() { return cEventComponentPortEventReferenceParserRuleCall_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class EventTimeRatioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EventTimeRatio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTimeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRatioKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBetweenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_3_0 = (RuleCall)cEventAssignment_3.eContents().get(0);
		private final Keyword cAndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEvent2Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEvent2ComponentPortEventReferenceParserRuleCall_5_0 = (RuleCall)cEvent2Assignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EventTimeRatio returns AnalysisModel::EventTimeRatio:
		//    'time' 'ratio' 'between' event=ComponentPortEventReference 'and' event2=ComponentPortEventReference ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'time' 'ratio' 'between' event=ComponentPortEventReference 'and' event2=ComponentPortEventReference ';'
		public Group getGroup() { return cGroup; }
		
		//'time'
		public Keyword getTimeKeyword_0() { return cTimeKeyword_0; }
		
		//'ratio'
		public Keyword getRatioKeyword_1() { return cRatioKeyword_1; }
		
		//'between'
		public Keyword getBetweenKeyword_2() { return cBetweenKeyword_2; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_3() { return cEventAssignment_3; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_3_0() { return cEventComponentPortEventReferenceParserRuleCall_3_0; }
		
		//'and'
		public Keyword getAndKeyword_4() { return cAndKeyword_4; }
		
		//event2=ComponentPortEventReference
		public Assignment getEvent2Assignment_5() { return cEvent2Assignment_5; }
		
		//ComponentPortEventReference
		public RuleCall getEvent2ComponentPortEventReferenceParserRuleCall_5_0() { return cEvent2ComponentPortEventReferenceParserRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class MeanTimeBetweenEventsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.MeanTimeBetweenEvents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMeanKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTimeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cBetweenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_3_0 = (RuleCall)cEventAssignment_3.eContents().get(0);
		private final Keyword cAndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cEvent2Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cEvent2ComponentPortEventReferenceParserRuleCall_5_0 = (RuleCall)cEvent2Assignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//MeanTimeBetweenEvents returns AnalysisModel::MeanTimeBetweenEvents:
		//    'mean' 'time' 'between' event=ComponentPortEventReference 'and' event2=ComponentPortEventReference ';'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'mean' 'time' 'between' event=ComponentPortEventReference 'and' event2=ComponentPortEventReference ';'
		public Group getGroup() { return cGroup; }
		
		//'mean'
		public Keyword getMeanKeyword_0() { return cMeanKeyword_0; }
		
		//'time'
		public Keyword getTimeKeyword_1() { return cTimeKeyword_1; }
		
		//'between'
		public Keyword getBetweenKeyword_2() { return cBetweenKeyword_2; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_3() { return cEventAssignment_3; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_3_0() { return cEventComponentPortEventReferenceParserRuleCall_3_0; }
		
		//'and'
		public Keyword getAndKeyword_4() { return cAndKeyword_4; }
		
		//event2=ComponentPortEventReference
		public Assignment getEvent2Assignment_5() { return cEvent2Assignment_5; }
		
		//ComponentPortEventReference
		public RuleCall getEvent2ComponentPortEventReferenceParserRuleCall_5_0() { return cEvent2ComponentPortEventReferenceParserRuleCall_5_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class AssumeRaisedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AssumeRaised");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssumeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRaisedKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		
		////conditions
		//AssumeRaised returns AnalysisModel::AssumeRaised:
		//    'assume' 'raised' event=ComponentPortEventReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'assume' 'raised' event=ComponentPortEventReference
		public Group getGroup() { return cGroup; }
		
		//'assume'
		public Keyword getAssumeKeyword_0() { return cAssumeKeyword_0; }
		
		//'raised'
		public Keyword getRaisedKeyword_1() { return cRaisedKeyword_1; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_2_0() { return cEventComponentPortEventReferenceParserRuleCall_2_0; }
	}
	public class AssumeNotRaisedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AssumeNotRaised");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssumeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNotKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRaisedKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_3_0 = (RuleCall)cEventAssignment_3.eContents().get(0);
		
		//AssumeNotRaised returns AnalysisModel::AssumeNotRaised:
		//    'assume' 'not' 'raised' event=ComponentPortEventReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'assume' 'not' 'raised' event=ComponentPortEventReference
		public Group getGroup() { return cGroup; }
		
		//'assume'
		public Keyword getAssumeKeyword_0() { return cAssumeKeyword_0; }
		
		//'not'
		public Keyword getNotKeyword_1() { return cNotKeyword_1; }
		
		//'raised'
		public Keyword getRaisedKeyword_2() { return cRaisedKeyword_2; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_3() { return cEventAssignment_3; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_3_0() { return cEventComponentPortEventReferenceParserRuleCall_3_0; }
	}
	public class ObserveTimeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ObserveTime");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObserveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTimeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		private final Keyword cTildeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRandomvariableAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRandomvariableStochasticModelParserRuleCall_4_0 = (RuleCall)cRandomvariableAssignment_4.eContents().get(0);
		
		//ObserveTime returns AnalysisModel::ObserveTime:
		//    'observe' 'time'  event=ComponentPortEventReference  '~' randomvariable=StochasticModel
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'observe' 'time'  event=ComponentPortEventReference  '~' randomvariable=StochasticModel
		public Group getGroup() { return cGroup; }
		
		//'observe'
		public Keyword getObserveKeyword_0() { return cObserveKeyword_0; }
		
		//'time'
		public Keyword getTimeKeyword_1() { return cTimeKeyword_1; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_2_0() { return cEventComponentPortEventReferenceParserRuleCall_2_0; }
		
		//'~'
		public Keyword getTildeKeyword_3() { return cTildeKeyword_3; }
		
		//randomvariable=StochasticModel
		public Assignment getRandomvariableAssignment_4() { return cRandomvariableAssignment_4; }
		
		//StochasticModel
		public RuleCall getRandomvariableStochasticModelParserRuleCall_4_0() { return cRandomvariableStochasticModelParserRuleCall_4_0; }
	}
	public class ObserveParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ObserveParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObserveKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		private final Keyword cColonColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParameterAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cParameterParameterDeclarationCrossReference_4_0 = (CrossReference)cParameterAssignment_4.eContents().get(0);
		private final RuleCall cParameterParameterDeclarationIDTerminalRuleCall_4_0_1 = (RuleCall)cParameterParameterDeclarationCrossReference_4_0.eContents().get(1);
		private final Keyword cTildeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRandomvariableAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRandomvariableStochasticModelParserRuleCall_6_0 = (RuleCall)cRandomvariableAssignment_6.eContents().get(0);
		
		//ObserveParameter returns AnalysisModel::ObserveParameter:
		//    'observe' 'parameter' event=ComponentPortEventReference"::"parameter=[ParameterDeclaration] "~" randomvariable=StochasticModel
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'observe' 'parameter' event=ComponentPortEventReference"::"parameter=[ParameterDeclaration] "~" randomvariable=StochasticModel
		public Group getGroup() { return cGroup; }
		
		//'observe'
		public Keyword getObserveKeyword_0() { return cObserveKeyword_0; }
		
		//'parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_2_0() { return cEventComponentPortEventReferenceParserRuleCall_2_0; }
		
		//"::"
		public Keyword getColonColonKeyword_3() { return cColonColonKeyword_3; }
		
		//parameter=[ParameterDeclaration]
		public Assignment getParameterAssignment_4() { return cParameterAssignment_4; }
		
		//[ParameterDeclaration]
		public CrossReference getParameterParameterDeclarationCrossReference_4_0() { return cParameterParameterDeclarationCrossReference_4_0; }
		
		//ID
		public RuleCall getParameterParameterDeclarationIDTerminalRuleCall_4_0_1() { return cParameterParameterDeclarationIDTerminalRuleCall_4_0_1; }
		
		//"~"
		public Keyword getTildeKeyword_5() { return cTildeKeyword_5; }
		
		//randomvariable=StochasticModel
		public Assignment getRandomvariableAssignment_6() { return cRandomvariableAssignment_6; }
		
		//StochasticModel
		public RuleCall getRandomvariableStochasticModelParserRuleCall_6_0() { return cRandomvariableStochasticModelParserRuleCall_6_0; }
	}
	public class EndConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EndCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRaisedKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEventAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEventComponentPortEventReferenceParserRuleCall_3_0 = (RuleCall)cEventAssignment_3.eContents().get(0);
		
		//EndCondition returns AnalysisModel::EndCondition:
		//    'end' 'condition' 'raised' event=ComponentPortEventReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'end' 'condition' 'raised' event=ComponentPortEventReference
		public Group getGroup() { return cGroup; }
		
		//'end'
		public Keyword getEndKeyword_0() { return cEndKeyword_0; }
		
		//'condition'
		public Keyword getConditionKeyword_1() { return cConditionKeyword_1; }
		
		//'raised'
		public Keyword getRaisedKeyword_2() { return cRaisedKeyword_2; }
		
		//event=ComponentPortEventReference
		public Assignment getEventAssignment_3() { return cEventAssignment_3; }
		
		//ComponentPortEventReference
		public RuleCall getEventComponentPortEventReferenceParserRuleCall_3_0() { return cEventComponentPortEventReferenceParserRuleCall_3_0; }
	}
	public class AnalysisConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AnalysisCondition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAssumeRaisedParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssumeNotRaisedParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cObserveParameterParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cObserveTimeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//AnalysisCondition returns AnalysisModel::AnalysisCondition:
		//    AssumeRaised | AssumeNotRaised | ObserveParameter | ObserveTime
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AssumeRaised | AssumeNotRaised | ObserveParameter | ObserveTime
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AssumeRaised
		public RuleCall getAssumeRaisedParserRuleCall_0() { return cAssumeRaisedParserRuleCall_0; }
		
		//AssumeNotRaised
		public RuleCall getAssumeNotRaisedParserRuleCall_1() { return cAssumeNotRaisedParserRuleCall_1; }
		
		//ObserveParameter
		public RuleCall getObserveParameterParserRuleCall_2() { return cObserveParameterParserRuleCall_2; }
		
		//ObserveTime
		public RuleCall getObserveTimeParserRuleCall_3() { return cObserveTimeParserRuleCall_3; }
	}
	public class PrioryDistributionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.PrioryDistribution");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPriorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParameterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cParameterParameterDeclarationCrossReference_1_0 = (CrossReference)cParameterAssignment_1.eContents().get(0);
		private final RuleCall cParameterParameterDeclarationIDTerminalRuleCall_1_0_1 = (RuleCall)cParameterParameterDeclarationCrossReference_1_0.eContents().get(1);
		private final Keyword cTildeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRandomvariableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRandomvariableRandomVariableParserRuleCall_3_0 = (RuleCall)cRandomvariableAssignment_3.eContents().get(0);
		
		//PrioryDistribution returns AnalysisModel::PrioryDistribution:
		//    'prior' parameter=[ParameterDeclaration] '~' randomvariable=RandomVariable
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'prior' parameter=[ParameterDeclaration] '~' randomvariable=RandomVariable
		public Group getGroup() { return cGroup; }
		
		//'prior'
		public Keyword getPriorKeyword_0() { return cPriorKeyword_0; }
		
		//parameter=[ParameterDeclaration]
		public Assignment getParameterAssignment_1() { return cParameterAssignment_1; }
		
		//[ParameterDeclaration]
		public CrossReference getParameterParameterDeclarationCrossReference_1_0() { return cParameterParameterDeclarationCrossReference_1_0; }
		
		//ID
		public RuleCall getParameterParameterDeclarationIDTerminalRuleCall_1_0_1() { return cParameterParameterDeclarationIDTerminalRuleCall_1_0_1; }
		
		//'~'
		public Keyword getTildeKeyword_2() { return cTildeKeyword_2; }
		
		//randomvariable=RandomVariable
		public Assignment getRandomvariableAssignment_3() { return cRandomvariableAssignment_3; }
		
		//RandomVariable
		public RuleCall getRandomvariableRandomVariableParserRuleCall_3_0() { return cRandomvariableRandomVariableParserRuleCall_3_0; }
	}
	public class EnvironmentCascadeCompositeComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentCascadeCompositeComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStochasticKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCascadeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Assignment cParameterDeclarationsAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0 = (RuleCall)cParameterDeclarationsAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cParameterDeclarationsAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0 = (RuleCall)cParameterDeclarationsAssignment_3_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Assignment cPortsAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cPortsPortParserRuleCall_4_1_0_0 = (RuleCall)cPortsAssignment_4_1_0.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cGroup_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Assignment cPortsAssignment_4_1_1_1 = (Assignment)cGroup_4_1_1.eContents().get(1);
		private final RuleCall cPortsPortParserRuleCall_4_1_1_1_0 = (RuleCall)cPortsAssignment_4_1_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cComponentsAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cComponentsSynchronousComponentInstanceParserRuleCall_6_0_0 = (RuleCall)cComponentsAssignment_6_0.eContents().get(0);
		private final Assignment cEnvironmentComponentsAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0 = (RuleCall)cEnvironmentComponentsAssignment_6_1.eContents().get(0);
		private final Assignment cPortBindingsAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cPortBindingsPortBindingParserRuleCall_6_2_0 = (RuleCall)cPortBindingsAssignment_6_2.eContents().get(0);
		private final Assignment cChannelsAssignment_6_3 = (Assignment)cAlternatives_6.eContents().get(3);
		private final RuleCall cChannelsChannelParserRuleCall_6_3_0 = (RuleCall)cChannelsAssignment_6_3.eContents().get(0);
		private final Group cGroup_6_4 = (Group)cAlternatives_6.eContents().get(4);
		private final Keyword cInitialKeyword_6_4_0 = (Keyword)cGroup_6_4.eContents().get(0);
		private final Keyword cExecuteKeyword_6_4_1 = (Keyword)cGroup_6_4.eContents().get(1);
		private final Assignment cInitialExecutionListAssignment_6_4_2 = (Assignment)cGroup_6_4.eContents().get(2);
		private final RuleCall cInitialExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_4_2_0 = (RuleCall)cInitialExecutionListAssignment_6_4_2.eContents().get(0);
		private final Group cGroup_6_4_3 = (Group)cGroup_6_4.eContents().get(3);
		private final Keyword cCommaKeyword_6_4_3_0 = (Keyword)cGroup_6_4_3.eContents().get(0);
		private final Assignment cInitialExecutionListAssignment_6_4_3_1 = (Assignment)cGroup_6_4_3.eContents().get(1);
		private final RuleCall cInitialExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_4_3_1_0 = (RuleCall)cInitialExecutionListAssignment_6_4_3_1.eContents().get(0);
		private final Group cGroup_6_5 = (Group)cAlternatives_6.eContents().get(5);
		private final Keyword cExecuteKeyword_6_5_0 = (Keyword)cGroup_6_5.eContents().get(0);
		private final Assignment cExecutionListAssignment_6_5_1 = (Assignment)cGroup_6_5.eContents().get(1);
		private final RuleCall cExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_5_1_0 = (RuleCall)cExecutionListAssignment_6_5_1.eContents().get(0);
		private final Group cGroup_6_5_2 = (Group)cGroup_6_5.eContents().get(2);
		private final Keyword cCommaKeyword_6_5_2_0 = (Keyword)cGroup_6_5_2.eContents().get(0);
		private final Assignment cExecutionListAssignment_6_5_2_1 = (Assignment)cGroup_6_5_2.eContents().get(1);
		private final RuleCall cExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_5_2_1_0 = (RuleCall)cExecutionListAssignment_6_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////defining Environment models
		//EnvironmentCascadeCompositeComponent returns EnvironmentModel::EnvironmentCascadeCompositeComponent:
		//    'stochastic' 'cascade' name=ID
		//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		//        '{'
		//            (
		//                components+=SynchronousComponentInstance |
		//                environmentComponents+=EnvironmentComponentInstance |
		//                portBindings+=PortBinding |
		//                channels+=Channel |
		//            ('initial' 'execute' initialExecutionList+=AtomicComponentInstanceReferenceExpression
		//                    (',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*) |
		//            ('execute' executionList+=AtomicComponentInstanceReferenceExpression
		//                    (',' executionList+=AtomicComponentInstanceReferenceExpression)*)
		//        )*
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stochastic' 'cascade' name=ID
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//    ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		//    '{'
		//        (
		//            components+=SynchronousComponentInstance |
		//            environmentComponents+=EnvironmentComponentInstance |
		//            portBindings+=PortBinding |
		//            channels+=Channel |
		//        ('initial' 'execute' initialExecutionList+=AtomicComponentInstanceReferenceExpression
		//                (',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*) |
		//        ('execute' executionList+=AtomicComponentInstanceReferenceExpression
		//                (',' executionList+=AtomicComponentInstanceReferenceExpression)*)
		//    )*
		//    '}'
		public Group getGroup() { return cGroup; }
		
		//'stochastic'
		public Keyword getStochasticKeyword_0() { return cStochasticKeyword_0; }
		
		//'cascade'
		public Keyword getCascadeKeyword_1() { return cCascadeKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//(parameterDeclarations+=ParameterDeclaration)
		public Assignment getParameterDeclarationsAssignment_3_1_0() { return cParameterDeclarationsAssignment_3_1_0; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0; }
		
		//(',' parameterDeclarations+=ParameterDeclaration)*
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_1_0() { return cCommaKeyword_3_1_1_0; }
		
		//parameterDeclarations+=ParameterDeclaration
		public Assignment getParameterDeclarationsAssignment_3_1_1_1() { return cParameterDeclarationsAssignment_3_1_1_1; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
		
		//('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//((ports+=Port)((',')? ports+=Port)*)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//(ports+=Port)
		public Assignment getPortsAssignment_4_1_0() { return cPortsAssignment_4_1_0; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_4_1_0_0() { return cPortsPortParserRuleCall_4_1_0_0; }
		
		//((',')? ports+=Port)*
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//(',')?
		public Keyword getCommaKeyword_4_1_1_0() { return cCommaKeyword_4_1_1_0; }
		
		//ports+=Port
		public Assignment getPortsAssignment_4_1_1_1() { return cPortsAssignment_4_1_1_1; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_4_1_1_1_0() { return cPortsPortParserRuleCall_4_1_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_2() { return cRightSquareBracketKeyword_4_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//    (
		//        components+=SynchronousComponentInstance |
		//        environmentComponents+=EnvironmentComponentInstance |
		//        portBindings+=PortBinding |
		//        channels+=Channel |
		//    ('initial' 'execute' initialExecutionList+=AtomicComponentInstanceReferenceExpression
		//            (',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*) |
		//    ('execute' executionList+=AtomicComponentInstanceReferenceExpression
		//            (',' executionList+=AtomicComponentInstanceReferenceExpression)*)
		//)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//components+=SynchronousComponentInstance
		public Assignment getComponentsAssignment_6_0() { return cComponentsAssignment_6_0; }
		
		//SynchronousComponentInstance
		public RuleCall getComponentsSynchronousComponentInstanceParserRuleCall_6_0_0() { return cComponentsSynchronousComponentInstanceParserRuleCall_6_0_0; }
		
		//environmentComponents+=EnvironmentComponentInstance
		public Assignment getEnvironmentComponentsAssignment_6_1() { return cEnvironmentComponentsAssignment_6_1; }
		
		//EnvironmentComponentInstance
		public RuleCall getEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0() { return cEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0; }
		
		//portBindings+=PortBinding
		public Assignment getPortBindingsAssignment_6_2() { return cPortBindingsAssignment_6_2; }
		
		//PortBinding
		public RuleCall getPortBindingsPortBindingParserRuleCall_6_2_0() { return cPortBindingsPortBindingParserRuleCall_6_2_0; }
		
		//channels+=Channel
		public Assignment getChannelsAssignment_6_3() { return cChannelsAssignment_6_3; }
		
		//Channel
		public RuleCall getChannelsChannelParserRuleCall_6_3_0() { return cChannelsChannelParserRuleCall_6_3_0; }
		
		//('initial' 'execute' initialExecutionList+=AtomicComponentInstanceReferenceExpression
		//        (',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*)
		public Group getGroup_6_4() { return cGroup_6_4; }
		
		//'initial'
		public Keyword getInitialKeyword_6_4_0() { return cInitialKeyword_6_4_0; }
		
		//'execute'
		public Keyword getExecuteKeyword_6_4_1() { return cExecuteKeyword_6_4_1; }
		
		//initialExecutionList+=AtomicComponentInstanceReferenceExpression
		public Assignment getInitialExecutionListAssignment_6_4_2() { return cInitialExecutionListAssignment_6_4_2; }
		
		//AtomicComponentInstanceReferenceExpression
		public RuleCall getInitialExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_4_2_0() { return cInitialExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_4_2_0; }
		
		//(',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*
		public Group getGroup_6_4_3() { return cGroup_6_4_3; }
		
		//','
		public Keyword getCommaKeyword_6_4_3_0() { return cCommaKeyword_6_4_3_0; }
		
		//initialExecutionList+=AtomicComponentInstanceReferenceExpression
		public Assignment getInitialExecutionListAssignment_6_4_3_1() { return cInitialExecutionListAssignment_6_4_3_1; }
		
		//AtomicComponentInstanceReferenceExpression
		public RuleCall getInitialExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_4_3_1_0() { return cInitialExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_4_3_1_0; }
		
		//('execute' executionList+=AtomicComponentInstanceReferenceExpression
		//        (',' executionList+=AtomicComponentInstanceReferenceExpression)*)
		public Group getGroup_6_5() { return cGroup_6_5; }
		
		//'execute'
		public Keyword getExecuteKeyword_6_5_0() { return cExecuteKeyword_6_5_0; }
		
		//executionList+=AtomicComponentInstanceReferenceExpression
		public Assignment getExecutionListAssignment_6_5_1() { return cExecutionListAssignment_6_5_1; }
		
		//AtomicComponentInstanceReferenceExpression
		public RuleCall getExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_5_1_0() { return cExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_5_1_0; }
		
		//(',' executionList+=AtomicComponentInstanceReferenceExpression)*
		public Group getGroup_6_5_2() { return cGroup_6_5_2; }
		
		//','
		public Keyword getCommaKeyword_6_5_2_0() { return cCommaKeyword_6_5_2_0; }
		
		//executionList+=AtomicComponentInstanceReferenceExpression
		public Assignment getExecutionListAssignment_6_5_2_1() { return cExecutionListAssignment_6_5_2_1; }
		
		//AtomicComponentInstanceReferenceExpression
		public RuleCall getExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_5_2_1_0() { return cExecutionListAtomicComponentInstanceReferenceExpressionParserRuleCall_6_5_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EnvironmentSynchronousCompositeComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentSynchronousCompositeComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStochasticKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSyncKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Assignment cParameterDeclarationsAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0 = (RuleCall)cParameterDeclarationsAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cParameterDeclarationsAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0 = (RuleCall)cParameterDeclarationsAssignment_3_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Assignment cPortsAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cPortsPortParserRuleCall_4_1_0_0 = (RuleCall)cPortsAssignment_4_1_0.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cGroup_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Assignment cPortsAssignment_4_1_1_1 = (Assignment)cGroup_4_1_1.eContents().get(1);
		private final RuleCall cPortsPortParserRuleCall_4_1_1_1_0 = (RuleCall)cPortsAssignment_4_1_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cComponentsAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cComponentsSynchronousComponentInstanceParserRuleCall_6_0_0 = (RuleCall)cComponentsAssignment_6_0.eContents().get(0);
		private final Assignment cEnvironmentComponentsAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0 = (RuleCall)cEnvironmentComponentsAssignment_6_1.eContents().get(0);
		private final Assignment cPortBindingsAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cPortBindingsPortBindingParserRuleCall_6_2_0 = (RuleCall)cPortBindingsAssignment_6_2.eContents().get(0);
		private final Assignment cChannelsAssignment_6_3 = (Assignment)cAlternatives_6.eContents().get(3);
		private final RuleCall cChannelsChannelParserRuleCall_6_3_0 = (RuleCall)cChannelsAssignment_6_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EnvironmentSynchronousCompositeComponent returns EnvironmentModel::EnvironmentSynchronousCompositeComponent:
		//    'stochastic' 'sync' name=ID
		//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		//        '{'
		//            (
		//                components+=SynchronousComponentInstance |
		//                environmentComponents+=EnvironmentComponentInstance |
		//                portBindings+=PortBinding |
		//                channels+=Channel
		//            )*
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stochastic' 'sync' name=ID
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//    ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		//    '{'
		//        (
		//            components+=SynchronousComponentInstance |
		//            environmentComponents+=EnvironmentComponentInstance |
		//            portBindings+=PortBinding |
		//            channels+=Channel
		//        )*
		//    '}'
		public Group getGroup() { return cGroup; }
		
		//'stochastic'
		public Keyword getStochasticKeyword_0() { return cStochasticKeyword_0; }
		
		//'sync'
		public Keyword getSyncKeyword_1() { return cSyncKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//(parameterDeclarations+=ParameterDeclaration)
		public Assignment getParameterDeclarationsAssignment_3_1_0() { return cParameterDeclarationsAssignment_3_1_0; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0; }
		
		//(',' parameterDeclarations+=ParameterDeclaration)*
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_1_0() { return cCommaKeyword_3_1_1_0; }
		
		//parameterDeclarations+=ParameterDeclaration
		public Assignment getParameterDeclarationsAssignment_3_1_1_1() { return cParameterDeclarationsAssignment_3_1_1_1; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
		
		//('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//((ports+=Port)((',')? ports+=Port)*)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//(ports+=Port)
		public Assignment getPortsAssignment_4_1_0() { return cPortsAssignment_4_1_0; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_4_1_0_0() { return cPortsPortParserRuleCall_4_1_0_0; }
		
		//((',')? ports+=Port)*
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//(',')?
		public Keyword getCommaKeyword_4_1_1_0() { return cCommaKeyword_4_1_1_0; }
		
		//ports+=Port
		public Assignment getPortsAssignment_4_1_1_1() { return cPortsAssignment_4_1_1_1; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_4_1_1_1_0() { return cPortsPortParserRuleCall_4_1_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_2() { return cRightSquareBracketKeyword_4_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(
		//    components+=SynchronousComponentInstance |
		//    environmentComponents+=EnvironmentComponentInstance |
		//    portBindings+=PortBinding |
		//    channels+=Channel
		//)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//components+=SynchronousComponentInstance
		public Assignment getComponentsAssignment_6_0() { return cComponentsAssignment_6_0; }
		
		//SynchronousComponentInstance
		public RuleCall getComponentsSynchronousComponentInstanceParserRuleCall_6_0_0() { return cComponentsSynchronousComponentInstanceParserRuleCall_6_0_0; }
		
		//environmentComponents+=EnvironmentComponentInstance
		public Assignment getEnvironmentComponentsAssignment_6_1() { return cEnvironmentComponentsAssignment_6_1; }
		
		//EnvironmentComponentInstance
		public RuleCall getEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0() { return cEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0; }
		
		//portBindings+=PortBinding
		public Assignment getPortBindingsAssignment_6_2() { return cPortBindingsAssignment_6_2; }
		
		//PortBinding
		public RuleCall getPortBindingsPortBindingParserRuleCall_6_2_0() { return cPortBindingsPortBindingParserRuleCall_6_2_0; }
		
		//channels+=Channel
		public Assignment getChannelsAssignment_6_3() { return cChannelsAssignment_6_3; }
		
		//Channel
		public RuleCall getChannelsChannelParserRuleCall_6_3_0() { return cChannelsChannelParserRuleCall_6_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EnvironmentAsynchronousCompositeComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentAsynchronousCompositeComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStochasticKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAsyncKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Assignment cParameterDeclarationsAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0 = (RuleCall)cParameterDeclarationsAssignment_3_1_0.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cGroup_3_1.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cParameterDeclarationsAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0 = (RuleCall)cParameterDeclarationsAssignment_3_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Assignment cPortsAssignment_4_1_0 = (Assignment)cGroup_4_1.eContents().get(0);
		private final RuleCall cPortsPortParserRuleCall_4_1_0_0 = (RuleCall)cPortsAssignment_4_1_0.eContents().get(0);
		private final Group cGroup_4_1_1 = (Group)cGroup_4_1.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Assignment cPortsAssignment_4_1_1_1 = (Assignment)cGroup_4_1_1.eContents().get(1);
		private final RuleCall cPortsPortParserRuleCall_4_1_1_1_0 = (RuleCall)cPortsAssignment_4_1_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cComponentsAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cComponentsAsynchronousComponentInstanceParserRuleCall_6_0_0 = (RuleCall)cComponentsAssignment_6_0.eContents().get(0);
		private final Assignment cEnvironmentComponentsAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0 = (RuleCall)cEnvironmentComponentsAssignment_6_1.eContents().get(0);
		private final Assignment cPortBindingsAssignment_6_2 = (Assignment)cAlternatives_6.eContents().get(2);
		private final RuleCall cPortBindingsPortBindingParserRuleCall_6_2_0 = (RuleCall)cPortBindingsAssignment_6_2.eContents().get(0);
		private final Assignment cChannelsAssignment_6_3 = (Assignment)cAlternatives_6.eContents().get(3);
		private final RuleCall cChannelsChannelParserRuleCall_6_3_0 = (RuleCall)cChannelsAssignment_6_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EnvironmentAsynchronousCompositeComponent returns EnvironmentModel::EnvironmentAsynchronousCompositeComponent:
		//    'stochastic' 'async' name=ID
		//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		//        '{'
		//            (
		//                components+=AsynchronousComponentInstance |
		//                environmentComponents+=EnvironmentComponentInstance |
		//                portBindings+=PortBinding |
		//                channels+=Channel
		//            )*
		//        '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stochastic' 'async' name=ID
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		//    ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		//    '{'
		//        (
		//            components+=AsynchronousComponentInstance |
		//            environmentComponents+=EnvironmentComponentInstance |
		//            portBindings+=PortBinding |
		//            channels+=Channel
		//        )*
		//    '}'
		public Group getGroup() { return cGroup; }
		
		//'stochastic'
		public Keyword getStochasticKeyword_0() { return cStochasticKeyword_0; }
		
		//'async'
		public Keyword getAsyncKeyword_1() { return cAsyncKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }
		
		//((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//(parameterDeclarations+=ParameterDeclaration)
		public Assignment getParameterDeclarationsAssignment_3_1_0() { return cParameterDeclarationsAssignment_3_1_0; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0_0; }
		
		//(',' parameterDeclarations+=ParameterDeclaration)*
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_1_0() { return cCommaKeyword_3_1_1_0; }
		
		//parameterDeclarations+=ParameterDeclaration
		public Assignment getParameterDeclarationsAssignment_3_1_1_1() { return cParameterDeclarationsAssignment_3_1_1_1; }
		
		//ParameterDeclaration
		public RuleCall getParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0() { return cParameterDeclarationsParameterDeclarationParserRuleCall_3_1_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
		
		//('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }
		
		//((ports+=Port)((',')? ports+=Port)*)?
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//(ports+=Port)
		public Assignment getPortsAssignment_4_1_0() { return cPortsAssignment_4_1_0; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_4_1_0_0() { return cPortsPortParserRuleCall_4_1_0_0; }
		
		//((',')? ports+=Port)*
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }
		
		//(',')?
		public Keyword getCommaKeyword_4_1_1_0() { return cCommaKeyword_4_1_1_0; }
		
		//ports+=Port
		public Assignment getPortsAssignment_4_1_1_1() { return cPortsAssignment_4_1_1_1; }
		
		//Port
		public RuleCall getPortsPortParserRuleCall_4_1_1_1_0() { return cPortsPortParserRuleCall_4_1_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_2() { return cRightSquareBracketKeyword_4_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(
		//    components+=AsynchronousComponentInstance |
		//    environmentComponents+=EnvironmentComponentInstance |
		//    portBindings+=PortBinding |
		//    channels+=Channel
		//)*
		public Alternatives getAlternatives_6() { return cAlternatives_6; }
		
		//components+=AsynchronousComponentInstance
		public Assignment getComponentsAssignment_6_0() { return cComponentsAssignment_6_0; }
		
		//AsynchronousComponentInstance
		public RuleCall getComponentsAsynchronousComponentInstanceParserRuleCall_6_0_0() { return cComponentsAsynchronousComponentInstanceParserRuleCall_6_0_0; }
		
		//environmentComponents+=EnvironmentComponentInstance
		public Assignment getEnvironmentComponentsAssignment_6_1() { return cEnvironmentComponentsAssignment_6_1; }
		
		//EnvironmentComponentInstance
		public RuleCall getEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0() { return cEnvironmentComponentsEnvironmentComponentInstanceParserRuleCall_6_1_0; }
		
		//portBindings+=PortBinding
		public Assignment getPortBindingsAssignment_6_2() { return cPortBindingsAssignment_6_2; }
		
		//PortBinding
		public RuleCall getPortBindingsPortBindingParserRuleCall_6_2_0() { return cPortBindingsPortBindingParserRuleCall_6_2_0; }
		
		//channels+=Channel
		public Assignment getChannelsAssignment_6_3() { return cChannelsAssignment_6_3; }
		
		//Channel
		public RuleCall getChannelsChannelParserRuleCall_6_3_0() { return cChannelsChannelParserRuleCall_6_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EnvironmentAsynchronousCompositeComponentInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentAsynchronousCompositeComponentInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStochasticKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeEnvironmentAsynchronousCompositeComponentCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeEnvironmentAsynchronousCompositeComponentIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeEnvironmentAsynchronousCompositeComponentCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cArgumentsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cArgumentsMixedExpressionParserRuleCall_5_1_0 = (RuleCall)cArgumentsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cArgumentsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cArgumentsMixedExpressionParserRuleCall_5_2_1_0 = (RuleCall)cArgumentsAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		///*
		//@Override
		//Package returns StatechartModel::Package:
		//    super
		//;*/
		//// Composition language
		///*
		//EnvironmentCascadeCompositeComponentInstance returns EnvironmentModel::EnvironmentCascadeCompositeComponentInstance:
		//    'stoch' 'component' name=ID ':' type=[EnvironmentModel::EnvironmentCascadeCompositeComponent] ('(' arguments+=Expression (',' arguments+=Expression)* ')')?
		//;*/
		///*EnvironmentSynchronousCompositeComponentInstance returns EnvironmentModel::EnvironmentSynchronousCompositeComponentInstance:
		//    'stoch1' 'component' name=ID ':' type=[EnvironmentModel::EnvironmentSynchronousCompositeComponent] ('(' arguments+=Expression (',' arguments+=Expression)* ')')?
		//;*/
		//EnvironmentAsynchronousCompositeComponentInstance returns EnvironmentModel::EnvironmentAsynchronousCompositeComponentInstance:
		//    'stochastic' 'component' name=ID ':' type=[EnvironmentModel::EnvironmentAsynchronousCompositeComponent] ('(' arguments+=MixedExpression (',' arguments+=MixedExpression)* ')')?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'stochastic' 'component' name=ID ':' type=[EnvironmentModel::EnvironmentAsynchronousCompositeComponent] ('(' arguments+=MixedExpression (',' arguments+=MixedExpression)* ')')?
		public Group getGroup() { return cGroup; }
		
		//'stochastic'
		public Keyword getStochasticKeyword_0() { return cStochasticKeyword_0; }
		
		//'component'
		public Keyword getComponentKeyword_1() { return cComponentKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//type=[EnvironmentModel::EnvironmentAsynchronousCompositeComponent]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//[EnvironmentModel::EnvironmentAsynchronousCompositeComponent]
		public CrossReference getTypeEnvironmentAsynchronousCompositeComponentCrossReference_4_0() { return cTypeEnvironmentAsynchronousCompositeComponentCrossReference_4_0; }
		
		//ID
		public RuleCall getTypeEnvironmentAsynchronousCompositeComponentIDTerminalRuleCall_4_0_1() { return cTypeEnvironmentAsynchronousCompositeComponentIDTerminalRuleCall_4_0_1; }
		
		//('(' arguments+=MixedExpression (',' arguments+=MixedExpression)* ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }
		
		//arguments+=MixedExpression
		public Assignment getArgumentsAssignment_5_1() { return cArgumentsAssignment_5_1; }
		
		//MixedExpression
		public RuleCall getArgumentsMixedExpressionParserRuleCall_5_1_0() { return cArgumentsMixedExpressionParserRuleCall_5_1_0; }
		
		//(',' arguments+=MixedExpression)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//','
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//arguments+=MixedExpression
		public Assignment getArgumentsAssignment_5_2_1() { return cArgumentsAssignment_5_2_1; }
		
		//MixedExpression
		public RuleCall getArgumentsMixedExpressionParserRuleCall_5_2_1_0() { return cArgumentsMixedExpressionParserRuleCall_5_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_3() { return cRightParenthesisKeyword_5_3; }
	}
	public class AbstractEnvironmentCompositeComponentInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AbstractEnvironmentCompositeComponentInstance");
		private final RuleCall cEnvironmentAsynchronousCompositeComponentInstanceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractEnvironmentCompositeComponentInstance returns EnvironmentModel::AbstractEnvironmentCompositeComponentInstance:
		//    //EnvironmentCascadeCompositeComponentInstance |
		//    //EnvironmentSynchronousCompositeComponentInstance |
		//    EnvironmentAsynchronousCompositeComponentInstance
		//;
		@Override public ParserRule getRule() { return rule; }
		
		////EnvironmentCascadeCompositeComponentInstance |
		////EnvironmentSynchronousCompositeComponentInstance |
		//EnvironmentAsynchronousCompositeComponentInstance
		public RuleCall getEnvironmentAsynchronousCompositeComponentInstanceParserRuleCall() { return cEnvironmentAsynchronousCompositeComponentInstanceParserRuleCall; }
	}
	public class EnvironmentComponentInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentComponentInstance");
		private final RuleCall cElementaryEnvironmentComponentInstanceParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EnvironmentComponentInstance returns EnvironmentModel::EnvironmentComponentInstance:
		//    ElementaryEnvironmentComponentInstance
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ElementaryEnvironmentComponentInstance
		public RuleCall getElementaryEnvironmentComponentInstanceParserRuleCall() { return cElementaryEnvironmentComponentInstanceParserRuleCall; }
	}
	public class ElementaryEnvironmentComponentInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ElementaryEnvironmentComponentInstance");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEnvironementEventSourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPeriodicEnvironementEventSourceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnvironmentDelayParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEnvironmentSampleParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEnvironmentSwitchParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEnvironmentExternSimulationParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//ElementaryEnvironmentComponentInstance returns EnvironmentModel::ElementaryEnvironmentComponentInstance:
		//    EnvironementEventSource | PeriodicEnvironementEventSource | EnvironmentDelay | EnvironmentSample | EnvironmentSwitch | EnvironmentExternSimulation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EnvironementEventSource | PeriodicEnvironementEventSource | EnvironmentDelay | EnvironmentSample | EnvironmentSwitch | EnvironmentExternSimulation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EnvironementEventSource
		public RuleCall getEnvironementEventSourceParserRuleCall_0() { return cEnvironementEventSourceParserRuleCall_0; }
		
		//PeriodicEnvironementEventSource
		public RuleCall getPeriodicEnvironementEventSourceParserRuleCall_1() { return cPeriodicEnvironementEventSourceParserRuleCall_1; }
		
		//EnvironmentDelay
		public RuleCall getEnvironmentDelayParserRuleCall_2() { return cEnvironmentDelayParserRuleCall_2; }
		
		//EnvironmentSample
		public RuleCall getEnvironmentSampleParserRuleCall_3() { return cEnvironmentSampleParserRuleCall_3; }
		
		//EnvironmentSwitch
		public RuleCall getEnvironmentSwitchParserRuleCall_4() { return cEnvironmentSwitchParserRuleCall_4; }
		
		//EnvironmentExternSimulation
		public RuleCall getEnvironmentExternSimulationParserRuleCall_5() { return cEnvironmentExternSimulationParserRuleCall_5; }
	}
	public class StochasticRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.StochasticRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cFilterAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cFilterFilterParserRuleCall_0_0_0 = (RuleCall)cFilterAssignment_0_0.eContents().get(0);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cFilterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFilterFilterParserRuleCall_1_0 = (RuleCall)cFilterAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStochasticModelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStochasticModelStochasticModelParserRuleCall_3_0 = (RuleCall)cStochasticModelAssignment_3.eContents().get(0);
		
		//StochasticRule returns EnvironmentModel::StochasticRule:
		//    (filter+=Filter ",")* filter+=Filter ":" stochasticModel=StochasticModel
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(filter+=Filter ",")* filter+=Filter ":" stochasticModel=StochasticModel
		public Group getGroup() { return cGroup; }
		
		//(filter+=Filter ",")*
		public Group getGroup_0() { return cGroup_0; }
		
		//filter+=Filter
		public Assignment getFilterAssignment_0_0() { return cFilterAssignment_0_0; }
		
		//Filter
		public RuleCall getFilterFilterParserRuleCall_0_0_0() { return cFilterFilterParserRuleCall_0_0_0; }
		
		//","
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }
		
		//filter+=Filter
		public Assignment getFilterAssignment_1() { return cFilterAssignment_1; }
		
		//Filter
		public RuleCall getFilterFilterParserRuleCall_1_0() { return cFilterFilterParserRuleCall_1_0; }
		
		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//stochasticModel=StochasticModel
		public Assignment getStochasticModelAssignment_3() { return cStochasticModelAssignment_3; }
		
		//StochasticModel
		public RuleCall getStochasticModelStochasticModelParserRuleCall_3_0() { return cStochasticModelStochasticModelParserRuleCall_3_0; }
	}
	public class FilterSimulationRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.FilterSimulationRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cFilterAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cFilterParameterFilterParserRuleCall_0_0_0 = (RuleCall)cFilterAssignment_0_0.eContents().get(0);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cFilterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFilterParameterFilterParserRuleCall_1_0 = (RuleCall)cFilterAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSimulationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSimulationSimulationParserRuleCall_3_0 = (RuleCall)cSimulationAssignment_3.eContents().get(0);
		
		//FilterSimulationRule returns EnvironmentModel::SimulationRule:
		//    (filter+=ParameterFilter ",")* filter+=ParameterFilter ":" simulation=Simulation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(filter+=ParameterFilter ",")* filter+=ParameterFilter ":" simulation=Simulation
		public Group getGroup() { return cGroup; }
		
		//(filter+=ParameterFilter ",")*
		public Group getGroup_0() { return cGroup_0; }
		
		//filter+=ParameterFilter
		public Assignment getFilterAssignment_0_0() { return cFilterAssignment_0_0; }
		
		//ParameterFilter
		public RuleCall getFilterParameterFilterParserRuleCall_0_0_0() { return cFilterParameterFilterParserRuleCall_0_0_0; }
		
		//","
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }
		
		//filter+=ParameterFilter
		public Assignment getFilterAssignment_1() { return cFilterAssignment_1; }
		
		//ParameterFilter
		public RuleCall getFilterParameterFilterParserRuleCall_1_0() { return cFilterParameterFilterParserRuleCall_1_0; }
		
		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//simulation=Simulation
		public Assignment getSimulationAssignment_3() { return cSimulationAssignment_3; }
		
		//Simulation
		public RuleCall getSimulationSimulationParserRuleCall_3_0() { return cSimulationSimulationParserRuleCall_3_0; }
	}
	public class SwitchRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.SwitchRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFilterAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFilterPortFilterParserRuleCall_0_0 = (RuleCall)cFilterAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStochasticModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStochasticModelCategoricalProbabailityParserRuleCall_2_0 = (RuleCall)cStochasticModelAssignment_2.eContents().get(0);
		
		//SwitchRule returns EnvironmentModel::StochasticRule:
		//    filter+=PortFilter ':' stochasticModel=CategoricalProbabaility
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//filter+=PortFilter ':' stochasticModel=CategoricalProbabaility
		public Group getGroup() { return cGroup; }
		
		//filter+=PortFilter
		public Assignment getFilterAssignment_0() { return cFilterAssignment_0; }
		
		//PortFilter
		public RuleCall getFilterPortFilterParserRuleCall_0_0() { return cFilterPortFilterParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//stochasticModel=CategoricalProbabaility
		public Assignment getStochasticModelAssignment_2() { return cStochasticModelAssignment_2; }
		
		//CategoricalProbabaility
		public RuleCall getStochasticModelCategoricalProbabailityParserRuleCall_2_0() { return cStochasticModelCategoricalProbabailityParserRuleCall_2_0; }
	}
	public class DelayRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.DelayRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cFilterAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cFilterPortFilterParserRuleCall_0_0_0 = (RuleCall)cFilterAssignment_0_0.eContents().get(0);
		private final Assignment cFilterAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cFilterComponentFilterParserRuleCall_0_1_0 = (RuleCall)cFilterAssignment_0_1.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cStochasticModelAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cStochasticModelContinouosRandomVariableParserRuleCall_2_0_0 = (RuleCall)cStochasticModelAssignment_2_0.eContents().get(0);
		private final Assignment cStochasticModelAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cStochasticModelStochasticProcessParserRuleCall_2_1_0 = (RuleCall)cStochasticModelAssignment_2_1.eContents().get(0);
		
		//DelayRule returns EnvironmentModel::StochasticRule:
		//    (filter+=PortFilter | filter+=ComponentFilter) ':' (stochasticModel=ContinouosRandomVariable | stochasticModel=StochasticProcess )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(filter+=PortFilter | filter+=ComponentFilter) ':' (stochasticModel=ContinouosRandomVariable | stochasticModel=StochasticProcess )
		public Group getGroup() { return cGroup; }
		
		//(filter+=PortFilter | filter+=ComponentFilter)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//filter+=PortFilter
		public Assignment getFilterAssignment_0_0() { return cFilterAssignment_0_0; }
		
		//PortFilter
		public RuleCall getFilterPortFilterParserRuleCall_0_0_0() { return cFilterPortFilterParserRuleCall_0_0_0; }
		
		//filter+=ComponentFilter
		public Assignment getFilterAssignment_0_1() { return cFilterAssignment_0_1; }
		
		//ComponentFilter
		public RuleCall getFilterComponentFilterParserRuleCall_0_1_0() { return cFilterComponentFilterParserRuleCall_0_1_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//(stochasticModel=ContinouosRandomVariable | stochasticModel=StochasticProcess )
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//stochasticModel=ContinouosRandomVariable
		public Assignment getStochasticModelAssignment_2_0() { return cStochasticModelAssignment_2_0; }
		
		//ContinouosRandomVariable
		public RuleCall getStochasticModelContinouosRandomVariableParserRuleCall_2_0_0() { return cStochasticModelContinouosRandomVariableParserRuleCall_2_0_0; }
		
		//stochasticModel=StochasticProcess
		public Assignment getStochasticModelAssignment_2_1() { return cStochasticModelAssignment_2_1; }
		
		//StochasticProcess
		public RuleCall getStochasticModelStochasticProcessParserRuleCall_2_1_0() { return cStochasticModelStochasticProcessParserRuleCall_2_1_0; }
	}
	public class SampleRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.SampleRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cFilterAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cFilterParameterFilterParserRuleCall_0_0_0 = (RuleCall)cFilterAssignment_0_0.eContents().get(0);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cFilterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFilterParameterFilterParserRuleCall_1_0 = (RuleCall)cFilterAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cStochasticModelAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cStochasticModelRandomVariableParserRuleCall_3_0_0 = (RuleCall)cStochasticModelAssignment_3_0.eContents().get(0);
		private final Assignment cStochasticModelAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cStochasticModelStochasticProcessParserRuleCall_3_1_0 = (RuleCall)cStochasticModelAssignment_3_1.eContents().get(0);
		
		//SampleRule returns EnvironmentModel::StochasticRule:
		//    (filter+=ParameterFilter ",")* filter+=ParameterFilter ':' (stochasticModel=RandomVariable | stochasticModel=StochasticProcess )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(filter+=ParameterFilter ",")* filter+=ParameterFilter ':' (stochasticModel=RandomVariable | stochasticModel=StochasticProcess )
		public Group getGroup() { return cGroup; }
		
		//(filter+=ParameterFilter ",")*
		public Group getGroup_0() { return cGroup_0; }
		
		//filter+=ParameterFilter
		public Assignment getFilterAssignment_0_0() { return cFilterAssignment_0_0; }
		
		//ParameterFilter
		public RuleCall getFilterParameterFilterParserRuleCall_0_0_0() { return cFilterParameterFilterParserRuleCall_0_0_0; }
		
		//","
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }
		
		//filter+=ParameterFilter
		public Assignment getFilterAssignment_1() { return cFilterAssignment_1; }
		
		//ParameterFilter
		public RuleCall getFilterParameterFilterParserRuleCall_1_0() { return cFilterParameterFilterParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(stochasticModel=RandomVariable | stochasticModel=StochasticProcess )
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//stochasticModel=RandomVariable
		public Assignment getStochasticModelAssignment_3_0() { return cStochasticModelAssignment_3_0; }
		
		//RandomVariable
		public RuleCall getStochasticModelRandomVariableParserRuleCall_3_0_0() { return cStochasticModelRandomVariableParserRuleCall_3_0_0; }
		
		//stochasticModel=StochasticProcess
		public Assignment getStochasticModelAssignment_3_1() { return cStochasticModelAssignment_3_1; }
		
		//StochasticProcess
		public RuleCall getStochasticModelStochasticProcessParserRuleCall_3_1_0() { return cStochasticModelStochasticProcessParserRuleCall_3_1_0; }
	}
	public class FilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.Filter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEventFilterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPortFilterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cComponentFilterParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Filter returns EnvironmentModel::Filter:
		//    EventFilter | PortFilter | ComponentFilter
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EventFilter | PortFilter | ComponentFilter
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EventFilter
		public RuleCall getEventFilterParserRuleCall_0() { return cEventFilterParserRuleCall_0; }
		
		//PortFilter
		public RuleCall getPortFilterParserRuleCall_1() { return cPortFilterParserRuleCall_1; }
		
		//ComponentFilter
		public RuleCall getComponentFilterParserRuleCall_2() { return cComponentFilterParserRuleCall_2; }
	}
	public class ParameterFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ParameterFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEventAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cEventPortEventReferenceParserRuleCall_0_0 = (RuleCall)cEventAssignment_0.eContents().get(0);
		private final Keyword cColonColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParameterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cParameterParameterDeclarationCrossReference_2_0 = (CrossReference)cParameterAssignment_2.eContents().get(0);
		private final RuleCall cParameterParameterDeclarationIDTerminalRuleCall_2_0_1 = (RuleCall)cParameterParameterDeclarationCrossReference_2_0.eContents().get(1);
		
		//ParameterFilter returns EnvironmentModel::ParameterFilter:
		//    event=PortEventReference "::" parameter=[ParameterDeclaration]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//event=PortEventReference "::" parameter=[ParameterDeclaration]
		public Group getGroup() { return cGroup; }
		
		//event=PortEventReference
		public Assignment getEventAssignment_0() { return cEventAssignment_0; }
		
		//PortEventReference
		public RuleCall getEventPortEventReferenceParserRuleCall_0_0() { return cEventPortEventReferenceParserRuleCall_0_0; }
		
		//"::"
		public Keyword getColonColonKeyword_1() { return cColonColonKeyword_1; }
		
		//parameter=[ParameterDeclaration]
		public Assignment getParameterAssignment_2() { return cParameterAssignment_2; }
		
		//[ParameterDeclaration]
		public CrossReference getParameterParameterDeclarationCrossReference_2_0() { return cParameterParameterDeclarationCrossReference_2_0; }
		
		//ID
		public RuleCall getParameterParameterDeclarationIDTerminalRuleCall_2_0_1() { return cParameterParameterDeclarationIDTerminalRuleCall_2_0_1; }
	}
	public class EventFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EventFilter");
		private final Assignment cEventAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEventPortEventReferenceParserRuleCall_0 = (RuleCall)cEventAssignment.eContents().get(0);
		
		//EventFilter returns EnvironmentModel::EventFilter:
		//    event=PortEventReference
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//event=PortEventReference
		public Assignment getEventAssignment() { return cEventAssignment; }
		
		//PortEventReference
		public RuleCall getEventPortEventReferenceParserRuleCall_0() { return cEventPortEventReferenceParserRuleCall_0; }
	}
	public class PortFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.PortFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPortAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cPortPortCrossReference_0_0 = (CrossReference)cPortAssignment_0.eContents().get(0);
		private final RuleCall cPortPortIDTerminalRuleCall_0_0_1 = (RuleCall)cPortPortCrossReference_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PortFilter returns EnvironmentModel::PortFilter:
		//    port=[InterfaceModel::Port]"." "*"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//port=[InterfaceModel::Port]"." "*"
		public Group getGroup() { return cGroup; }
		
		//port=[InterfaceModel::Port]
		public Assignment getPortAssignment_0() { return cPortAssignment_0; }
		
		//[InterfaceModel::Port]
		public CrossReference getPortPortCrossReference_0_0() { return cPortPortCrossReference_0_0; }
		
		//ID
		public RuleCall getPortPortIDTerminalRuleCall_0_0_1() { return cPortPortIDTerminalRuleCall_0_0_1; }
		
		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//"*"
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
	}
	public class ComponentFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ComponentFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentFilterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAsteriskKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ComponentFilter returns EnvironmentModel::ComponentFilter:
		//    {EnvironmentModel::ComponentFilter} "*" "." "*"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvironmentModel::ComponentFilter} "*" "." "*"
		public Group getGroup() { return cGroup; }
		
		//{EnvironmentModel::ComponentFilter}
		public Action getComponentFilterAction_0() { return cComponentFilterAction_0; }
		
		//"*"
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
		
		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//"*"
		public Keyword getAsteriskKeyword_3() { return cAsteriskKeyword_3; }
	}
	public class SimulationRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.SimulationRule");
		private final Assignment cSimulationAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSimulationSimulationParserRuleCall_0 = (RuleCall)cSimulationAssignment.eContents().get(0);
		
		//SimulationRule returns EnvironmentModel::SimulationRule:
		//    simulation=Simulation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//simulation=Simulation
		public Assignment getSimulationAssignment() { return cSimulationAssignment; }
		
		//Simulation
		public RuleCall getSimulationSimulationParserRuleCall_0() { return cSimulationSimulationParserRuleCall_0; }
	}
	public class SimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.Simulation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSimulationClassNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSimulationClassNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cSimulationClassNameAssignment_2.eContents().get(0);
		
		//Simulation returns EnvironmentModel::Simulation:
		//    "class" "=" simulationClassName=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"class" "=" simulationClassName=STRING
		public Group getGroup() { return cGroup; }
		
		//"class"
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }
		
		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//simulationClassName=STRING
		public Assignment getSimulationClassNameAssignment_2() { return cSimulationClassNameAssignment_2; }
		
		//STRING
		public RuleCall getSimulationClassNameSTRINGTerminalRuleCall_2_0() { return cSimulationClassNameSTRINGTerminalRuleCall_2_0; }
	}
	public class EnvironementEventSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironementEventSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cOutportsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cOutportsPortParserRuleCall_2_0_0 = (RuleCall)cOutportsAssignment_2_0.eContents().get(0);
		private final Keyword cCommaKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cOutportsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cOutportsPortParserRuleCall_3_0 = (RuleCall)cOutportsAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cBehaviorRulesAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cBehaviorRulesStochasticRuleParserRuleCall_5_0_0 = (RuleCall)cBehaviorRulesAssignment_5_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EnvironementEventSource returns EnvironmentModel::EnvironmentEventSource:
		//    'source' name=ID  (outports+=Port ",")* outports+=Port "{"
		//        (behaviorRules+=StochasticRule ";")+
		//    "}"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'source' name=ID  (outports+=Port ",")* outports+=Port "{"
		//    (behaviorRules+=StochasticRule ";")+
		//"}"
		public Group getGroup() { return cGroup; }
		
		//'source'
		public Keyword getSourceKeyword_0() { return cSourceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(outports+=Port ",")*
		public Group getGroup_2() { return cGroup_2; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_2_0() { return cOutportsAssignment_2_0; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_2_0_0() { return cOutportsPortParserRuleCall_2_0_0; }
		
		//","
		public Keyword getCommaKeyword_2_1() { return cCommaKeyword_2_1; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_3() { return cOutportsAssignment_3; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_3_0() { return cOutportsPortParserRuleCall_3_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//(behaviorRules+=StochasticRule ";")+
		public Group getGroup_5() { return cGroup_5; }
		
		//behaviorRules+=StochasticRule
		public Assignment getBehaviorRulesAssignment_5_0() { return cBehaviorRulesAssignment_5_0; }
		
		//StochasticRule
		public RuleCall getBehaviorRulesStochasticRuleParserRuleCall_5_0_0() { return cBehaviorRulesStochasticRuleParserRuleCall_5_0_0; }
		
		//";"
		public Keyword getSemicolonKeyword_5_1() { return cSemicolonKeyword_5_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class PeriodicEnvironementEventSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.PeriodicEnvironementEventSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPeriodicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSourceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cOutportsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOutportsPortParserRuleCall_3_0_0 = (RuleCall)cOutportsAssignment_3_0.eContents().get(0);
		private final Keyword cCommaKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cOutportsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOutportsPortParserRuleCall_4_0 = (RuleCall)cOutportsAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cBehaviorRulesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Alternatives cBehaviorRulesAlternatives_6_0_0 = (Alternatives)cBehaviorRulesAssignment_6_0.eContents().get(0);
		private final RuleCall cBehaviorRulesStochasticRuleParserRuleCall_6_0_0_0 = (RuleCall)cBehaviorRulesAlternatives_6_0_0.eContents().get(0);
		private final RuleCall cBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1 = (RuleCall)cBehaviorRulesAlternatives_6_0_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//PeriodicEnvironementEventSource returns EnvironmentModel::EnvironmentPeriodicEventSource:
		//    'periodic' 'source' name=ID  (outports+=Port ",")* outports+=Port "{"
		//        (behaviorRules+=(StochasticRule | FilterSimulationRule)";")+
		//    "}"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'periodic' 'source' name=ID  (outports+=Port ",")* outports+=Port "{"
		//    (behaviorRules+=(StochasticRule | FilterSimulationRule)";")+
		//"}"
		public Group getGroup() { return cGroup; }
		
		//'periodic'
		public Keyword getPeriodicKeyword_0() { return cPeriodicKeyword_0; }
		
		//'source'
		public Keyword getSourceKeyword_1() { return cSourceKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//(outports+=Port ",")*
		public Group getGroup_3() { return cGroup_3; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_3_0() { return cOutportsAssignment_3_0; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_3_0_0() { return cOutportsPortParserRuleCall_3_0_0; }
		
		//","
		public Keyword getCommaKeyword_3_1() { return cCommaKeyword_3_1; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_4() { return cOutportsAssignment_4; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_4_0() { return cOutportsPortParserRuleCall_4_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(behaviorRules+=(StochasticRule | FilterSimulationRule)";")+
		public Group getGroup_6() { return cGroup_6; }
		
		//behaviorRules+=(StochasticRule | FilterSimulationRule)
		public Assignment getBehaviorRulesAssignment_6_0() { return cBehaviorRulesAssignment_6_0; }
		
		//(StochasticRule | FilterSimulationRule)
		public Alternatives getBehaviorRulesAlternatives_6_0_0() { return cBehaviorRulesAlternatives_6_0_0; }
		
		//StochasticRule
		public RuleCall getBehaviorRulesStochasticRuleParserRuleCall_6_0_0_0() { return cBehaviorRulesStochasticRuleParserRuleCall_6_0_0_0; }
		
		//FilterSimulationRule
		public RuleCall getBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1() { return cBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EnvironmentSwitchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentSwitch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSwitchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cInportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInportsPortParserRuleCall_2_0 = (RuleCall)cInportsAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cOutportsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cOutportsPortParserRuleCall_4_0_0 = (RuleCall)cOutportsAssignment_4_0.eContents().get(0);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOutportsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOutportsPortParserRuleCall_5_0 = (RuleCall)cOutportsAssignment_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cBehaviorRulesAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cBehaviorRulesSwitchRuleParserRuleCall_7_0_0 = (RuleCall)cBehaviorRulesAssignment_7_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//EnvironmentSwitch returns EnvironmentModel::EnvironmentSwitch:
		//    'switch' name=ID inports+=Port "->"  (outports+=Port ",")*outports+=Port "{"
		//        (behaviorRules+=SwitchRule ";")+
		//    "}"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'switch' name=ID inports+=Port "->"  (outports+=Port ",")*outports+=Port "{"
		//    (behaviorRules+=SwitchRule ";")+
		//"}"
		public Group getGroup() { return cGroup; }
		
		//'switch'
		public Keyword getSwitchKeyword_0() { return cSwitchKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//inports+=Port
		public Assignment getInportsAssignment_2() { return cInportsAssignment_2; }
		
		//Port
		public RuleCall getInportsPortParserRuleCall_2_0() { return cInportsPortParserRuleCall_2_0; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//(outports+=Port ",")*
		public Group getGroup_4() { return cGroup_4; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_4_0() { return cOutportsAssignment_4_0; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_4_0_0() { return cOutportsPortParserRuleCall_4_0_0; }
		
		//","
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_5() { return cOutportsAssignment_5; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_5_0() { return cOutportsPortParserRuleCall_5_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//(behaviorRules+=SwitchRule ";")+
		public Group getGroup_7() { return cGroup_7; }
		
		//behaviorRules+=SwitchRule
		public Assignment getBehaviorRulesAssignment_7_0() { return cBehaviorRulesAssignment_7_0; }
		
		//SwitchRule
		public RuleCall getBehaviorRulesSwitchRuleParserRuleCall_7_0_0() { return cBehaviorRulesSwitchRuleParserRuleCall_7_0_0; }
		
		//";"
		public Keyword getSemicolonKeyword_7_1() { return cSemicolonKeyword_7_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EnvironmentDelayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentDelay");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDelayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cInportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInportsPortParserRuleCall_2_0 = (RuleCall)cInportsAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOutportsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOutportsPortParserRuleCall_4_0 = (RuleCall)cOutportsAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cBehaviorRulesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Alternatives cBehaviorRulesAlternatives_6_0_0 = (Alternatives)cBehaviorRulesAssignment_6_0.eContents().get(0);
		private final RuleCall cBehaviorRulesDelayRuleParserRuleCall_6_0_0_0 = (RuleCall)cBehaviorRulesAlternatives_6_0_0.eContents().get(0);
		private final RuleCall cBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1 = (RuleCall)cBehaviorRulesAlternatives_6_0_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EnvironmentDelay returns EnvironmentModel::EnvironmentDelay:
		//    'delay' name=ID inports+=Port "->"  outports+=Port "{"
		//        (behaviorRules+=(DelayRule| FilterSimulationRule)";")+
		//    "}"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'delay' name=ID inports+=Port "->"  outports+=Port "{"
		//    (behaviorRules+=(DelayRule| FilterSimulationRule)";")+
		//"}"
		public Group getGroup() { return cGroup; }
		
		//'delay'
		public Keyword getDelayKeyword_0() { return cDelayKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//inports+=Port
		public Assignment getInportsAssignment_2() { return cInportsAssignment_2; }
		
		//Port
		public RuleCall getInportsPortParserRuleCall_2_0() { return cInportsPortParserRuleCall_2_0; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_4() { return cOutportsAssignment_4; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_4_0() { return cOutportsPortParserRuleCall_4_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(behaviorRules+=(DelayRule| FilterSimulationRule)";")+
		public Group getGroup_6() { return cGroup_6; }
		
		//behaviorRules+=(DelayRule| FilterSimulationRule)
		public Assignment getBehaviorRulesAssignment_6_0() { return cBehaviorRulesAssignment_6_0; }
		
		//(DelayRule| FilterSimulationRule)
		public Alternatives getBehaviorRulesAlternatives_6_0_0() { return cBehaviorRulesAlternatives_6_0_0; }
		
		//DelayRule
		public RuleCall getBehaviorRulesDelayRuleParserRuleCall_6_0_0_0() { return cBehaviorRulesDelayRuleParserRuleCall_6_0_0_0; }
		
		//FilterSimulationRule
		public RuleCall getBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1() { return cBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EnvironmentSampleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentSample");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSampleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cInportsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInportsPortParserRuleCall_2_0 = (RuleCall)cInportsAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOutportsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOutportsPortParserRuleCall_4_0 = (RuleCall)cOutportsAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cBehaviorRulesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Alternatives cBehaviorRulesAlternatives_6_0_0 = (Alternatives)cBehaviorRulesAssignment_6_0.eContents().get(0);
		private final RuleCall cBehaviorRulesSampleRuleParserRuleCall_6_0_0_0 = (RuleCall)cBehaviorRulesAlternatives_6_0_0.eContents().get(0);
		private final RuleCall cBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1 = (RuleCall)cBehaviorRulesAlternatives_6_0_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EnvironmentSample returns EnvironmentModel::EnvironmentSample:
		//    'sample' name=ID inports+=Port "->"  outports+=Port "{"
		//        (behaviorRules+=(SampleRule | FilterSimulationRule)";")+
		//    "}"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'sample' name=ID inports+=Port "->"  outports+=Port "{"
		//    (behaviorRules+=(SampleRule | FilterSimulationRule)";")+
		//"}"
		public Group getGroup() { return cGroup; }
		
		//'sample'
		public Keyword getSampleKeyword_0() { return cSampleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//inports+=Port
		public Assignment getInportsAssignment_2() { return cInportsAssignment_2; }
		
		//Port
		public RuleCall getInportsPortParserRuleCall_2_0() { return cInportsPortParserRuleCall_2_0; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_4() { return cOutportsAssignment_4; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_4_0() { return cOutportsPortParserRuleCall_4_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//(behaviorRules+=(SampleRule | FilterSimulationRule)";")+
		public Group getGroup_6() { return cGroup_6; }
		
		//behaviorRules+=(SampleRule | FilterSimulationRule)
		public Assignment getBehaviorRulesAssignment_6_0() { return cBehaviorRulesAssignment_6_0; }
		
		//(SampleRule | FilterSimulationRule)
		public Alternatives getBehaviorRulesAlternatives_6_0_0() { return cBehaviorRulesAlternatives_6_0_0; }
		
		//SampleRule
		public RuleCall getBehaviorRulesSampleRuleParserRuleCall_6_0_0_0() { return cBehaviorRulesSampleRuleParserRuleCall_6_0_0_0; }
		
		//FilterSimulationRule
		public RuleCall getBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1() { return cBehaviorRulesFilterSimulationRuleParserRuleCall_6_0_0_1; }
		
		//";"
		public Keyword getSemicolonKeyword_6_1() { return cSemicolonKeyword_6_1; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class EnvironmentExternSimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.EnvironmentExternSimulation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSimulationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Group cGroup_2_0_0 = (Group)cGroup_2_0.eContents().get(0);
		private final Assignment cInportsAssignment_2_0_0_0 = (Assignment)cGroup_2_0_0.eContents().get(0);
		private final RuleCall cInportsPortParserRuleCall_2_0_0_0_0 = (RuleCall)cInportsAssignment_2_0_0_0.eContents().get(0);
		private final Keyword cCommaKeyword_2_0_0_1 = (Keyword)cGroup_2_0_0.eContents().get(1);
		private final Assignment cInportsAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cInportsPortParserRuleCall_2_0_1_0 = (RuleCall)cInportsAssignment_2_0_1.eContents().get(0);
		private final Keyword cLessThanSignHyphenMinusGreaterThanSignKeyword_2_0_2 = (Keyword)cGroup_2_0.eContents().get(2);
		private final Keyword cVerticalLineHyphenMinusGreaterThanSignKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cOutportsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cOutportsPortParserRuleCall_3_0_0 = (RuleCall)cOutportsAssignment_3_0.eContents().get(0);
		private final Keyword cCommaKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cOutportsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOutportsPortParserRuleCall_4_0 = (RuleCall)cOutportsAssignment_4.eContents().get(0);
		private final Keyword cWithKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBehaviorRulesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBehaviorRulesSimulationRuleParserRuleCall_6_0 = (RuleCall)cBehaviorRulesAssignment_6.eContents().get(0);
		
		//EnvironmentExternSimulation returns EnvironmentModel::EnvironmentExternSimulation:
		//    'simulation' name=ID (((inports+=Port ",")*inports+=Port "<->") | ("|->"))(outports+=Port ",")*outports+=Port "with" behaviorRules+=SimulationRule
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'simulation' name=ID (((inports+=Port ",")*inports+=Port "<->") | ("|->"))(outports+=Port ",")*outports+=Port "with" behaviorRules+=SimulationRule
		public Group getGroup() { return cGroup; }
		
		//'simulation'
		public Keyword getSimulationKeyword_0() { return cSimulationKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//(((inports+=Port ",")*inports+=Port "<->") | ("|->"))
		public Alternatives getAlternatives_2() { return cAlternatives_2; }
		
		//((inports+=Port ",")*inports+=Port "<->")
		public Group getGroup_2_0() { return cGroup_2_0; }
		
		//(inports+=Port ",")*
		public Group getGroup_2_0_0() { return cGroup_2_0_0; }
		
		//inports+=Port
		public Assignment getInportsAssignment_2_0_0_0() { return cInportsAssignment_2_0_0_0; }
		
		//Port
		public RuleCall getInportsPortParserRuleCall_2_0_0_0_0() { return cInportsPortParserRuleCall_2_0_0_0_0; }
		
		//","
		public Keyword getCommaKeyword_2_0_0_1() { return cCommaKeyword_2_0_0_1; }
		
		//inports+=Port
		public Assignment getInportsAssignment_2_0_1() { return cInportsAssignment_2_0_1; }
		
		//Port
		public RuleCall getInportsPortParserRuleCall_2_0_1_0() { return cInportsPortParserRuleCall_2_0_1_0; }
		
		//"<->"
		public Keyword getLessThanSignHyphenMinusGreaterThanSignKeyword_2_0_2() { return cLessThanSignHyphenMinusGreaterThanSignKeyword_2_0_2; }
		
		//("|->")
		public Keyword getVerticalLineHyphenMinusGreaterThanSignKeyword_2_1() { return cVerticalLineHyphenMinusGreaterThanSignKeyword_2_1; }
		
		//(outports+=Port ",")*
		public Group getGroup_3() { return cGroup_3; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_3_0() { return cOutportsAssignment_3_0; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_3_0_0() { return cOutportsPortParserRuleCall_3_0_0; }
		
		//","
		public Keyword getCommaKeyword_3_1() { return cCommaKeyword_3_1; }
		
		//outports+=Port
		public Assignment getOutportsAssignment_4() { return cOutportsAssignment_4; }
		
		//Port
		public RuleCall getOutportsPortParserRuleCall_4_0() { return cOutportsPortParserRuleCall_4_0; }
		
		//"with"
		public Keyword getWithKeyword_5() { return cWithKeyword_5; }
		
		//behaviorRules+=SimulationRule
		public Assignment getBehaviorRulesAssignment_6() { return cBehaviorRulesAssignment_6; }
		
		//SimulationRule
		public RuleCall getBehaviorRulesSimulationRuleParserRuleCall_6_0() { return cBehaviorRulesSimulationRuleParserRuleCall_6_0; }
	}
	public class MixedExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.MixedExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStochasticExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MixedExpression returns Expression:
		//    StochasticExpression | Expression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StochasticExpression | Expression
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StochasticExpression
		public RuleCall getStochasticExpressionParserRuleCall_0() { return cStochasticExpressionParserRuleCall_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_1() { return cExpressionParserRuleCall_1; }
	}
	public class StochasticExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.StochasticExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSampleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRandomvariableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRandomvariableRandomVariableParserRuleCall_2_0 = (RuleCall)cRandomvariableAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//StochasticExpression returns StochasticModel::StochasticExpression:
		//    'sample' '(' randomvariable=RandomVariable ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'sample' '(' randomvariable=RandomVariable ')'
		public Group getGroup() { return cGroup; }
		
		//'sample'
		public Keyword getSampleKeyword_0() { return cSampleKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//randomvariable=RandomVariable
		public Assignment getRandomvariableAssignment_2() { return cRandomvariableAssignment_2; }
		
		//RandomVariable
		public RuleCall getRandomvariableRandomVariableParserRuleCall_2_0() { return cRandomvariableRandomVariableParserRuleCall_2_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class StochasticModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.StochasticModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStochasticProcessParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRandomVariableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StochasticModel returns StochasticModel::StochasticModel:
		//    StochasticProcess | RandomVariable
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//StochasticProcess | RandomVariable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StochasticProcess
		public RuleCall getStochasticProcessParserRuleCall_0() { return cStochasticProcessParserRuleCall_0; }
		
		//RandomVariable
		public RuleCall getRandomVariableParserRuleCall_1() { return cRandomVariableParserRuleCall_1; }
	}
	public class StochasticProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.StochasticProcess");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFittedGaussianProcessParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDiracProcessParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StochasticProcess returns StochasticModel::StochasticProcess:
		//    FittedGaussianProcess | DiracProcess
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//FittedGaussianProcess | DiracProcess
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FittedGaussianProcess
		public RuleCall getFittedGaussianProcessParserRuleCall_0() { return cFittedGaussianProcessParserRuleCall_0; }
		
		//DiracProcess
		public RuleCall getDiracProcessParserRuleCall_1() { return cDiracProcessParserRuleCall_1; }
	}
	public class RandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.RandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContinouosRandomVariableParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDiscreteRandomVariableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RandomVariable returns StochasticModel::RandomVariable:
		//    ContinouosRandomVariable | DiscreteRandomVariable
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ContinouosRandomVariable | DiscreteRandomVariable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ContinouosRandomVariable
		public RuleCall getContinouosRandomVariableParserRuleCall_0() { return cContinouosRandomVariableParserRuleCall_0; }
		
		//DiscreteRandomVariable
		public RuleCall getDiscreteRandomVariableParserRuleCall_1() { return cDiscreteRandomVariableParserRuleCall_1; }
	}
	public class ContinouosRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ContinouosRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNormalRandomVariableParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExponentialRandomVariableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWeibullRandomVariableParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGammaRandomVariableParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cFittedExponentialRandomVariableParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFittedGammaRandomVariableParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cFittedNormalRandomVariableParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cUniformRandomVariableParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cBetaRandomVariableParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cLogNormalRandomVariableParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cParetoRandomVariableParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//ContinouosRandomVariable returns StochasticModel::ContinouosRandomVariable:
		//    NormalRandomVariable |
		//    ExponentialRandomVariable |
		//    WeibullRandomVariable |
		//    GammaRandomVariable |
		//    FittedExponentialRandomVariable |
		//    FittedGammaRandomVariable |
		//    FittedNormalRandomVariable |
		//    UniformRandomVariable |
		//    BetaRandomVariable |
		//    LogNormalRandomVariable |
		//    ParetoRandomVariable
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//NormalRandomVariable |
		//ExponentialRandomVariable |
		//WeibullRandomVariable |
		//GammaRandomVariable |
		//FittedExponentialRandomVariable |
		//FittedGammaRandomVariable |
		//FittedNormalRandomVariable |
		//UniformRandomVariable |
		//BetaRandomVariable |
		//LogNormalRandomVariable |
		//ParetoRandomVariable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NormalRandomVariable
		public RuleCall getNormalRandomVariableParserRuleCall_0() { return cNormalRandomVariableParserRuleCall_0; }
		
		//ExponentialRandomVariable
		public RuleCall getExponentialRandomVariableParserRuleCall_1() { return cExponentialRandomVariableParserRuleCall_1; }
		
		//WeibullRandomVariable
		public RuleCall getWeibullRandomVariableParserRuleCall_2() { return cWeibullRandomVariableParserRuleCall_2; }
		
		//GammaRandomVariable
		public RuleCall getGammaRandomVariableParserRuleCall_3() { return cGammaRandomVariableParserRuleCall_3; }
		
		//FittedExponentialRandomVariable
		public RuleCall getFittedExponentialRandomVariableParserRuleCall_4() { return cFittedExponentialRandomVariableParserRuleCall_4; }
		
		//FittedGammaRandomVariable
		public RuleCall getFittedGammaRandomVariableParserRuleCall_5() { return cFittedGammaRandomVariableParserRuleCall_5; }
		
		//FittedNormalRandomVariable
		public RuleCall getFittedNormalRandomVariableParserRuleCall_6() { return cFittedNormalRandomVariableParserRuleCall_6; }
		
		//UniformRandomVariable
		public RuleCall getUniformRandomVariableParserRuleCall_7() { return cUniformRandomVariableParserRuleCall_7; }
		
		//BetaRandomVariable
		public RuleCall getBetaRandomVariableParserRuleCall_8() { return cBetaRandomVariableParserRuleCall_8; }
		
		//LogNormalRandomVariable
		public RuleCall getLogNormalRandomVariableParserRuleCall_9() { return cLogNormalRandomVariableParserRuleCall_9; }
		
		//ParetoRandomVariable
		public RuleCall getParetoRandomVariableParserRuleCall_10() { return cParetoRandomVariableParserRuleCall_10; }
	}
	public class DiscreteRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.DiscreteRandomVariable");
		private final RuleCall cBernoulliRandomVariableParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//DiscreteRandomVariable returns StochasticModel::DiscreteRandomVariable:
		//    BernoulliRandomVariable
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BernoulliRandomVariable
		public RuleCall getBernoulliRandomVariableParserRuleCall() { return cBernoulliRandomVariableParserRuleCall; }
	}
	public class UniformRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.UniformRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cUniformKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cFromKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cLowerBoundAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cLowerBoundExpressionParserRuleCall_0_3_0 = (RuleCall)cLowerBoundAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cToKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cEqualsSignKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cUpperBoundAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cUpperBoundExpressionParserRuleCall_0_7_0 = (RuleCall)cUpperBoundAssignment_0_7.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cUniformKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cLowerBoundAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cLowerBoundExpressionParserRuleCall_1_2_0 = (RuleCall)cLowerBoundAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cUpperBoundAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cUpperBoundExpressionParserRuleCall_1_4_0 = (RuleCall)cUpperBoundAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//UniformRandomVariable returns StochasticModel::UniformRandomVariable:
		//    ("uniform" "from" '=' lowerBound=Expression ',' 'to' '=' upperBound=Expression) |("Uniform" "("lowerBound=Expression "," upperBound=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//("uniform" "from" '=' lowerBound=Expression ',' 'to' '=' upperBound=Expression) |("Uniform" "("lowerBound=Expression "," upperBound=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//("uniform" "from" '=' lowerBound=Expression ',' 'to' '=' upperBound=Expression)
		public Group getGroup_0() { return cGroup_0; }
		
		//"uniform"
		public Keyword getUniformKeyword_0_0() { return cUniformKeyword_0_0; }
		
		//"from"
		public Keyword getFromKeyword_0_1() { return cFromKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//lowerBound=Expression
		public Assignment getLowerBoundAssignment_0_3() { return cLowerBoundAssignment_0_3; }
		
		//Expression
		public RuleCall getLowerBoundExpressionParserRuleCall_0_3_0() { return cLowerBoundExpressionParserRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'to'
		public Keyword getToKeyword_0_5() { return cToKeyword_0_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_6() { return cEqualsSignKeyword_0_6; }
		
		//upperBound=Expression
		public Assignment getUpperBoundAssignment_0_7() { return cUpperBoundAssignment_0_7; }
		
		//Expression
		public RuleCall getUpperBoundExpressionParserRuleCall_0_7_0() { return cUpperBoundExpressionParserRuleCall_0_7_0; }
		
		//("Uniform" "("lowerBound=Expression "," upperBound=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Uniform"
		public Keyword getUniformKeyword_1_0() { return cUniformKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//lowerBound=Expression
		public Assignment getLowerBoundAssignment_1_2() { return cLowerBoundAssignment_1_2; }
		
		//Expression
		public RuleCall getLowerBoundExpressionParserRuleCall_1_2_0() { return cLowerBoundExpressionParserRuleCall_1_2_0; }
		
		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//upperBound=Expression
		public Assignment getUpperBoundAssignment_1_4() { return cUpperBoundAssignment_1_4; }
		
		//Expression
		public RuleCall getUpperBoundExpressionParserRuleCall_1_4_0() { return cUpperBoundExpressionParserRuleCall_1_4_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class LogNormalRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.LogNormalRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLognormalKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cMeanKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cMeanAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cMeanExpressionParserRuleCall_0_3_0 = (RuleCall)cMeanAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cScaleKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cEqualsSignKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cScaleAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cScaleExpressionParserRuleCall_0_7_0 = (RuleCall)cScaleAssignment_0_7.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLogNormalKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMeanAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cMeanExpressionParserRuleCall_1_2_0 = (RuleCall)cMeanAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cScaleAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cScaleExpressionParserRuleCall_1_4_0 = (RuleCall)cScaleAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//LogNormalRandomVariable returns StochasticModel::LogNormalRandomVariable:
		//    ('lognormal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression )|("LogNormal" "("mean=Expression "," scale=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('lognormal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression )|("LogNormal" "("mean=Expression "," scale=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('lognormal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression )
		public Group getGroup_0() { return cGroup_0; }
		
		//'lognormal'
		public Keyword getLognormalKeyword_0_0() { return cLognormalKeyword_0_0; }
		
		//'mean'
		public Keyword getMeanKeyword_0_1() { return cMeanKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//mean=Expression
		public Assignment getMeanAssignment_0_3() { return cMeanAssignment_0_3; }
		
		//Expression
		public RuleCall getMeanExpressionParserRuleCall_0_3_0() { return cMeanExpressionParserRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'scale'
		public Keyword getScaleKeyword_0_5() { return cScaleKeyword_0_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_6() { return cEqualsSignKeyword_0_6; }
		
		//scale=Expression
		public Assignment getScaleAssignment_0_7() { return cScaleAssignment_0_7; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_0_7_0() { return cScaleExpressionParserRuleCall_0_7_0; }
		
		//("LogNormal" "("mean=Expression "," scale=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"LogNormal"
		public Keyword getLogNormalKeyword_1_0() { return cLogNormalKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//mean=Expression
		public Assignment getMeanAssignment_1_2() { return cMeanAssignment_1_2; }
		
		//Expression
		public RuleCall getMeanExpressionParserRuleCall_1_2_0() { return cMeanExpressionParserRuleCall_1_2_0; }
		
		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//scale=Expression
		public Assignment getScaleAssignment_1_4() { return cScaleAssignment_1_4; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_1_4_0() { return cScaleExpressionParserRuleCall_1_4_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class BetaRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.BetaRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cBetaKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cAlphaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cAphaAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cAphaExpressionParserRuleCall_0_3_0 = (RuleCall)cAphaAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cBetaKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cEqualsSignKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cBetaAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cBetaExpressionParserRuleCall_0_7_0 = (RuleCall)cBetaAssignment_0_7.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cBetaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cAphaAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAphaExpressionParserRuleCall_1_2_0 = (RuleCall)cAphaAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cBetaAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cBetaExpressionParserRuleCall_1_4_0 = (RuleCall)cBetaAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//BetaRandomVariable returns StochasticModel::BetaRandomVariable:
		//    ('beta' 'alpha' '=' apha=Expression ',' 'beta' '=' beta=Expression )|("Beta" "("apha=Expression "," beta=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('beta' 'alpha' '=' apha=Expression ',' 'beta' '=' beta=Expression )|("Beta" "("apha=Expression "," beta=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('beta' 'alpha' '=' apha=Expression ',' 'beta' '=' beta=Expression )
		public Group getGroup_0() { return cGroup_0; }
		
		//'beta'
		public Keyword getBetaKeyword_0_0() { return cBetaKeyword_0_0; }
		
		//'alpha'
		public Keyword getAlphaKeyword_0_1() { return cAlphaKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//apha=Expression
		public Assignment getAphaAssignment_0_3() { return cAphaAssignment_0_3; }
		
		//Expression
		public RuleCall getAphaExpressionParserRuleCall_0_3_0() { return cAphaExpressionParserRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'beta'
		public Keyword getBetaKeyword_0_5() { return cBetaKeyword_0_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_6() { return cEqualsSignKeyword_0_6; }
		
		//beta=Expression
		public Assignment getBetaAssignment_0_7() { return cBetaAssignment_0_7; }
		
		//Expression
		public RuleCall getBetaExpressionParserRuleCall_0_7_0() { return cBetaExpressionParserRuleCall_0_7_0; }
		
		//("Beta" "("apha=Expression "," beta=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Beta"
		public Keyword getBetaKeyword_1_0() { return cBetaKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//apha=Expression
		public Assignment getAphaAssignment_1_2() { return cAphaAssignment_1_2; }
		
		//Expression
		public RuleCall getAphaExpressionParserRuleCall_1_2_0() { return cAphaExpressionParserRuleCall_1_2_0; }
		
		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//beta=Expression
		public Assignment getBetaAssignment_1_4() { return cBetaAssignment_1_4; }
		
		//Expression
		public RuleCall getBetaExpressionParserRuleCall_1_4_0() { return cBetaExpressionParserRuleCall_1_4_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class ParetoRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ParetoRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cParetoKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Keyword cParetoKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Keyword cAlphaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cAlphaAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cAlphaExpressionParserRuleCall_0_3_0 = (RuleCall)cAlphaAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cScaleKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cEqualsSignKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cScaleAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cScaleExpressionParserRuleCall_0_7_0 = (RuleCall)cScaleAssignment_0_7.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cParetoKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cAlphaAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cAlphaExpressionParserRuleCall_1_2_0 = (RuleCall)cAlphaAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cScaleAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cScaleExpressionParserRuleCall_1_4_0 = (RuleCall)cScaleAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//ParetoRandomVariable returns StochasticModel::ParetoRandomVariable:
		//    (('pareto' | 'Pareto') 'alpha' '=' alpha=Expression ',' 'scale' '=' scale=Expression )|("Pareto" "("alpha=Expression "," scale=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(('pareto' | 'Pareto') 'alpha' '=' alpha=Expression ',' 'scale' '=' scale=Expression )|("Pareto" "("alpha=Expression "," scale=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(('pareto' | 'Pareto') 'alpha' '=' alpha=Expression ',' 'scale' '=' scale=Expression )
		public Group getGroup_0() { return cGroup_0; }
		
		//('pareto' | 'Pareto')
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }
		
		//'pareto'
		public Keyword getParetoKeyword_0_0_0() { return cParetoKeyword_0_0_0; }
		
		//'Pareto'
		public Keyword getParetoKeyword_0_0_1() { return cParetoKeyword_0_0_1; }
		
		//'alpha'
		public Keyword getAlphaKeyword_0_1() { return cAlphaKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//alpha=Expression
		public Assignment getAlphaAssignment_0_3() { return cAlphaAssignment_0_3; }
		
		//Expression
		public RuleCall getAlphaExpressionParserRuleCall_0_3_0() { return cAlphaExpressionParserRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'scale'
		public Keyword getScaleKeyword_0_5() { return cScaleKeyword_0_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_6() { return cEqualsSignKeyword_0_6; }
		
		//scale=Expression
		public Assignment getScaleAssignment_0_7() { return cScaleAssignment_0_7; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_0_7_0() { return cScaleExpressionParserRuleCall_0_7_0; }
		
		//("Pareto" "("alpha=Expression "," scale=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Pareto"
		public Keyword getParetoKeyword_1_0() { return cParetoKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//alpha=Expression
		public Assignment getAlphaAssignment_1_2() { return cAlphaAssignment_1_2; }
		
		//Expression
		public RuleCall getAlphaExpressionParserRuleCall_1_2_0() { return cAlphaExpressionParserRuleCall_1_2_0; }
		
		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//scale=Expression
		public Assignment getScaleAssignment_1_4() { return cScaleAssignment_1_4; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_1_4_0() { return cScaleExpressionParserRuleCall_1_4_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class NormalRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.NormalRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cNormalKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cMeanKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cMeanAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cMeanExpressionParserRuleCall_0_3_0 = (RuleCall)cMeanAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cScaleKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cEqualsSignKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cScaleAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cScaleExpressionParserRuleCall_0_7_0 = (RuleCall)cScaleAssignment_0_7.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cNormalKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cMeanAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cMeanExpressionParserRuleCall_1_2_0 = (RuleCall)cMeanAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cScaleAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cScaleExpressionParserRuleCall_1_4_0 = (RuleCall)cScaleAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//NormalRandomVariable returns StochasticModel::NormalRandomVariable:
		//    (('normal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression ))|("Normal" "("mean=Expression "," scale=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(('normal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression ))|("Normal" "("mean=Expression "," scale=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(('normal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression ))
		public Group getGroup_0() { return cGroup_0; }
		
		//'normal'
		public Keyword getNormalKeyword_0_0() { return cNormalKeyword_0_0; }
		
		//'mean'
		public Keyword getMeanKeyword_0_1() { return cMeanKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//mean=Expression
		public Assignment getMeanAssignment_0_3() { return cMeanAssignment_0_3; }
		
		//Expression
		public RuleCall getMeanExpressionParserRuleCall_0_3_0() { return cMeanExpressionParserRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'scale'
		public Keyword getScaleKeyword_0_5() { return cScaleKeyword_0_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_6() { return cEqualsSignKeyword_0_6; }
		
		//scale=Expression
		public Assignment getScaleAssignment_0_7() { return cScaleAssignment_0_7; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_0_7_0() { return cScaleExpressionParserRuleCall_0_7_0; }
		
		//("Normal" "("mean=Expression "," scale=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Normal"
		public Keyword getNormalKeyword_1_0() { return cNormalKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//mean=Expression
		public Assignment getMeanAssignment_1_2() { return cMeanAssignment_1_2; }
		
		//Expression
		public RuleCall getMeanExpressionParserRuleCall_1_2_0() { return cMeanExpressionParserRuleCall_1_2_0; }
		
		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//scale=Expression
		public Assignment getScaleAssignment_1_4() { return cScaleAssignment_1_4; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_1_4_0() { return cScaleExpressionParserRuleCall_1_4_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class WeibullRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.WeibullRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cWeibullKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Keyword cWeibullKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Keyword cConcentrationKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cShapeAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cShapeExpressionParserRuleCall_0_3_0 = (RuleCall)cShapeAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cScaleKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cEqualsSignKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cScaleAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cScaleExpressionParserRuleCall_0_7_0 = (RuleCall)cScaleAssignment_0_7.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cWeibullKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cShapeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cShapeExpressionParserRuleCall_1_2_0 = (RuleCall)cShapeAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cScaleAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cScaleExpressionParserRuleCall_1_4_0 = (RuleCall)cScaleAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//WeibullRandomVariable returns StochasticModel::WeibullRandomVariable:
		//    (('Weibull' | 'weibull') 'concentration' '=' shape=Expression ',' 'scale' '=' scale=Expression)|("Weibull" "("shape=Expression "," scale=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(('Weibull' | 'weibull') 'concentration' '=' shape=Expression ',' 'scale' '=' scale=Expression)|("Weibull" "("shape=Expression "," scale=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(('Weibull' | 'weibull') 'concentration' '=' shape=Expression ',' 'scale' '=' scale=Expression)
		public Group getGroup_0() { return cGroup_0; }
		
		//('Weibull' | 'weibull')
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }
		
		//'Weibull'
		public Keyword getWeibullKeyword_0_0_0() { return cWeibullKeyword_0_0_0; }
		
		//'weibull'
		public Keyword getWeibullKeyword_0_0_1() { return cWeibullKeyword_0_0_1; }
		
		//'concentration'
		public Keyword getConcentrationKeyword_0_1() { return cConcentrationKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//shape=Expression
		public Assignment getShapeAssignment_0_3() { return cShapeAssignment_0_3; }
		
		//Expression
		public RuleCall getShapeExpressionParserRuleCall_0_3_0() { return cShapeExpressionParserRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'scale'
		public Keyword getScaleKeyword_0_5() { return cScaleKeyword_0_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_6() { return cEqualsSignKeyword_0_6; }
		
		//scale=Expression
		public Assignment getScaleAssignment_0_7() { return cScaleAssignment_0_7; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_0_7_0() { return cScaleExpressionParserRuleCall_0_7_0; }
		
		//("Weibull" "("shape=Expression "," scale=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Weibull"
		public Keyword getWeibullKeyword_1_0() { return cWeibullKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//shape=Expression
		public Assignment getShapeAssignment_1_2() { return cShapeAssignment_1_2; }
		
		//Expression
		public RuleCall getShapeExpressionParserRuleCall_1_2_0() { return cShapeExpressionParserRuleCall_1_2_0; }
		
		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//scale=Expression
		public Assignment getScaleAssignment_1_4() { return cScaleAssignment_1_4; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_1_4_0() { return cScaleExpressionParserRuleCall_1_4_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class GammaRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.GammaRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cGammaKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cConcentrationKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cShapeAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cShapeExpressionParserRuleCall_0_3_0 = (RuleCall)cShapeAssignment_0_3.eContents().get(0);
		private final Keyword cCommaKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cRateKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Keyword cEqualsSignKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Assignment cScaleAssignment_0_7 = (Assignment)cGroup_0.eContents().get(7);
		private final RuleCall cScaleExpressionParserRuleCall_0_7_0 = (RuleCall)cScaleAssignment_0_7.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cGammaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cShapeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cShapeExpressionParserRuleCall_1_2_0 = (RuleCall)cShapeAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cScaleAssignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cScaleExpressionParserRuleCall_1_4_0 = (RuleCall)cScaleAssignment_1_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_5 = (Keyword)cGroup_1.eContents().get(5);
		
		//GammaRandomVariable returns StochasticModel::GammaRandomVariable:
		//    ('gamma' 'concentration' '=' shape=Expression ',' 'rate' '=' scale=Expression)|("Gamma" "("shape=Expression "," scale=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('gamma' 'concentration' '=' shape=Expression ',' 'rate' '=' scale=Expression)|("Gamma" "("shape=Expression "," scale=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('gamma' 'concentration' '=' shape=Expression ',' 'rate' '=' scale=Expression)
		public Group getGroup_0() { return cGroup_0; }
		
		//'gamma'
		public Keyword getGammaKeyword_0_0() { return cGammaKeyword_0_0; }
		
		//'concentration'
		public Keyword getConcentrationKeyword_0_1() { return cConcentrationKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//shape=Expression
		public Assignment getShapeAssignment_0_3() { return cShapeAssignment_0_3; }
		
		//Expression
		public RuleCall getShapeExpressionParserRuleCall_0_3_0() { return cShapeExpressionParserRuleCall_0_3_0; }
		
		//','
		public Keyword getCommaKeyword_0_4() { return cCommaKeyword_0_4; }
		
		//'rate'
		public Keyword getRateKeyword_0_5() { return cRateKeyword_0_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_6() { return cEqualsSignKeyword_0_6; }
		
		//scale=Expression
		public Assignment getScaleAssignment_0_7() { return cScaleAssignment_0_7; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_0_7_0() { return cScaleExpressionParserRuleCall_0_7_0; }
		
		//("Gamma" "("shape=Expression "," scale=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Gamma"
		public Keyword getGammaKeyword_1_0() { return cGammaKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//shape=Expression
		public Assignment getShapeAssignment_1_2() { return cShapeAssignment_1_2; }
		
		//Expression
		public RuleCall getShapeExpressionParserRuleCall_1_2_0() { return cShapeExpressionParserRuleCall_1_2_0; }
		
		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }
		
		//scale=Expression
		public Assignment getScaleAssignment_1_4() { return cScaleAssignment_1_4; }
		
		//Expression
		public RuleCall getScaleExpressionParserRuleCall_1_4_0() { return cScaleExpressionParserRuleCall_1_4_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_5() { return cRightParenthesisKeyword_1_5; }
	}
	public class ExponentialRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.ExponentialRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cExponentialKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cRateKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cRateAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cRateExpressionParserRuleCall_0_3_0 = (RuleCall)cRateAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cExponentialKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cRateAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRateExpressionParserRuleCall_1_2_0 = (RuleCall)cRateAssignment_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//ExponentialRandomVariable returns StochasticModel::ExponentialRandomVariable:
		//    ('exponential' 'rate' '=' rate=Expression) |("Exponential" "("rate=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('exponential' 'rate' '=' rate=Expression) |("Exponential" "("rate=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//('exponential' 'rate' '=' rate=Expression)
		public Group getGroup_0() { return cGroup_0; }
		
		//'exponential'
		public Keyword getExponentialKeyword_0_0() { return cExponentialKeyword_0_0; }
		
		//'rate'
		public Keyword getRateKeyword_0_1() { return cRateKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//rate=Expression
		public Assignment getRateAssignment_0_3() { return cRateAssignment_0_3; }
		
		//Expression
		public RuleCall getRateExpressionParserRuleCall_0_3_0() { return cRateExpressionParserRuleCall_0_3_0; }
		
		//("Exponential" "("rate=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Exponential"
		public Keyword getExponentialKeyword_1_0() { return cExponentialKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//rate=Expression
		public Assignment getRateAssignment_1_2() { return cRateAssignment_1_2; }
		
		//Expression
		public RuleCall getRateExpressionParserRuleCall_1_2_0() { return cRateExpressionParserRuleCall_1_2_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
	}
	public class BernoulliRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.BernoulliRandomVariable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Alternatives cAlternatives_0_0 = (Alternatives)cGroup_0.eContents().get(0);
		private final Keyword cBernoulliKeyword_0_0_0 = (Keyword)cAlternatives_0_0.eContents().get(0);
		private final Keyword cBernoulliKeyword_0_0_1 = (Keyword)cAlternatives_0_0.eContents().get(1);
		private final Keyword cProbKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cProbabilityAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cProbabilityExpressionParserRuleCall_0_3_0 = (RuleCall)cProbabilityAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cBernoulliKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cProbabilityAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cProbabilityExpressionParserRuleCall_1_2_0 = (RuleCall)cProbabilityAssignment_1_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//BernoulliRandomVariable returns StochasticModel::BernoulliRandomVariable:
		//    (('bernoulli'|'Bernoulli') 'prob' '=' probability=Expression) |("Bernoulli" "("probability=Expression ")")
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(('bernoulli'|'Bernoulli') 'prob' '=' probability=Expression) |("Bernoulli" "("probability=Expression ")")
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//(('bernoulli'|'Bernoulli') 'prob' '=' probability=Expression)
		public Group getGroup_0() { return cGroup_0; }
		
		//('bernoulli'|'Bernoulli')
		public Alternatives getAlternatives_0_0() { return cAlternatives_0_0; }
		
		//'bernoulli'
		public Keyword getBernoulliKeyword_0_0_0() { return cBernoulliKeyword_0_0_0; }
		
		//'Bernoulli'
		public Keyword getBernoulliKeyword_0_0_1() { return cBernoulliKeyword_0_0_1; }
		
		//'prob'
		public Keyword getProbKeyword_0_1() { return cProbKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//probability=Expression
		public Assignment getProbabilityAssignment_0_3() { return cProbabilityAssignment_0_3; }
		
		//Expression
		public RuleCall getProbabilityExpressionParserRuleCall_0_3_0() { return cProbabilityExpressionParserRuleCall_0_3_0; }
		
		//("Bernoulli" "("probability=Expression ")")
		public Group getGroup_1() { return cGroup_1; }
		
		//"Bernoulli"
		public Keyword getBernoulliKeyword_1_0() { return cBernoulliKeyword_1_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }
		
		//probability=Expression
		public Assignment getProbabilityAssignment_1_2() { return cProbabilityAssignment_1_2; }
		
		//Expression
		public RuleCall getProbabilityExpressionParserRuleCall_1_2_0() { return cProbabilityExpressionParserRuleCall_1_2_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
	}
	public class FittedExponentialRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.FittedExponentialRandomVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFittedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cExponentialKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLrKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLrAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLrDOUBLETerminalRuleCall_4_0 = (RuleCall)cLrAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSourceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSourceDataSourceParserRuleCall_8_0 = (RuleCall)cSourceAssignment_8.eContents().get(0);
		
		//FittedExponentialRandomVariable returns StochasticModel::FittedExponentialRandomVariable:
		//    'fitted' 'exponential' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'fitted' 'exponential' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
		public Group getGroup() { return cGroup; }
		
		//'fitted'
		public Keyword getFittedKeyword_0() { return cFittedKeyword_0; }
		
		//'exponential'
		public Keyword getExponentialKeyword_1() { return cExponentialKeyword_1; }
		
		//'lr'
		public Keyword getLrKeyword_2() { return cLrKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//lr=DOUBLE
		public Assignment getLrAssignment_4() { return cLrAssignment_4; }
		
		//DOUBLE
		public RuleCall getLrDOUBLETerminalRuleCall_4_0() { return cLrDOUBLETerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'source'
		public Keyword getSourceKeyword_6() { return cSourceKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//source=DataSource
		public Assignment getSourceAssignment_8() { return cSourceAssignment_8; }
		
		//DataSource
		public RuleCall getSourceDataSourceParserRuleCall_8_0() { return cSourceDataSourceParserRuleCall_8_0; }
	}
	public class FittedNormalRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.FittedNormalRandomVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFittedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNormalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLrKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLrAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLrDOUBLETerminalRuleCall_4_0 = (RuleCall)cLrAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSourceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSourceDataSourceParserRuleCall_8_0 = (RuleCall)cSourceAssignment_8.eContents().get(0);
		
		//FittedNormalRandomVariable returns StochasticModel::FittedNormalRandomVariable:
		//    'fitted' 'normal' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'fitted' 'normal' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
		public Group getGroup() { return cGroup; }
		
		//'fitted'
		public Keyword getFittedKeyword_0() { return cFittedKeyword_0; }
		
		//'normal'
		public Keyword getNormalKeyword_1() { return cNormalKeyword_1; }
		
		//'lr'
		public Keyword getLrKeyword_2() { return cLrKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//lr=DOUBLE
		public Assignment getLrAssignment_4() { return cLrAssignment_4; }
		
		//DOUBLE
		public RuleCall getLrDOUBLETerminalRuleCall_4_0() { return cLrDOUBLETerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'source'
		public Keyword getSourceKeyword_6() { return cSourceKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//source=DataSource
		public Assignment getSourceAssignment_8() { return cSourceAssignment_8; }
		
		//DataSource
		public RuleCall getSourceDataSourceParserRuleCall_8_0() { return cSourceDataSourceParserRuleCall_8_0; }
	}
	public class FittedGammaRandomVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.FittedGammaRandomVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFittedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cGammaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLrKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLrAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLrDOUBLETerminalRuleCall_4_0 = (RuleCall)cLrAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSourceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSourceDataSourceParserRuleCall_8_0 = (RuleCall)cSourceAssignment_8.eContents().get(0);
		
		//FittedGammaRandomVariable returns StochasticModel::FittedGammaRandomVariable:
		//    'fitted' 'gamma' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'fitted' 'gamma' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
		public Group getGroup() { return cGroup; }
		
		//'fitted'
		public Keyword getFittedKeyword_0() { return cFittedKeyword_0; }
		
		//'gamma'
		public Keyword getGammaKeyword_1() { return cGammaKeyword_1; }
		
		//'lr'
		public Keyword getLrKeyword_2() { return cLrKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//lr=DOUBLE
		public Assignment getLrAssignment_4() { return cLrAssignment_4; }
		
		//DOUBLE
		public RuleCall getLrDOUBLETerminalRuleCall_4_0() { return cLrDOUBLETerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//'source'
		public Keyword getSourceKeyword_6() { return cSourceKeyword_6; }
		
		//'='
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//source=DataSource
		public Assignment getSourceAssignment_8() { return cSourceAssignment_8; }
		
		//DataSource
		public RuleCall getSourceDataSourceParserRuleCall_8_0() { return cSourceDataSourceParserRuleCall_8_0; }
	}
	public class CategoricalProbabailityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.CategoricalProbabaility");
		private final Assignment cProbabilityAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cProbabilityExpressionParserRuleCall_0 = (RuleCall)cProbabilityAssignment.eContents().get(0);
		
		//CategoricalProbabaility returns StochasticModel::CategoricalProbabaility:
		//    probability=Expression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//probability=Expression
		public Assignment getProbabilityAssignment() { return cProbabilityAssignment; }
		
		//Expression
		public RuleCall getProbabilityExpressionParserRuleCall_0() { return cProbabilityExpressionParserRuleCall_0; }
	}
	public class DiracProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.DiracProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiracKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSourceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSourceDataSourceParserRuleCall_3_0 = (RuleCall)cSourceAssignment_3.eContents().get(0);
		
		//DiracProcess returns StochasticModel::DiracProcess:
		//    "Dirac" "source" "=" source=DataSource
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"Dirac" "source" "=" source=DataSource
		public Group getGroup() { return cGroup; }
		
		//"Dirac"
		public Keyword getDiracKeyword_0() { return cDiracKeyword_0; }
		
		//"source"
		public Keyword getSourceKeyword_1() { return cSourceKeyword_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//source=DataSource
		public Assignment getSourceAssignment_3() { return cSourceAssignment_3; }
		
		//DataSource
		public RuleCall getSourceDataSourceParserRuleCall_3_0() { return cSourceDataSourceParserRuleCall_3_0; }
	}
	public class FittedGaussianProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.FittedGaussianProcess");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cGPKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Keyword cGaussKeyword_0_1_0 = (Keyword)cGroup_0_1.eContents().get(0);
		private final Keyword cProcessKeyword_0_1_1 = (Keyword)cGroup_0_1.eContents().get(1);
		private final Keyword cKernelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKernelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cKernelKernelParserRuleCall_3_0 = (RuleCall)cKernelAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLrKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cEqualsSignKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cLrAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cLrDOUBLETerminalRuleCall_4_3_0 = (RuleCall)cLrAssignment_4_3.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cSourceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSourceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSourceDataSourceParserRuleCall_8_0 = (RuleCall)cSourceAssignment_8.eContents().get(0);
		
		//FittedGaussianProcess returns StochasticModel::FittedGaussianProcess:
		//    ("GP"|"Gauss" "Process") "kernel" "="kernel=Kernel ("," "lr" "=" lr=DOUBLE)? "," "source" "="source=DataSource
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//("GP"|"Gauss" "Process") "kernel" "="kernel=Kernel ("," "lr" "=" lr=DOUBLE)? "," "source" "="source=DataSource
		public Group getGroup() { return cGroup; }
		
		//("GP"|"Gauss" "Process")
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//"GP"
		public Keyword getGPKeyword_0_0() { return cGPKeyword_0_0; }
		
		//"Gauss" "Process"
		public Group getGroup_0_1() { return cGroup_0_1; }
		
		//"Gauss"
		public Keyword getGaussKeyword_0_1_0() { return cGaussKeyword_0_1_0; }
		
		//"Process"
		public Keyword getProcessKeyword_0_1_1() { return cProcessKeyword_0_1_1; }
		
		//"kernel"
		public Keyword getKernelKeyword_1() { return cKernelKeyword_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//kernel=Kernel
		public Assignment getKernelAssignment_3() { return cKernelAssignment_3; }
		
		//Kernel
		public RuleCall getKernelKernelParserRuleCall_3_0() { return cKernelKernelParserRuleCall_3_0; }
		
		//("," "lr" "=" lr=DOUBLE)?
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//"lr"
		public Keyword getLrKeyword_4_1() { return cLrKeyword_4_1; }
		
		//"="
		public Keyword getEqualsSignKeyword_4_2() { return cEqualsSignKeyword_4_2; }
		
		//lr=DOUBLE
		public Assignment getLrAssignment_4_3() { return cLrAssignment_4_3; }
		
		//DOUBLE
		public RuleCall getLrDOUBLETerminalRuleCall_4_3_0() { return cLrDOUBLETerminalRuleCall_4_3_0; }
		
		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//"source"
		public Keyword getSourceKeyword_6() { return cSourceKeyword_6; }
		
		//"="
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }
		
		//source=DataSource
		public Assignment getSourceAssignment_8() { return cSourceAssignment_8; }
		
		//DataSource
		public RuleCall getSourceDataSourceParserRuleCall_8_0() { return cSourceDataSourceParserRuleCall_8_0; }
	}
	public class KernelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.Kernel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBrownianKernelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLinearKernelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRBFKernelParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPeriodicKernelParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSumKernelParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Kernel returns StochasticModel::Kernel:
		//     BrownianKernel | LinearKernel | RBFKernel | PeriodicKernel |SumKernel
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//BrownianKernel | LinearKernel | RBFKernel | PeriodicKernel |SumKernel
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BrownianKernel
		public RuleCall getBrownianKernelParserRuleCall_0() { return cBrownianKernelParserRuleCall_0; }
		
		//LinearKernel
		public RuleCall getLinearKernelParserRuleCall_1() { return cLinearKernelParserRuleCall_1; }
		
		//RBFKernel
		public RuleCall getRBFKernelParserRuleCall_2() { return cRBFKernelParserRuleCall_2; }
		
		//PeriodicKernel
		public RuleCall getPeriodicKernelParserRuleCall_3() { return cPeriodicKernelParserRuleCall_3; }
		
		//SumKernel
		public RuleCall getSumKernelParserRuleCall_4() { return cSumKernelParserRuleCall_4; }
	}
	public class SumKernelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.SumKernel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKernelsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKernelsKernelParserRuleCall_1_0 = (RuleCall)cKernelsAssignment_1.eContents().get(0);
		private final Keyword cPlusSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKernelsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cKernelsKernelParserRuleCall_3_0 = (RuleCall)cKernelsAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SumKernel returns StochasticModel::SumKernel:
		//    "(" kernels+=Kernel "+" kernels+=Kernel ")"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"(" kernels+=Kernel "+" kernels+=Kernel ")"
		public Group getGroup() { return cGroup; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//kernels+=Kernel
		public Assignment getKernelsAssignment_1() { return cKernelsAssignment_1; }
		
		//Kernel
		public RuleCall getKernelsKernelParserRuleCall_1_0() { return cKernelsKernelParserRuleCall_1_0; }
		
		//"+"
		public Keyword getPlusSignKeyword_2() { return cPlusSignKeyword_2; }
		
		//kernels+=Kernel
		public Assignment getKernelsAssignment_3() { return cKernelsAssignment_3; }
		
		//Kernel
		public RuleCall getKernelsKernelParserRuleCall_3_0() { return cKernelsKernelParserRuleCall_3_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class BrownianKernelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.BrownianKernel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBrownianKernelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBrownianKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//BrownianKernel returns StochasticModel::BrownianKernel:
		//    {StochasticModel::BrownianKernel} "Brownian"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{StochasticModel::BrownianKernel} "Brownian"
		public Group getGroup() { return cGroup; }
		
		//{StochasticModel::BrownianKernel}
		public Action getBrownianKernelAction_0() { return cBrownianKernelAction_0; }
		
		//"Brownian"
		public Keyword getBrownianKeyword_1() { return cBrownianKeyword_1; }
	}
	public class RBFKernelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.RBFKernel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRBFKernelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRBFKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//RBFKernel returns StochasticModel::RBFKernel:
		//    {StochasticModel::RBFKernel} "RBF"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{StochasticModel::RBFKernel} "RBF"
		public Group getGroup() { return cGroup; }
		
		//{StochasticModel::RBFKernel}
		public Action getRBFKernelAction_0() { return cRBFKernelAction_0; }
		
		//"RBF"
		public Keyword getRBFKeyword_1() { return cRBFKeyword_1; }
	}
	public class LinearKernelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.LinearKernel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLinearKernelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLinearKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//LinearKernel returns StochasticModel::LinearKernel:
		//    {StochasticModel::LinearKernel} "Linear"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{StochasticModel::LinearKernel} "Linear"
		public Group getGroup() { return cGroup; }
		
		//{StochasticModel::LinearKernel}
		public Action getLinearKernelAction_0() { return cLinearKernelAction_0; }
		
		//"Linear"
		public Keyword getLinearKeyword_1() { return cLinearKeyword_1; }
	}
	public class PeriodicKernelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.PeriodicKernel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPeriodicKernelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPeriodicKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//PeriodicKernel returns StochasticModel::PeriodicKernel:
		//    {StochasticModel::PeriodicKernel} "Periodic"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{StochasticModel::PeriodicKernel} "Periodic"
		public Group getGroup() { return cGroup; }
		
		//{StochasticModel::PeriodicKernel}
		public Action getPeriodicKernelAction_0() { return cPeriodicKernelAction_0; }
		
		//"Periodic"
		public Keyword getPeriodicKeyword_1() { return cPeriodicKeyword_1; }
	}
	public class DataSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.DataSource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInfluxDBParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPythonSimulationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DataSource returns StochasticModel::DataSource:
		//    InfluxDB | PythonSimulation
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//InfluxDB | PythonSimulation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//InfluxDB
		public RuleCall getInfluxDBParserRuleCall_0() { return cInfluxDBParserRuleCall_0; }
		
		//PythonSimulation
		public RuleCall getPythonSimulationParserRuleCall_1() { return cPythonSimulationParserRuleCall_1; }
	}
	public class AtomicExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.AtomicExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDirectReferenceExpressionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLiteralExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cExpressionParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//AtomicExpression returns Expression:
		//      DirectReferenceExpression |
		//      LiteralExpression |
		//     '(' Expression ')'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		// DirectReferenceExpression |
		// LiteralExpression |
		//'(' Expression ')'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DirectReferenceExpression
		public RuleCall getDirectReferenceExpressionParserRuleCall_0() { return cDirectReferenceExpressionParserRuleCall_0; }
		
		//LiteralExpression
		public RuleCall getLiteralExpressionParserRuleCall_1() { return cLiteralExpressionParserRuleCall_1; }
		
		//'(' Expression ')'
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//Expression
		public RuleCall getExpressionParserRuleCall_2_1() { return cExpressionParserRuleCall_2_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
	}
	public class InfluxDBElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.InfluxDB");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInfluxDBKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDbKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cDbnameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDbnameSTRINGTerminalRuleCall_4_0 = (RuleCall)cDbnameAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cIpKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cIpAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cIpSTRINGTerminalRuleCall_8_0 = (RuleCall)cIpAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cPortKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cPortAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cPortSTRINGTerminalRuleCall_12_0 = (RuleCall)cPortAssignment_12.eContents().get(0);
		private final Keyword cCommaKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cQueryKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cQueryAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cQuerySTRINGTerminalRuleCall_16_0 = (RuleCall)cQueryAssignment_16.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//InfluxDB returns StochasticModel::InfluxDB:
		//    "InfluxDB" "(" "db" ":" dbname=STRING "," "ip" ":" ip=STRING "," "port" ":"  port=STRING "," "query" ":" query=STRING ")"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"InfluxDB" "(" "db" ":" dbname=STRING "," "ip" ":" ip=STRING "," "port" ":"  port=STRING "," "query" ":" query=STRING ")"
		public Group getGroup() { return cGroup; }
		
		//"InfluxDB"
		public Keyword getInfluxDBKeyword_0() { return cInfluxDBKeyword_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//"db"
		public Keyword getDbKeyword_2() { return cDbKeyword_2; }
		
		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//dbname=STRING
		public Assignment getDbnameAssignment_4() { return cDbnameAssignment_4; }
		
		//STRING
		public RuleCall getDbnameSTRINGTerminalRuleCall_4_0() { return cDbnameSTRINGTerminalRuleCall_4_0; }
		
		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//"ip"
		public Keyword getIpKeyword_6() { return cIpKeyword_6; }
		
		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//ip=STRING
		public Assignment getIpAssignment_8() { return cIpAssignment_8; }
		
		//STRING
		public RuleCall getIpSTRINGTerminalRuleCall_8_0() { return cIpSTRINGTerminalRuleCall_8_0; }
		
		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//"port"
		public Keyword getPortKeyword_10() { return cPortKeyword_10; }
		
		//":"
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//port=STRING
		public Assignment getPortAssignment_12() { return cPortAssignment_12; }
		
		//STRING
		public RuleCall getPortSTRINGTerminalRuleCall_12_0() { return cPortSTRINGTerminalRuleCall_12_0; }
		
		//","
		public Keyword getCommaKeyword_13() { return cCommaKeyword_13; }
		
		//"query"
		public Keyword getQueryKeyword_14() { return cQueryKeyword_14; }
		
		//":"
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//query=STRING
		public Assignment getQueryAssignment_16() { return cQueryAssignment_16; }
		
		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_16_0() { return cQuerySTRINGTerminalRuleCall_16_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_17() { return cRightParenthesisKeyword_17; }
	}
	public class PythonSimulationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.PythonSimulation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPythonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cScriptAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cScriptSTRINGTerminalRuleCall_2_0 = (RuleCall)cScriptAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//PythonSimulation returns StochasticModel::PythonSimulation:
		//    "Python" "(" script=STRING ")"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"Python" "(" script=STRING ")"
		public Group getGroup() { return cGroup; }
		
		//"Python"
		public Keyword getPythonKeyword_0() { return cPythonKeyword_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//script=STRING
		public Assignment getScriptAssignment_2() { return cScriptAssignment_2; }
		
		//STRING
		public RuleCall getScriptSTRINGTerminalRuleCall_2_0() { return cScriptSTRINGTerminalRuleCall_2_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	
	
	private final PackageElements pPackage;
	private final ComponentElements pComponent;
	private final AnalysisComponentElements pAnalysisComponent;
	private final AnalysisMethodElements pAnalysisMethod;
	private final SimulationAnalysisMethodElements pSimulationAnalysisMethod;
	private final ImportanceSamplingElements pImportanceSampling;
	private final MCMCElements pMCMC;
	private final MCMCKernelElements pMCMCKernel;
	private final NUTSElements pNUTS;
	private final HMCElements pHMC;
	private final RecursiveComponentReferenceElements pRecursiveComponentReference;
	private final ComponentPortEventReferenceElements pComponentPortEventReference;
	private final AnalysisAspectElements pAnalysisAspect;
	private final MeanParameterElements pMeanParameter;
	private final ParameterDistributionElements pParameterDistribution;
	private final ProbabilityElements pProbability;
	private final TimedProbabilityElements pTimedProbability;
	private final TimeBoundedProbabilityElements pTimeBoundedProbability;
	private final MeanTimeElements pMeanTime;
	private final FrequencyElements pFrequency;
	private final EventTimeRatioElements pEventTimeRatio;
	private final MeanTimeBetweenEventsElements pMeanTimeBetweenEvents;
	private final AssumeRaisedElements pAssumeRaised;
	private final AssumeNotRaisedElements pAssumeNotRaised;
	private final ObserveTimeElements pObserveTime;
	private final ObserveParameterElements pObserveParameter;
	private final EndConditionElements pEndCondition;
	private final AnalysisConditionElements pAnalysisCondition;
	private final PrioryDistributionElements pPrioryDistribution;
	private final EnvironmentCascadeCompositeComponentElements pEnvironmentCascadeCompositeComponent;
	private final EnvironmentSynchronousCompositeComponentElements pEnvironmentSynchronousCompositeComponent;
	private final EnvironmentAsynchronousCompositeComponentElements pEnvironmentAsynchronousCompositeComponent;
	private final EnvironmentAsynchronousCompositeComponentInstanceElements pEnvironmentAsynchronousCompositeComponentInstance;
	private final AbstractEnvironmentCompositeComponentInstanceElements pAbstractEnvironmentCompositeComponentInstance;
	private final EnvironmentComponentInstanceElements pEnvironmentComponentInstance;
	private final ElementaryEnvironmentComponentInstanceElements pElementaryEnvironmentComponentInstance;
	private final StochasticRuleElements pStochasticRule;
	private final FilterSimulationRuleElements pFilterSimulationRule;
	private final SwitchRuleElements pSwitchRule;
	private final DelayRuleElements pDelayRule;
	private final SampleRuleElements pSampleRule;
	private final FilterElements pFilter;
	private final ParameterFilterElements pParameterFilter;
	private final EventFilterElements pEventFilter;
	private final PortFilterElements pPortFilter;
	private final ComponentFilterElements pComponentFilter;
	private final SimulationRuleElements pSimulationRule;
	private final SimulationElements pSimulation;
	private final EnvironementEventSourceElements pEnvironementEventSource;
	private final PeriodicEnvironementEventSourceElements pPeriodicEnvironementEventSource;
	private final EnvironmentSwitchElements pEnvironmentSwitch;
	private final EnvironmentDelayElements pEnvironmentDelay;
	private final EnvironmentSampleElements pEnvironmentSample;
	private final EnvironmentExternSimulationElements pEnvironmentExternSimulation;
	private final MixedExpressionElements pMixedExpression;
	private final StochasticExpressionElements pStochasticExpression;
	private final StochasticModelElements pStochasticModel;
	private final StochasticProcessElements pStochasticProcess;
	private final RandomVariableElements pRandomVariable;
	private final ContinouosRandomVariableElements pContinouosRandomVariable;
	private final DiscreteRandomVariableElements pDiscreteRandomVariable;
	private final UniformRandomVariableElements pUniformRandomVariable;
	private final LogNormalRandomVariableElements pLogNormalRandomVariable;
	private final BetaRandomVariableElements pBetaRandomVariable;
	private final ParetoRandomVariableElements pParetoRandomVariable;
	private final NormalRandomVariableElements pNormalRandomVariable;
	private final WeibullRandomVariableElements pWeibullRandomVariable;
	private final GammaRandomVariableElements pGammaRandomVariable;
	private final ExponentialRandomVariableElements pExponentialRandomVariable;
	private final BernoulliRandomVariableElements pBernoulliRandomVariable;
	private final FittedExponentialRandomVariableElements pFittedExponentialRandomVariable;
	private final FittedNormalRandomVariableElements pFittedNormalRandomVariable;
	private final FittedGammaRandomVariableElements pFittedGammaRandomVariable;
	private final CategoricalProbabailityElements pCategoricalProbabaility;
	private final DiracProcessElements pDiracProcess;
	private final FittedGaussianProcessElements pFittedGaussianProcess;
	private final KernelElements pKernel;
	private final SumKernelElements pSumKernel;
	private final BrownianKernelElements pBrownianKernel;
	private final RBFKernelElements pRBFKernel;
	private final LinearKernelElements pLinearKernel;
	private final PeriodicKernelElements pPeriodicKernel;
	private final DataSourceElements pDataSource;
	private final AtomicExpressionElements pAtomicExpression;
	private final InfluxDBElements pInfluxDB;
	private final PythonSimulationElements pPythonSimulation;
	private final TerminalRule tDOUBLE;
	
	private final Grammar grammar;
	
	private final StatechartLanguageGrammarAccess gaStatechartLanguage;
	
	private final ActionLanguageGrammarAccess gaActionLanguage;
	
	private final ExpressionLanguageGrammarAccess gaExpressionLanguage;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EnvironmentLanguageGrammarAccess(GrammarProvider grammarProvider,
			StatechartLanguageGrammarAccess gaStatechartLanguage,
			ActionLanguageGrammarAccess gaActionLanguage,
			ExpressionLanguageGrammarAccess gaExpressionLanguage,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaStatechartLanguage = gaStatechartLanguage;
		this.gaActionLanguage = gaActionLanguage;
		this.gaExpressionLanguage = gaExpressionLanguage;
		this.gaTerminals = gaTerminals;
		this.pPackage = new PackageElements();
		this.pComponent = new ComponentElements();
		this.pAnalysisComponent = new AnalysisComponentElements();
		this.pAnalysisMethod = new AnalysisMethodElements();
		this.pSimulationAnalysisMethod = new SimulationAnalysisMethodElements();
		this.pImportanceSampling = new ImportanceSamplingElements();
		this.pMCMC = new MCMCElements();
		this.pMCMCKernel = new MCMCKernelElements();
		this.pNUTS = new NUTSElements();
		this.pHMC = new HMCElements();
		this.pRecursiveComponentReference = new RecursiveComponentReferenceElements();
		this.pComponentPortEventReference = new ComponentPortEventReferenceElements();
		this.pAnalysisAspect = new AnalysisAspectElements();
		this.pMeanParameter = new MeanParameterElements();
		this.pParameterDistribution = new ParameterDistributionElements();
		this.pProbability = new ProbabilityElements();
		this.pTimedProbability = new TimedProbabilityElements();
		this.pTimeBoundedProbability = new TimeBoundedProbabilityElements();
		this.pMeanTime = new MeanTimeElements();
		this.pFrequency = new FrequencyElements();
		this.pEventTimeRatio = new EventTimeRatioElements();
		this.pMeanTimeBetweenEvents = new MeanTimeBetweenEventsElements();
		this.pAssumeRaised = new AssumeRaisedElements();
		this.pAssumeNotRaised = new AssumeNotRaisedElements();
		this.pObserveTime = new ObserveTimeElements();
		this.pObserveParameter = new ObserveParameterElements();
		this.pEndCondition = new EndConditionElements();
		this.pAnalysisCondition = new AnalysisConditionElements();
		this.pPrioryDistribution = new PrioryDistributionElements();
		this.pEnvironmentCascadeCompositeComponent = new EnvironmentCascadeCompositeComponentElements();
		this.pEnvironmentSynchronousCompositeComponent = new EnvironmentSynchronousCompositeComponentElements();
		this.pEnvironmentAsynchronousCompositeComponent = new EnvironmentAsynchronousCompositeComponentElements();
		this.pEnvironmentAsynchronousCompositeComponentInstance = new EnvironmentAsynchronousCompositeComponentInstanceElements();
		this.pAbstractEnvironmentCompositeComponentInstance = new AbstractEnvironmentCompositeComponentInstanceElements();
		this.pEnvironmentComponentInstance = new EnvironmentComponentInstanceElements();
		this.pElementaryEnvironmentComponentInstance = new ElementaryEnvironmentComponentInstanceElements();
		this.pStochasticRule = new StochasticRuleElements();
		this.pFilterSimulationRule = new FilterSimulationRuleElements();
		this.pSwitchRule = new SwitchRuleElements();
		this.pDelayRule = new DelayRuleElements();
		this.pSampleRule = new SampleRuleElements();
		this.pFilter = new FilterElements();
		this.pParameterFilter = new ParameterFilterElements();
		this.pEventFilter = new EventFilterElements();
		this.pPortFilter = new PortFilterElements();
		this.pComponentFilter = new ComponentFilterElements();
		this.pSimulationRule = new SimulationRuleElements();
		this.pSimulation = new SimulationElements();
		this.pEnvironementEventSource = new EnvironementEventSourceElements();
		this.pPeriodicEnvironementEventSource = new PeriodicEnvironementEventSourceElements();
		this.pEnvironmentSwitch = new EnvironmentSwitchElements();
		this.pEnvironmentDelay = new EnvironmentDelayElements();
		this.pEnvironmentSample = new EnvironmentSampleElements();
		this.pEnvironmentExternSimulation = new EnvironmentExternSimulationElements();
		this.pMixedExpression = new MixedExpressionElements();
		this.pStochasticExpression = new StochasticExpressionElements();
		this.pStochasticModel = new StochasticModelElements();
		this.pStochasticProcess = new StochasticProcessElements();
		this.pRandomVariable = new RandomVariableElements();
		this.pContinouosRandomVariable = new ContinouosRandomVariableElements();
		this.pDiscreteRandomVariable = new DiscreteRandomVariableElements();
		this.pUniformRandomVariable = new UniformRandomVariableElements();
		this.pLogNormalRandomVariable = new LogNormalRandomVariableElements();
		this.pBetaRandomVariable = new BetaRandomVariableElements();
		this.pParetoRandomVariable = new ParetoRandomVariableElements();
		this.pNormalRandomVariable = new NormalRandomVariableElements();
		this.pWeibullRandomVariable = new WeibullRandomVariableElements();
		this.pGammaRandomVariable = new GammaRandomVariableElements();
		this.pExponentialRandomVariable = new ExponentialRandomVariableElements();
		this.pBernoulliRandomVariable = new BernoulliRandomVariableElements();
		this.pFittedExponentialRandomVariable = new FittedExponentialRandomVariableElements();
		this.pFittedNormalRandomVariable = new FittedNormalRandomVariableElements();
		this.pFittedGammaRandomVariable = new FittedGammaRandomVariableElements();
		this.pCategoricalProbabaility = new CategoricalProbabailityElements();
		this.pDiracProcess = new DiracProcessElements();
		this.pFittedGaussianProcess = new FittedGaussianProcessElements();
		this.pKernel = new KernelElements();
		this.pSumKernel = new SumKernelElements();
		this.pBrownianKernel = new BrownianKernelElements();
		this.pRBFKernel = new RBFKernelElements();
		this.pLinearKernel = new LinearKernelElements();
		this.pPeriodicKernel = new PeriodicKernelElements();
		this.pDataSource = new DataSourceElements();
		this.pAtomicExpression = new AtomicExpressionElements();
		this.pInfluxDB = new InfluxDBElements();
		this.pPythonSimulation = new PythonSimulationElements();
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "hu.bme.mit.gamma.environment.language.EnvironmentLanguage.DOUBLE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("hu.bme.mit.gamma.environment.language.EnvironmentLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public StatechartLanguageGrammarAccess getStatechartLanguageGrammarAccess() {
		return gaStatechartLanguage;
	}
	
	public ActionLanguageGrammarAccess getActionLanguageGrammarAccess() {
		return gaActionLanguage;
	}
	
	public ExpressionLanguageGrammarAccess getExpressionLanguageGrammarAccess() {
		return gaExpressionLanguage;
	}
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////generate EnvironmentLanguage "http://www.mit.bme.hu/gamma/environment/language/dwdEnvironmentLanguage"
	//@Override
	//Package returns InterfaceModel::Package: 'package' name=ID
	//    ('import' imports+=[InterfaceModel::Package | STRING])*
	//    (
	//        constantDeclarations+=ConstantDeclaration |
	//        functionDeclarations+=FunctionDeclaration |
	//        typeDeclarations+=TypeDeclaration |
	//        components+=Component |
	//        interfaces+=Interface
	//    )*
	//;
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	//@Override
	//Component returns InterfaceModel::Component:
	//    SynchronousComponent |
	//    EnvironmentCascadeCompositeComponent |
	//    EnvironmentSynchronousCompositeComponent |
	//    EnvironmentAsynchronousCompositeComponent |
	//    AnalysisComponent //|
	//    //RequirementComponent
	//;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	////defining Analysis and Requirement models
	///*
	//RequirementComponent returns AnalysisModel::RequirementComponent:
	//    'requirement' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//    '{'
	//        'in' analyzedComponent=EnvironmentAsynchronousCompositeComponentInstance
	//        (aspect+=AnalysisAspect |
	//        requirement+=RequirementAspect |
	//        conditions+=AnalysisCondition)*
	//    '}'
	//;
	//RequirementAspect returns AnalysisModel::RequirementAspect:
	//    LowerThan | GreaterThan | IsBetween
	//;
	//LowerThan returns AnalysisModel::LowerThan:
	//    'lower than' value=DOUBLE
	//    ('description' description=STRING)?
	//;
	//GreaterThan returns AnalysisModel::GreaterThan:
	//    'greater than' value=DOUBLE
	//    ('description' description=STRING)?
	//;
	//IsBetween returns AnalysisModel::IsBetween:
	//    'in' '[' lowerBound=DOUBLE ',' upperBound=DOUBLE ']'
	//    ('description' description=STRING)?
	//;
	//*/
	//AnalysisComponent returns AnalysisModel::AnalysisComponent:
	//    'analysis' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//    '{'
	//        'in' analyzedComponent=EnvironmentAsynchronousCompositeComponentInstance
	//        (aspect+=AnalysisAspect)+
	//        ('@' 'Conditions' '{'
	//            ((conditions+=AnalysisCondition)|
	//            (priorydistribution+=PrioryDistribution))*
	//        '}')?
	//        analysismethod=AnalysisMethod
	//    '}'
	//;
	public AnalysisComponentElements getAnalysisComponentAccess() {
		return pAnalysisComponent;
	}
	
	public ParserRule getAnalysisComponentRule() {
		return getAnalysisComponentAccess().getRule();
	}
	
	//AnalysisMethod returns AnalysisModel::AnalysisMethod:
	//    SimulationAnalysisMethod
	//;
	public AnalysisMethodElements getAnalysisMethodAccess() {
		return pAnalysisMethod;
	}
	
	public ParserRule getAnalysisMethodRule() {
		return getAnalysisMethodAccess().getRule();
	}
	
	//SimulationAnalysisMethod returns AnalysisModel::SimulationAnalysisMethod:
	//    ImportanceSampling | MCMC
	//;
	public SimulationAnalysisMethodElements getSimulationAnalysisMethodAccess() {
		return pSimulationAnalysisMethod;
	}
	
	public ParserRule getSimulationAnalysisMethodRule() {
		return getSimulationAnalysisMethodAccess().getRule();
	}
	
	//ImportanceSampling returns AnalysisModel::ImportanceSampling:
	//    '@' 'Configuration' '(' 'ImportanceSampling' ')' '{'
	//            ((endcondition+=EndCondition)|
	//            ("simulation" "time" "=" simulationTime=Expression)|
	//            ("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
	//            ("warmup" "time" "=" warmupTime=Expression))*
	//        '}'
	//;
	public ImportanceSamplingElements getImportanceSamplingAccess() {
		return pImportanceSampling;
	}
	
	public ParserRule getImportanceSamplingRule() {
		return getImportanceSamplingAccess().getRule();
	}
	
	//MCMC returns AnalysisModel::MCMC:
	//    '@' 'Configuration' '(' 'MCMC' ')' '{'
	//            ((endcondition+=EndCondition)|
	//            ("simulation" "time" "=" simulationTime=Expression)|
	//            ("simulation" "number" "=" simulationNumber=IntegerLiteralExpression)|
	//            ("warmup" "step" "number" "=" warmupStepNum=IntegerLiteralExpression)|
	//            ("kernel" "=" kernel=MCMCKernel)|
	//            ("warmup" "time" "=" warmupTime=Expression))*
	//        '}'
	//;
	public MCMCElements getMCMCAccess() {
		return pMCMC;
	}
	
	public ParserRule getMCMCRule() {
		return getMCMCAccess().getRule();
	}
	
	//MCMCKernel returns AnalysisModel::MCMCKernel:
	//    NUTS | HMC
	//;
	public MCMCKernelElements getMCMCKernelAccess() {
		return pMCMCKernel;
	}
	
	public ParserRule getMCMCKernelRule() {
		return getMCMCKernelAccess().getRule();
	}
	
	//NUTS returns AnalysisModel::NUTS:
	//    {AnalysisModel::NUTS} "NUTS"
	//;
	public NUTSElements getNUTSAccess() {
		return pNUTS;
	}
	
	public ParserRule getNUTSRule() {
		return getNUTSAccess().getRule();
	}
	
	//HMC returns AnalysisModel::HMC:
	//    {AnalysisModel::HMC} "HMC"
	//;
	public HMCElements getHMCAccess() {
		return pHMC;
	}
	
	public ParserRule getHMCRule() {
		return getHMCAccess().getRule();
	}
	
	//RecursiveComponentReference returns AnalysisModel::RecursiveComponentReference:
	//    component = [EnvironmentModel::EnvironmentAsynchronousCompositeComponentInstance]
	//;
	public RecursiveComponentReferenceElements getRecursiveComponentReferenceAccess() {
		return pRecursiveComponentReference;
	}
	
	public ParserRule getRecursiveComponentReferenceRule() {
		return getRecursiveComponentReferenceAccess().getRule();
	}
	
	//ComponentPortEventReference returns AnalysisModel::ComponentPortEventReference:
	//    'event'  component=RecursiveComponentReference '.'port=[InterfaceModel::Port]'.'event=[InterfaceModel::Event]
	//;
	public ComponentPortEventReferenceElements getComponentPortEventReferenceAccess() {
		return pComponentPortEventReference;
	}
	
	public ParserRule getComponentPortEventReferenceRule() {
		return getComponentPortEventReferenceAccess().getRule();
	}
	
	//AnalysisAspect returns AnalysisModel::AnalysisAspect:
	//    Probability  | MeanTime | Frequency | MeanParameter | ParameterDistribution | MeanTimeBetweenEvents | EventTimeRatio //| TimedProbability | TimeBoundedProbability
	//;
	public AnalysisAspectElements getAnalysisAspectAccess() {
		return pAnalysisAspect;
	}
	
	public ParserRule getAnalysisAspectRule() {
		return getAnalysisAspectAccess().getRule();
	}
	
	//// analysis aspects
	//MeanParameter returns AnalysisModel::MeanParameter:
	//    'mean' 'parameter' 'of' event=ComponentPortEventReference  '.' parameter=[ParameterDeclaration] ';'
	//;
	public MeanParameterElements getMeanParameterAccess() {
		return pMeanParameter;
	}
	
	public ParserRule getMeanParameterRule() {
		return getMeanParameterAccess().getRule();
	}
	
	//ParameterDistribution returns AnalysisModel::ParameterDistribution:
	//    'parameter' 'distribution' 'of' event=ComponentPortEventReference '.' parameter=[ParameterDeclaration] ';'
	//;
	public ParameterDistributionElements getParameterDistributionAccess() {
		return pParameterDistribution;
	}
	
	public ParserRule getParameterDistributionRule() {
		return getParameterDistributionAccess().getRule();
	}
	
	//Probability returns AnalysisModel::Probability:
	//    'probability' 'of' event=ComponentPortEventReference  ';'
	//;
	public ProbabilityElements getProbabilityAccess() {
		return pProbability;
	}
	
	public ParserRule getProbabilityRule() {
		return getProbabilityAccess().getRule();
	}
	
	//TimedProbability returns AnalysisModel::TimedProbability:
	//    'probability' 'of' event=ComponentPortEventReference  'until' timeLimit=DOUBLE ';'
	//;
	public TimedProbabilityElements getTimedProbabilityAccess() {
		return pTimedProbability;
	}
	
	public ParserRule getTimedProbabilityRule() {
		return getTimedProbabilityAccess().getRule();
	}
	
	//TimeBoundedProbability returns AnalysisModel::TimeBoundedProbability:
	//    'probability' 'of' event=ComponentPortEventReference  'from' lowerBound=DOUBLE 'to'upperBound=DOUBLE ';'
	//;
	public TimeBoundedProbabilityElements getTimeBoundedProbabilityAccess() {
		return pTimeBoundedProbability;
	}
	
	public ParserRule getTimeBoundedProbabilityRule() {
		return getTimeBoundedProbabilityAccess().getRule();
	}
	
	//MeanTime returns AnalysisModel::MeanTime:
	//    'mean' 'time' 'of' event=ComponentPortEventReference ';'
	//;
	public MeanTimeElements getMeanTimeAccess() {
		return pMeanTime;
	}
	
	public ParserRule getMeanTimeRule() {
		return getMeanTimeAccess().getRule();
	}
	
	//Frequency returns AnalysisModel::Frequency:
	//    'frequency' 'of' event=ComponentPortEventReference ';'
	//;
	public FrequencyElements getFrequencyAccess() {
		return pFrequency;
	}
	
	public ParserRule getFrequencyRule() {
		return getFrequencyAccess().getRule();
	}
	
	//EventTimeRatio returns AnalysisModel::EventTimeRatio:
	//    'time' 'ratio' 'between' event=ComponentPortEventReference 'and' event2=ComponentPortEventReference ';'
	//;
	public EventTimeRatioElements getEventTimeRatioAccess() {
		return pEventTimeRatio;
	}
	
	public ParserRule getEventTimeRatioRule() {
		return getEventTimeRatioAccess().getRule();
	}
	
	//MeanTimeBetweenEvents returns AnalysisModel::MeanTimeBetweenEvents:
	//    'mean' 'time' 'between' event=ComponentPortEventReference 'and' event2=ComponentPortEventReference ';'
	//;
	public MeanTimeBetweenEventsElements getMeanTimeBetweenEventsAccess() {
		return pMeanTimeBetweenEvents;
	}
	
	public ParserRule getMeanTimeBetweenEventsRule() {
		return getMeanTimeBetweenEventsAccess().getRule();
	}
	
	////conditions
	//AssumeRaised returns AnalysisModel::AssumeRaised:
	//    'assume' 'raised' event=ComponentPortEventReference
	//;
	public AssumeRaisedElements getAssumeRaisedAccess() {
		return pAssumeRaised;
	}
	
	public ParserRule getAssumeRaisedRule() {
		return getAssumeRaisedAccess().getRule();
	}
	
	//AssumeNotRaised returns AnalysisModel::AssumeNotRaised:
	//    'assume' 'not' 'raised' event=ComponentPortEventReference
	//;
	public AssumeNotRaisedElements getAssumeNotRaisedAccess() {
		return pAssumeNotRaised;
	}
	
	public ParserRule getAssumeNotRaisedRule() {
		return getAssumeNotRaisedAccess().getRule();
	}
	
	//ObserveTime returns AnalysisModel::ObserveTime:
	//    'observe' 'time'  event=ComponentPortEventReference  '~' randomvariable=StochasticModel
	//;
	public ObserveTimeElements getObserveTimeAccess() {
		return pObserveTime;
	}
	
	public ParserRule getObserveTimeRule() {
		return getObserveTimeAccess().getRule();
	}
	
	//ObserveParameter returns AnalysisModel::ObserveParameter:
	//    'observe' 'parameter' event=ComponentPortEventReference"::"parameter=[ParameterDeclaration] "~" randomvariable=StochasticModel
	//;
	public ObserveParameterElements getObserveParameterAccess() {
		return pObserveParameter;
	}
	
	public ParserRule getObserveParameterRule() {
		return getObserveParameterAccess().getRule();
	}
	
	//EndCondition returns AnalysisModel::EndCondition:
	//    'end' 'condition' 'raised' event=ComponentPortEventReference
	//;
	public EndConditionElements getEndConditionAccess() {
		return pEndCondition;
	}
	
	public ParserRule getEndConditionRule() {
		return getEndConditionAccess().getRule();
	}
	
	//AnalysisCondition returns AnalysisModel::AnalysisCondition:
	//    AssumeRaised | AssumeNotRaised | ObserveParameter | ObserveTime
	//;
	public AnalysisConditionElements getAnalysisConditionAccess() {
		return pAnalysisCondition;
	}
	
	public ParserRule getAnalysisConditionRule() {
		return getAnalysisConditionAccess().getRule();
	}
	
	//PrioryDistribution returns AnalysisModel::PrioryDistribution:
	//    'prior' parameter=[ParameterDeclaration] '~' randomvariable=RandomVariable
	//;
	public PrioryDistributionElements getPrioryDistributionAccess() {
		return pPrioryDistribution;
	}
	
	public ParserRule getPrioryDistributionRule() {
		return getPrioryDistributionAccess().getRule();
	}
	
	////defining Environment models
	//EnvironmentCascadeCompositeComponent returns EnvironmentModel::EnvironmentCascadeCompositeComponent:
	//    'stochastic' 'cascade' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                components+=SynchronousComponentInstance |
	//                environmentComponents+=EnvironmentComponentInstance |
	//                portBindings+=PortBinding |
	//                channels+=Channel |
	//            ('initial' 'execute' initialExecutionList+=AtomicComponentInstanceReferenceExpression
	//                    (',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*) |
	//            ('execute' executionList+=AtomicComponentInstanceReferenceExpression
	//                    (',' executionList+=AtomicComponentInstanceReferenceExpression)*)
	//        )*
	//        '}'
	//;
	public EnvironmentCascadeCompositeComponentElements getEnvironmentCascadeCompositeComponentAccess() {
		return pEnvironmentCascadeCompositeComponent;
	}
	
	public ParserRule getEnvironmentCascadeCompositeComponentRule() {
		return getEnvironmentCascadeCompositeComponentAccess().getRule();
	}
	
	//EnvironmentSynchronousCompositeComponent returns EnvironmentModel::EnvironmentSynchronousCompositeComponent:
	//    'stochastic' 'sync' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                components+=SynchronousComponentInstance |
	//                environmentComponents+=EnvironmentComponentInstance |
	//                portBindings+=PortBinding |
	//                channels+=Channel
	//            )*
	//        '}'
	//;
	public EnvironmentSynchronousCompositeComponentElements getEnvironmentSynchronousCompositeComponentAccess() {
		return pEnvironmentSynchronousCompositeComponent;
	}
	
	public ParserRule getEnvironmentSynchronousCompositeComponentRule() {
		return getEnvironmentSynchronousCompositeComponentAccess().getRule();
	}
	
	//EnvironmentAsynchronousCompositeComponent returns EnvironmentModel::EnvironmentAsynchronousCompositeComponent:
	//    'stochastic' 'async' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                components+=AsynchronousComponentInstance |
	//                environmentComponents+=EnvironmentComponentInstance |
	//                portBindings+=PortBinding |
	//                channels+=Channel
	//            )*
	//        '}'
	//;
	public EnvironmentAsynchronousCompositeComponentElements getEnvironmentAsynchronousCompositeComponentAccess() {
		return pEnvironmentAsynchronousCompositeComponent;
	}
	
	public ParserRule getEnvironmentAsynchronousCompositeComponentRule() {
		return getEnvironmentAsynchronousCompositeComponentAccess().getRule();
	}
	
	///*
	//@Override
	//Package returns StatechartModel::Package:
	//    super
	//;*/
	//// Composition language
	///*
	//EnvironmentCascadeCompositeComponentInstance returns EnvironmentModel::EnvironmentCascadeCompositeComponentInstance:
	//    'stoch' 'component' name=ID ':' type=[EnvironmentModel::EnvironmentCascadeCompositeComponent] ('(' arguments+=Expression (',' arguments+=Expression)* ')')?
	//;*/
	///*EnvironmentSynchronousCompositeComponentInstance returns EnvironmentModel::EnvironmentSynchronousCompositeComponentInstance:
	//    'stoch1' 'component' name=ID ':' type=[EnvironmentModel::EnvironmentSynchronousCompositeComponent] ('(' arguments+=Expression (',' arguments+=Expression)* ')')?
	//;*/
	//EnvironmentAsynchronousCompositeComponentInstance returns EnvironmentModel::EnvironmentAsynchronousCompositeComponentInstance:
	//    'stochastic' 'component' name=ID ':' type=[EnvironmentModel::EnvironmentAsynchronousCompositeComponent] ('(' arguments+=MixedExpression (',' arguments+=MixedExpression)* ')')?
	//;
	public EnvironmentAsynchronousCompositeComponentInstanceElements getEnvironmentAsynchronousCompositeComponentInstanceAccess() {
		return pEnvironmentAsynchronousCompositeComponentInstance;
	}
	
	public ParserRule getEnvironmentAsynchronousCompositeComponentInstanceRule() {
		return getEnvironmentAsynchronousCompositeComponentInstanceAccess().getRule();
	}
	
	//AbstractEnvironmentCompositeComponentInstance returns EnvironmentModel::AbstractEnvironmentCompositeComponentInstance:
	//    //EnvironmentCascadeCompositeComponentInstance |
	//    //EnvironmentSynchronousCompositeComponentInstance |
	//    EnvironmentAsynchronousCompositeComponentInstance
	//;
	public AbstractEnvironmentCompositeComponentInstanceElements getAbstractEnvironmentCompositeComponentInstanceAccess() {
		return pAbstractEnvironmentCompositeComponentInstance;
	}
	
	public ParserRule getAbstractEnvironmentCompositeComponentInstanceRule() {
		return getAbstractEnvironmentCompositeComponentInstanceAccess().getRule();
	}
	
	//EnvironmentComponentInstance returns EnvironmentModel::EnvironmentComponentInstance:
	//    ElementaryEnvironmentComponentInstance
	//;
	public EnvironmentComponentInstanceElements getEnvironmentComponentInstanceAccess() {
		return pEnvironmentComponentInstance;
	}
	
	public ParserRule getEnvironmentComponentInstanceRule() {
		return getEnvironmentComponentInstanceAccess().getRule();
	}
	
	//ElementaryEnvironmentComponentInstance returns EnvironmentModel::ElementaryEnvironmentComponentInstance:
	//    EnvironementEventSource | PeriodicEnvironementEventSource | EnvironmentDelay | EnvironmentSample | EnvironmentSwitch | EnvironmentExternSimulation
	//;
	public ElementaryEnvironmentComponentInstanceElements getElementaryEnvironmentComponentInstanceAccess() {
		return pElementaryEnvironmentComponentInstance;
	}
	
	public ParserRule getElementaryEnvironmentComponentInstanceRule() {
		return getElementaryEnvironmentComponentInstanceAccess().getRule();
	}
	
	//StochasticRule returns EnvironmentModel::StochasticRule:
	//    (filter+=Filter ",")* filter+=Filter ":" stochasticModel=StochasticModel
	//;
	public StochasticRuleElements getStochasticRuleAccess() {
		return pStochasticRule;
	}
	
	public ParserRule getStochasticRuleRule() {
		return getStochasticRuleAccess().getRule();
	}
	
	//FilterSimulationRule returns EnvironmentModel::SimulationRule:
	//    (filter+=ParameterFilter ",")* filter+=ParameterFilter ":" simulation=Simulation
	//;
	public FilterSimulationRuleElements getFilterSimulationRuleAccess() {
		return pFilterSimulationRule;
	}
	
	public ParserRule getFilterSimulationRuleRule() {
		return getFilterSimulationRuleAccess().getRule();
	}
	
	//SwitchRule returns EnvironmentModel::StochasticRule:
	//    filter+=PortFilter ':' stochasticModel=CategoricalProbabaility
	//;
	public SwitchRuleElements getSwitchRuleAccess() {
		return pSwitchRule;
	}
	
	public ParserRule getSwitchRuleRule() {
		return getSwitchRuleAccess().getRule();
	}
	
	//DelayRule returns EnvironmentModel::StochasticRule:
	//    (filter+=PortFilter | filter+=ComponentFilter) ':' (stochasticModel=ContinouosRandomVariable | stochasticModel=StochasticProcess )
	//;
	public DelayRuleElements getDelayRuleAccess() {
		return pDelayRule;
	}
	
	public ParserRule getDelayRuleRule() {
		return getDelayRuleAccess().getRule();
	}
	
	//SampleRule returns EnvironmentModel::StochasticRule:
	//    (filter+=ParameterFilter ",")* filter+=ParameterFilter ':' (stochasticModel=RandomVariable | stochasticModel=StochasticProcess )
	//;
	public SampleRuleElements getSampleRuleAccess() {
		return pSampleRule;
	}
	
	public ParserRule getSampleRuleRule() {
		return getSampleRuleAccess().getRule();
	}
	
	//Filter returns EnvironmentModel::Filter:
	//    EventFilter | PortFilter | ComponentFilter
	//;
	public FilterElements getFilterAccess() {
		return pFilter;
	}
	
	public ParserRule getFilterRule() {
		return getFilterAccess().getRule();
	}
	
	//ParameterFilter returns EnvironmentModel::ParameterFilter:
	//    event=PortEventReference "::" parameter=[ParameterDeclaration]
	//;
	public ParameterFilterElements getParameterFilterAccess() {
		return pParameterFilter;
	}
	
	public ParserRule getParameterFilterRule() {
		return getParameterFilterAccess().getRule();
	}
	
	//EventFilter returns EnvironmentModel::EventFilter:
	//    event=PortEventReference
	//;
	public EventFilterElements getEventFilterAccess() {
		return pEventFilter;
	}
	
	public ParserRule getEventFilterRule() {
		return getEventFilterAccess().getRule();
	}
	
	//PortFilter returns EnvironmentModel::PortFilter:
	//    port=[InterfaceModel::Port]"." "*"
	//;
	public PortFilterElements getPortFilterAccess() {
		return pPortFilter;
	}
	
	public ParserRule getPortFilterRule() {
		return getPortFilterAccess().getRule();
	}
	
	//ComponentFilter returns EnvironmentModel::ComponentFilter:
	//    {EnvironmentModel::ComponentFilter} "*" "." "*"
	//;
	public ComponentFilterElements getComponentFilterAccess() {
		return pComponentFilter;
	}
	
	public ParserRule getComponentFilterRule() {
		return getComponentFilterAccess().getRule();
	}
	
	//SimulationRule returns EnvironmentModel::SimulationRule:
	//    simulation=Simulation
	//;
	public SimulationRuleElements getSimulationRuleAccess() {
		return pSimulationRule;
	}
	
	public ParserRule getSimulationRuleRule() {
		return getSimulationRuleAccess().getRule();
	}
	
	//Simulation returns EnvironmentModel::Simulation:
	//    "class" "=" simulationClassName=STRING
	//;
	public SimulationElements getSimulationAccess() {
		return pSimulation;
	}
	
	public ParserRule getSimulationRule() {
		return getSimulationAccess().getRule();
	}
	
	//EnvironementEventSource returns EnvironmentModel::EnvironmentEventSource:
	//    'source' name=ID  (outports+=Port ",")* outports+=Port "{"
	//        (behaviorRules+=StochasticRule ";")+
	//    "}"
	//;
	public EnvironementEventSourceElements getEnvironementEventSourceAccess() {
		return pEnvironementEventSource;
	}
	
	public ParserRule getEnvironementEventSourceRule() {
		return getEnvironementEventSourceAccess().getRule();
	}
	
	//PeriodicEnvironementEventSource returns EnvironmentModel::EnvironmentPeriodicEventSource:
	//    'periodic' 'source' name=ID  (outports+=Port ",")* outports+=Port "{"
	//        (behaviorRules+=(StochasticRule | FilterSimulationRule)";")+
	//    "}"
	//;
	public PeriodicEnvironementEventSourceElements getPeriodicEnvironementEventSourceAccess() {
		return pPeriodicEnvironementEventSource;
	}
	
	public ParserRule getPeriodicEnvironementEventSourceRule() {
		return getPeriodicEnvironementEventSourceAccess().getRule();
	}
	
	//EnvironmentSwitch returns EnvironmentModel::EnvironmentSwitch:
	//    'switch' name=ID inports+=Port "->"  (outports+=Port ",")*outports+=Port "{"
	//        (behaviorRules+=SwitchRule ";")+
	//    "}"
	//;
	public EnvironmentSwitchElements getEnvironmentSwitchAccess() {
		return pEnvironmentSwitch;
	}
	
	public ParserRule getEnvironmentSwitchRule() {
		return getEnvironmentSwitchAccess().getRule();
	}
	
	//EnvironmentDelay returns EnvironmentModel::EnvironmentDelay:
	//    'delay' name=ID inports+=Port "->"  outports+=Port "{"
	//        (behaviorRules+=(DelayRule| FilterSimulationRule)";")+
	//    "}"
	//;
	public EnvironmentDelayElements getEnvironmentDelayAccess() {
		return pEnvironmentDelay;
	}
	
	public ParserRule getEnvironmentDelayRule() {
		return getEnvironmentDelayAccess().getRule();
	}
	
	//EnvironmentSample returns EnvironmentModel::EnvironmentSample:
	//    'sample' name=ID inports+=Port "->"  outports+=Port "{"
	//        (behaviorRules+=(SampleRule | FilterSimulationRule)";")+
	//    "}"
	//;
	public EnvironmentSampleElements getEnvironmentSampleAccess() {
		return pEnvironmentSample;
	}
	
	public ParserRule getEnvironmentSampleRule() {
		return getEnvironmentSampleAccess().getRule();
	}
	
	//EnvironmentExternSimulation returns EnvironmentModel::EnvironmentExternSimulation:
	//    'simulation' name=ID (((inports+=Port ",")*inports+=Port "<->") | ("|->"))(outports+=Port ",")*outports+=Port "with" behaviorRules+=SimulationRule
	//;
	public EnvironmentExternSimulationElements getEnvironmentExternSimulationAccess() {
		return pEnvironmentExternSimulation;
	}
	
	public ParserRule getEnvironmentExternSimulationRule() {
		return getEnvironmentExternSimulationAccess().getRule();
	}
	
	//MixedExpression returns Expression:
	//    StochasticExpression | Expression
	//;
	public MixedExpressionElements getMixedExpressionAccess() {
		return pMixedExpression;
	}
	
	public ParserRule getMixedExpressionRule() {
		return getMixedExpressionAccess().getRule();
	}
	
	//StochasticExpression returns StochasticModel::StochasticExpression:
	//    'sample' '(' randomvariable=RandomVariable ')'
	//;
	public StochasticExpressionElements getStochasticExpressionAccess() {
		return pStochasticExpression;
	}
	
	public ParserRule getStochasticExpressionRule() {
		return getStochasticExpressionAccess().getRule();
	}
	
	//StochasticModel returns StochasticModel::StochasticModel:
	//    StochasticProcess | RandomVariable
	//;
	public StochasticModelElements getStochasticModelAccess() {
		return pStochasticModel;
	}
	
	public ParserRule getStochasticModelRule() {
		return getStochasticModelAccess().getRule();
	}
	
	//StochasticProcess returns StochasticModel::StochasticProcess:
	//    FittedGaussianProcess | DiracProcess
	//;
	public StochasticProcessElements getStochasticProcessAccess() {
		return pStochasticProcess;
	}
	
	public ParserRule getStochasticProcessRule() {
		return getStochasticProcessAccess().getRule();
	}
	
	//RandomVariable returns StochasticModel::RandomVariable:
	//    ContinouosRandomVariable | DiscreteRandomVariable
	//;
	public RandomVariableElements getRandomVariableAccess() {
		return pRandomVariable;
	}
	
	public ParserRule getRandomVariableRule() {
		return getRandomVariableAccess().getRule();
	}
	
	//ContinouosRandomVariable returns StochasticModel::ContinouosRandomVariable:
	//    NormalRandomVariable |
	//    ExponentialRandomVariable |
	//    WeibullRandomVariable |
	//    GammaRandomVariable |
	//    FittedExponentialRandomVariable |
	//    FittedGammaRandomVariable |
	//    FittedNormalRandomVariable |
	//    UniformRandomVariable |
	//    BetaRandomVariable |
	//    LogNormalRandomVariable |
	//    ParetoRandomVariable
	//;
	public ContinouosRandomVariableElements getContinouosRandomVariableAccess() {
		return pContinouosRandomVariable;
	}
	
	public ParserRule getContinouosRandomVariableRule() {
		return getContinouosRandomVariableAccess().getRule();
	}
	
	//DiscreteRandomVariable returns StochasticModel::DiscreteRandomVariable:
	//    BernoulliRandomVariable
	//;
	public DiscreteRandomVariableElements getDiscreteRandomVariableAccess() {
		return pDiscreteRandomVariable;
	}
	
	public ParserRule getDiscreteRandomVariableRule() {
		return getDiscreteRandomVariableAccess().getRule();
	}
	
	//UniformRandomVariable returns StochasticModel::UniformRandomVariable:
	//    ("uniform" "from" '=' lowerBound=Expression ',' 'to' '=' upperBound=Expression) |("Uniform" "("lowerBound=Expression "," upperBound=Expression ")")
	//;
	public UniformRandomVariableElements getUniformRandomVariableAccess() {
		return pUniformRandomVariable;
	}
	
	public ParserRule getUniformRandomVariableRule() {
		return getUniformRandomVariableAccess().getRule();
	}
	
	//LogNormalRandomVariable returns StochasticModel::LogNormalRandomVariable:
	//    ('lognormal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression )|("LogNormal" "("mean=Expression "," scale=Expression ")")
	//;
	public LogNormalRandomVariableElements getLogNormalRandomVariableAccess() {
		return pLogNormalRandomVariable;
	}
	
	public ParserRule getLogNormalRandomVariableRule() {
		return getLogNormalRandomVariableAccess().getRule();
	}
	
	//BetaRandomVariable returns StochasticModel::BetaRandomVariable:
	//    ('beta' 'alpha' '=' apha=Expression ',' 'beta' '=' beta=Expression )|("Beta" "("apha=Expression "," beta=Expression ")")
	//;
	public BetaRandomVariableElements getBetaRandomVariableAccess() {
		return pBetaRandomVariable;
	}
	
	public ParserRule getBetaRandomVariableRule() {
		return getBetaRandomVariableAccess().getRule();
	}
	
	//ParetoRandomVariable returns StochasticModel::ParetoRandomVariable:
	//    (('pareto' | 'Pareto') 'alpha' '=' alpha=Expression ',' 'scale' '=' scale=Expression )|("Pareto" "("alpha=Expression "," scale=Expression ")")
	//;
	public ParetoRandomVariableElements getParetoRandomVariableAccess() {
		return pParetoRandomVariable;
	}
	
	public ParserRule getParetoRandomVariableRule() {
		return getParetoRandomVariableAccess().getRule();
	}
	
	//NormalRandomVariable returns StochasticModel::NormalRandomVariable:
	//    (('normal' 'mean' '=' mean=Expression ',' 'scale' '=' scale=Expression ))|("Normal" "("mean=Expression "," scale=Expression ")")
	//;
	public NormalRandomVariableElements getNormalRandomVariableAccess() {
		return pNormalRandomVariable;
	}
	
	public ParserRule getNormalRandomVariableRule() {
		return getNormalRandomVariableAccess().getRule();
	}
	
	//WeibullRandomVariable returns StochasticModel::WeibullRandomVariable:
	//    (('Weibull' | 'weibull') 'concentration' '=' shape=Expression ',' 'scale' '=' scale=Expression)|("Weibull" "("shape=Expression "," scale=Expression ")")
	//;
	public WeibullRandomVariableElements getWeibullRandomVariableAccess() {
		return pWeibullRandomVariable;
	}
	
	public ParserRule getWeibullRandomVariableRule() {
		return getWeibullRandomVariableAccess().getRule();
	}
	
	//GammaRandomVariable returns StochasticModel::GammaRandomVariable:
	//    ('gamma' 'concentration' '=' shape=Expression ',' 'rate' '=' scale=Expression)|("Gamma" "("shape=Expression "," scale=Expression ")")
	//;
	public GammaRandomVariableElements getGammaRandomVariableAccess() {
		return pGammaRandomVariable;
	}
	
	public ParserRule getGammaRandomVariableRule() {
		return getGammaRandomVariableAccess().getRule();
	}
	
	//ExponentialRandomVariable returns StochasticModel::ExponentialRandomVariable:
	//    ('exponential' 'rate' '=' rate=Expression) |("Exponential" "("rate=Expression ")")
	//;
	public ExponentialRandomVariableElements getExponentialRandomVariableAccess() {
		return pExponentialRandomVariable;
	}
	
	public ParserRule getExponentialRandomVariableRule() {
		return getExponentialRandomVariableAccess().getRule();
	}
	
	//BernoulliRandomVariable returns StochasticModel::BernoulliRandomVariable:
	//    (('bernoulli'|'Bernoulli') 'prob' '=' probability=Expression) |("Bernoulli" "("probability=Expression ")")
	//;
	public BernoulliRandomVariableElements getBernoulliRandomVariableAccess() {
		return pBernoulliRandomVariable;
	}
	
	public ParserRule getBernoulliRandomVariableRule() {
		return getBernoulliRandomVariableAccess().getRule();
	}
	
	//FittedExponentialRandomVariable returns StochasticModel::FittedExponentialRandomVariable:
	//    'fitted' 'exponential' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
	//;
	public FittedExponentialRandomVariableElements getFittedExponentialRandomVariableAccess() {
		return pFittedExponentialRandomVariable;
	}
	
	public ParserRule getFittedExponentialRandomVariableRule() {
		return getFittedExponentialRandomVariableAccess().getRule();
	}
	
	//FittedNormalRandomVariable returns StochasticModel::FittedNormalRandomVariable:
	//    'fitted' 'normal' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
	//;
	public FittedNormalRandomVariableElements getFittedNormalRandomVariableAccess() {
		return pFittedNormalRandomVariable;
	}
	
	public ParserRule getFittedNormalRandomVariableRule() {
		return getFittedNormalRandomVariableAccess().getRule();
	}
	
	//FittedGammaRandomVariable returns StochasticModel::FittedGammaRandomVariable:
	//    'fitted' 'gamma' 'lr' '=' lr=DOUBLE ',' 'source' '=' source=DataSource
	//;
	public FittedGammaRandomVariableElements getFittedGammaRandomVariableAccess() {
		return pFittedGammaRandomVariable;
	}
	
	public ParserRule getFittedGammaRandomVariableRule() {
		return getFittedGammaRandomVariableAccess().getRule();
	}
	
	//CategoricalProbabaility returns StochasticModel::CategoricalProbabaility:
	//    probability=Expression
	//;
	public CategoricalProbabailityElements getCategoricalProbabailityAccess() {
		return pCategoricalProbabaility;
	}
	
	public ParserRule getCategoricalProbabailityRule() {
		return getCategoricalProbabailityAccess().getRule();
	}
	
	//DiracProcess returns StochasticModel::DiracProcess:
	//    "Dirac" "source" "=" source=DataSource
	//;
	public DiracProcessElements getDiracProcessAccess() {
		return pDiracProcess;
	}
	
	public ParserRule getDiracProcessRule() {
		return getDiracProcessAccess().getRule();
	}
	
	//FittedGaussianProcess returns StochasticModel::FittedGaussianProcess:
	//    ("GP"|"Gauss" "Process") "kernel" "="kernel=Kernel ("," "lr" "=" lr=DOUBLE)? "," "source" "="source=DataSource
	//;
	public FittedGaussianProcessElements getFittedGaussianProcessAccess() {
		return pFittedGaussianProcess;
	}
	
	public ParserRule getFittedGaussianProcessRule() {
		return getFittedGaussianProcessAccess().getRule();
	}
	
	//Kernel returns StochasticModel::Kernel:
	//     BrownianKernel | LinearKernel | RBFKernel | PeriodicKernel |SumKernel
	//;
	public KernelElements getKernelAccess() {
		return pKernel;
	}
	
	public ParserRule getKernelRule() {
		return getKernelAccess().getRule();
	}
	
	//SumKernel returns StochasticModel::SumKernel:
	//    "(" kernels+=Kernel "+" kernels+=Kernel ")"
	//;
	public SumKernelElements getSumKernelAccess() {
		return pSumKernel;
	}
	
	public ParserRule getSumKernelRule() {
		return getSumKernelAccess().getRule();
	}
	
	//BrownianKernel returns StochasticModel::BrownianKernel:
	//    {StochasticModel::BrownianKernel} "Brownian"
	//;
	public BrownianKernelElements getBrownianKernelAccess() {
		return pBrownianKernel;
	}
	
	public ParserRule getBrownianKernelRule() {
		return getBrownianKernelAccess().getRule();
	}
	
	//RBFKernel returns StochasticModel::RBFKernel:
	//    {StochasticModel::RBFKernel} "RBF"
	//;
	public RBFKernelElements getRBFKernelAccess() {
		return pRBFKernel;
	}
	
	public ParserRule getRBFKernelRule() {
		return getRBFKernelAccess().getRule();
	}
	
	//LinearKernel returns StochasticModel::LinearKernel:
	//    {StochasticModel::LinearKernel} "Linear"
	//;
	public LinearKernelElements getLinearKernelAccess() {
		return pLinearKernel;
	}
	
	public ParserRule getLinearKernelRule() {
		return getLinearKernelAccess().getRule();
	}
	
	//PeriodicKernel returns StochasticModel::PeriodicKernel:
	//    {StochasticModel::PeriodicKernel} "Periodic"
	//;
	public PeriodicKernelElements getPeriodicKernelAccess() {
		return pPeriodicKernel;
	}
	
	public ParserRule getPeriodicKernelRule() {
		return getPeriodicKernelAccess().getRule();
	}
	
	//DataSource returns StochasticModel::DataSource:
	//    InfluxDB | PythonSimulation
	//;
	public DataSourceElements getDataSourceAccess() {
		return pDataSource;
	}
	
	public ParserRule getDataSourceRule() {
		return getDataSourceAccess().getRule();
	}
	
	//AtomicExpression returns Expression:
	//      DirectReferenceExpression |
	//      LiteralExpression |
	//     '(' Expression ')'
	//;
	public AtomicExpressionElements getAtomicExpressionAccess() {
		return pAtomicExpression;
	}
	
	public ParserRule getAtomicExpressionRule() {
		return getAtomicExpressionAccess().getRule();
	}
	
	//InfluxDB returns StochasticModel::InfluxDB:
	//    "InfluxDB" "(" "db" ":" dbname=STRING "," "ip" ":" ip=STRING "," "port" ":"  port=STRING "," "query" ":" query=STRING ")"
	//;
	public InfluxDBElements getInfluxDBAccess() {
		return pInfluxDB;
	}
	
	public ParserRule getInfluxDBRule() {
		return getInfluxDBAccess().getRule();
	}
	
	//PythonSimulation returns StochasticModel::PythonSimulation:
	//    "Python" "(" script=STRING ")"
	//;
	public PythonSimulationElements getPythonSimulationAccess() {
		return pPythonSimulation;
	}
	
	public ParserRule getPythonSimulationRule() {
		return getPythonSimulationAccess().getRule();
	}
	
	//terminal DOUBLE returns Ecore::EDouble:
	//    '#' ('0'..'9')+ ('.' ('0'..'9')+)
	//;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//TimeoutDeclaration returns TimeoutDeclaration:
	//    'timeout' name=ID
	//;
	public StatechartLanguageGrammarAccess.TimeoutDeclarationElements getTimeoutDeclarationAccess() {
		return gaStatechartLanguage.getTimeoutDeclarationAccess();
	}
	
	public ParserRule getTimeoutDeclarationRule() {
		return getTimeoutDeclarationAccess().getRule();
	}
	
	//enum And returns BinaryType:
	//    AND = '&&'
	//;
	public StatechartLanguageGrammarAccess.AndElements getAndAccess() {
		return gaStatechartLanguage.getAndAccess();
	}
	
	public EnumRule getAndRule() {
		return getAndAccess().getRule();
	}
	
	//enum Or returns BinaryType:
	//    OR = '||'
	//;
	public StatechartLanguageGrammarAccess.OrElements getOrAccess() {
		return gaStatechartLanguage.getOrAccess();
	}
	
	public EnumRule getOrRule() {
		return getOrAccess().getRule();
	}
	
	//enum Equal returns BinaryType:
	//    EQUAL = '=='
	//;
	public StatechartLanguageGrammarAccess.EqualElements getEqualAccess() {
		return gaStatechartLanguage.getEqualAccess();
	}
	
	public EnumRule getEqualRule() {
		return getEqualAccess().getRule();
	}
	
	//enum Xor returns BinaryType:
	//    XOR = '^'
	//;
	public StatechartLanguageGrammarAccess.XorElements getXorAccess() {
		return gaStatechartLanguage.getXorAccess();
	}
	
	public EnumRule getXorRule() {
		return getXorAccess().getRule();
	}
	
	//enum Imply returns BinaryType:
	//    IMPLY = '->'
	//;
	public StatechartLanguageGrammarAccess.ImplyElements getImplyAccess() {
		return gaStatechartLanguage.getImplyAccess();
	}
	
	public EnumRule getImplyRule() {
		return getImplyAccess().getRule();
	}
	
	//Trigger returns InterfaceModel::Trigger:
	//    OnCycleTrigger |
	//    AnyTrigger |
	//    ComplexTrigger
	//;
	public StatechartLanguageGrammarAccess.TriggerElements getTriggerAccess() {
		return gaStatechartLanguage.getTriggerAccess();
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}
	
	///**
	// * Used by ControlSpecification.
	// * The other trigger rules have precedence rules and defined according to left recursion.
	// */
	//SimpleTrigger returns InterfaceModel::SimpleTrigger:
	//    OnCycleTrigger |
	//    AnyTrigger |
	//    OpaqueTrigger |
	//    EventTrigger
	//;
	public StatechartLanguageGrammarAccess.SimpleTriggerElements getSimpleTriggerAccess() {
		return gaStatechartLanguage.getSimpleTriggerAccess();
	}
	
	public ParserRule getSimpleTriggerRule() {
		return getSimpleTriggerAccess().getRule();
	}
	
	//ComplexTrigger returns InterfaceModel::Trigger:
	//    BinaryTrigger
	//;
	public StatechartLanguageGrammarAccess.ComplexTriggerElements getComplexTriggerAccess() {
		return gaStatechartLanguage.getComplexTriggerAccess();
	}
	
	public ParserRule getComplexTriggerRule() {
		return getComplexTriggerAccess().getRule();
	}
	
	//BinaryTrigger returns InterfaceModel::Trigger:
	//    EqualTrigger
	//;
	public StatechartLanguageGrammarAccess.BinaryTriggerElements getBinaryTriggerAccess() {
		return gaStatechartLanguage.getBinaryTriggerAccess();
	}
	
	public ParserRule getBinaryTriggerRule() {
		return getBinaryTriggerAccess().getRule();
	}
	
	//EqualTrigger returns InterfaceModel::Trigger:
	//    ImplyTrigger ({BinaryTrigger.leftOperand=current} type=Equal rightOperand=EqualTrigger)?
	//;
	public StatechartLanguageGrammarAccess.EqualTriggerElements getEqualTriggerAccess() {
		return gaStatechartLanguage.getEqualTriggerAccess();
	}
	
	public ParserRule getEqualTriggerRule() {
		return getEqualTriggerAccess().getRule();
	}
	
	//ImplyTrigger returns InterfaceModel::Trigger:
	//    OrTrigger ({BinaryTrigger.leftOperand=current} type=Imply rightOperand=ImplyTrigger)?
	//;
	public StatechartLanguageGrammarAccess.ImplyTriggerElements getImplyTriggerAccess() {
		return gaStatechartLanguage.getImplyTriggerAccess();
	}
	
	public ParserRule getImplyTriggerRule() {
		return getImplyTriggerAccess().getRule();
	}
	
	//OrTrigger returns InterfaceModel::Trigger:
	//    XorTrigger ({BinaryTrigger.leftOperand=current} type=Or rightOperand=OrTrigger)?
	//;
	public StatechartLanguageGrammarAccess.OrTriggerElements getOrTriggerAccess() {
		return gaStatechartLanguage.getOrTriggerAccess();
	}
	
	public ParserRule getOrTriggerRule() {
		return getOrTriggerAccess().getRule();
	}
	
	//XorTrigger returns InterfaceModel::Trigger:
	//    AndTrigger ({BinaryTrigger.leftOperand=current} type=Xor rightOperand=XorTrigger)?
	//;
	public StatechartLanguageGrammarAccess.XorTriggerElements getXorTriggerAccess() {
		return gaStatechartLanguage.getXorTriggerAccess();
	}
	
	public ParserRule getXorTriggerRule() {
		return getXorTriggerAccess().getRule();
	}
	
	//AndTrigger returns InterfaceModel::Trigger:
	//    BinaryOperand ({BinaryTrigger.leftOperand=current} type=And rightOperand=AndTrigger)?
	//;
	public StatechartLanguageGrammarAccess.AndTriggerElements getAndTriggerAccess() {
		return gaStatechartLanguage.getAndTriggerAccess();
	}
	
	public ParserRule getAndTriggerRule() {
		return getAndTriggerAccess().getRule();
	}
	
	//BinaryOperand returns InterfaceModel::Trigger:
	//    UnaryTrigger | ParenthesesTrigger
	//;
	public StatechartLanguageGrammarAccess.BinaryOperandElements getBinaryOperandAccess() {
		return gaStatechartLanguage.getBinaryOperandAccess();
	}
	
	public ParserRule getBinaryOperandRule() {
		return getBinaryOperandAccess().getRule();
	}
	
	//enum Not returns UnaryType:
	//    NOT='!'
	//;
	public StatechartLanguageGrammarAccess.NotElements getNotAccess() {
		return gaStatechartLanguage.getNotAccess();
	}
	
	public EnumRule getNotRule() {
		return getNotAccess().getRule();
	}
	
	//UnaryTrigger returns InterfaceModel::Trigger:
	//    NotTrigger | EventTrigger | OpaqueTrigger
	//;
	public StatechartLanguageGrammarAccess.UnaryTriggerElements getUnaryTriggerAccess() {
		return gaStatechartLanguage.getUnaryTriggerAccess();
	}
	
	public ParserRule getUnaryTriggerRule() {
		return getUnaryTriggerAccess().getRule();
	}
	
	//NotTrigger returns UnaryTrigger:
	//    type=Not operand=ParenthesesTrigger
	//;
	public StatechartLanguageGrammarAccess.NotTriggerElements getNotTriggerAccess() {
		return gaStatechartLanguage.getNotTriggerAccess();
	}
	
	public ParserRule getNotTriggerRule() {
		return getNotTriggerAccess().getRule();
	}
	
	//ParenthesesTrigger returns InterfaceModel::Trigger:
	//    '('EqualTrigger')'
	//;
	public StatechartLanguageGrammarAccess.ParenthesesTriggerElements getParenthesesTriggerAccess() {
		return gaStatechartLanguage.getParenthesesTriggerAccess();
	}
	
	public ParserRule getParenthesesTriggerRule() {
		return getParenthesesTriggerAccess().getRule();
	}
	
	//OnCycleTrigger returns OnCycleTrigger:
	//    {OnCycleTrigger} 'cycle'
	//;
	public StatechartLanguageGrammarAccess.OnCycleTriggerElements getOnCycleTriggerAccess() {
		return gaStatechartLanguage.getOnCycleTriggerAccess();
	}
	
	public ParserRule getOnCycleTriggerRule() {
		return getOnCycleTriggerAccess().getRule();
	}
	
	//AnyTrigger returns InterfaceModel::AnyTrigger:
	//    {InterfaceModel::AnyTrigger} 'any'
	//;
	public StatechartLanguageGrammarAccess.AnyTriggerElements getAnyTriggerAccess() {
		return gaStatechartLanguage.getAnyTriggerAccess();
	}
	
	public ParserRule getAnyTriggerRule() {
		return getAnyTriggerAccess().getRule();
	}
	
	//OpaqueTrigger returns OpaqueTrigger:
	//    trigger=STRING
	//;
	public StatechartLanguageGrammarAccess.OpaqueTriggerElements getOpaqueTriggerAccess() {
		return gaStatechartLanguage.getOpaqueTriggerAccess();
	}
	
	public ParserRule getOpaqueTriggerRule() {
		return getOpaqueTriggerAccess().getRule();
	}
	
	//EventTrigger returns InterfaceModel::EventTrigger:
	//    eventReference=EventReference
	//;
	public StatechartLanguageGrammarAccess.EventTriggerElements getEventTriggerAccess() {
		return gaStatechartLanguage.getEventTriggerAccess();
	}
	
	public ParserRule getEventTriggerRule() {
		return getEventTriggerAccess().getRule();
	}
	
	//EventReference returns InterfaceModel::EventReference:
	//    ClockTickReference |
	//    TimeoutEventReference |
	//    AnyPortEventReference |
	//    PortEventReference
	//;
	public StatechartLanguageGrammarAccess.EventReferenceElements getEventReferenceAccess() {
		return gaStatechartLanguage.getEventReferenceAccess();
	}
	
	public ParserRule getEventReferenceRule() {
		return getEventReferenceAccess().getRule();
	}
	
	//ClockTickReference returns ClockTickReference:
	//    clock=[InterfaceModel::Clock]
	//;
	public StatechartLanguageGrammarAccess.ClockTickReferenceElements getClockTickReferenceAccess() {
		return gaStatechartLanguage.getClockTickReferenceAccess();
	}
	
	public ParserRule getClockTickReferenceRule() {
		return getClockTickReferenceAccess().getRule();
	}
	
	//TimeoutEventReference returns TimeoutEventReference:
	//    'timeout' timeout=[TimeoutDeclaration]
	//;
	public StatechartLanguageGrammarAccess.TimeoutEventReferenceElements getTimeoutEventReferenceAccess() {
		return gaStatechartLanguage.getTimeoutEventReferenceAccess();
	}
	
	public ParserRule getTimeoutEventReferenceRule() {
		return getTimeoutEventReferenceAccess().getRule();
	}
	
	//AnyPortEventReference returns AnyPortEventReference:
	//    port=[InterfaceModel::Port] '.' 'any'
	//;
	public StatechartLanguageGrammarAccess.AnyPortEventReferenceElements getAnyPortEventReferenceAccess() {
		return gaStatechartLanguage.getAnyPortEventReferenceAccess();
	}
	
	public ParserRule getAnyPortEventReferenceRule() {
		return getAnyPortEventReferenceAccess().getRule();
	}
	
	//PortEventReference returns PortEventReference:
	//    port=[InterfaceModel::Port] '.' event=[InterfaceModel::Event]
	//;
	public StatechartLanguageGrammarAccess.PortEventReferenceElements getPortEventReferenceAccess() {
		return gaStatechartLanguage.getPortEventReferenceAccess();
	}
	
	public ParserRule getPortEventReferenceRule() {
		return getPortEventReferenceAccess().getRule();
	}
	
	//Port returns InterfaceModel::Port:
	//    'port' name=ID ':' interfaceRealization=InterfaceRealization
	//;
	public StatechartLanguageGrammarAccess.PortElements getPortAccess() {
		return gaStatechartLanguage.getPortAccess();
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}
	
	//InterfaceRealization returns InterfaceModel::InterfaceRealization:
	//    realizationMode=RealizationMode interface=[InterfaceModel::Interface]
	//;
	public StatechartLanguageGrammarAccess.InterfaceRealizationElements getInterfaceRealizationAccess() {
		return gaStatechartLanguage.getInterfaceRealizationAccess();
	}
	
	public ParserRule getInterfaceRealizationRule() {
		return getInterfaceRealizationAccess().getRule();
	}
	
	//enum RealizationMode returns InterfaceModel::RealizationMode:
	//    PROVIDED = 'provides' | REQUIRED = 'requires'
	//;
	public StatechartLanguageGrammarAccess.RealizationModeElements getRealizationModeAccess() {
		return gaStatechartLanguage.getRealizationModeAccess();
	}
	
	public EnumRule getRealizationModeRule() {
		return getRealizationModeAccess().getRule();
	}
	
	//SynchronousStatechartDefinition returns SynchronousStatechartDefinition:
	//    (
	//        ('@RegionSchedule' '=' schedulingOrder=SchedulingOrder)? &
	//        ('@OrthogonalRegionSchedule' '=' orthogonalRegionSchedulingOrder=OrthogonalRegionSchedulingOrder)? &
	//        ('@TransitionPriority' '=' transitionPriority=TransitionPriority)? &
	//        ('@GuardEvaluation' '=' guardEvaluation=GuardEvaluation)? &
	//        (    annotations+=ComponentAnnotation |
	//            annotations+=StatechartContractAnnotation
	//        )*
	//    )
	//    'statechart' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')? '{'
	//            (
	//                variableDeclarations+=VariableDeclaration |
	//                timeoutDeclarations+=TimeoutDeclaration
	//            )*
	//            (
	//                regions+=Region |
	//                transitions+=Transition
	//            )*
	//            functionDeclarations+=FunctionDeclaration*
	//    '}'
	//;
	public StatechartLanguageGrammarAccess.SynchronousStatechartDefinitionElements getSynchronousStatechartDefinitionAccess() {
		return gaStatechartLanguage.getSynchronousStatechartDefinitionAccess();
	}
	
	public ParserRule getSynchronousStatechartDefinitionRule() {
		return getSynchronousStatechartDefinitionAccess().getRule();
	}
	
	//AsynchronousStatechartDefinition returns AsynchronousStatechartDefinition:
	//    '@Asynchronous'
	//    (
	//        ('@RegionSchedule' '=' schedulingOrder=SchedulingOrder)? &
	//        ('@OrthogonalRegionSchedule' '=' orthogonalRegionSchedulingOrder=OrthogonalRegionSchedulingOrder)? &
	//        ('@TransitionPriority' '=' transitionPriority=TransitionPriority)? &
	//        ('@GuardEvaluation' '=' guardEvaluation=GuardEvaluation)? &
	//        (    annotations+=ComponentAnnotation |
	//            annotations+=StatechartContractAnnotation
	//        )*
	//    )
	//    'statechart' name=ID ('capacity' '(' capacity=Expression ')')?
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')? '{'
	//            (
	//                variableDeclarations+=VariableDeclaration |
	//                timeoutDeclarations+=TimeoutDeclaration
	//            )*
	//            (
	//                regions+=Region |
	//                transitions+=Transition
	//            )*
	//            functionDeclarations+=FunctionDeclaration*
	//    '}'
	//;
	public StatechartLanguageGrammarAccess.AsynchronousStatechartDefinitionElements getAsynchronousStatechartDefinitionAccess() {
		return gaStatechartLanguage.getAsynchronousStatechartDefinitionAccess();
	}
	
	public ParserRule getAsynchronousStatechartDefinitionRule() {
		return getAsynchronousStatechartDefinitionAccess().getRule();
	}
	
	//enum SchedulingOrder returns SchedulingOrder:
	//    TOP_DOWN = 'top-down' | BOTTOM_UP = 'bottom-up'
	//;
	public StatechartLanguageGrammarAccess.SchedulingOrderElements getSchedulingOrderAccess() {
		return gaStatechartLanguage.getSchedulingOrderAccess();
	}
	
	public EnumRule getSchedulingOrderRule() {
		return getSchedulingOrderAccess().getRule();
	}
	
	//enum OrthogonalRegionSchedulingOrder returns OrthogonalRegionSchedulingOrder:
	//    SEQUENTIAL = 'sequential' | UNORDERED = 'unordered' | PARALLEL = 'parallel'
	//;
	public StatechartLanguageGrammarAccess.OrthogonalRegionSchedulingOrderElements getOrthogonalRegionSchedulingOrderAccess() {
		return gaStatechartLanguage.getOrthogonalRegionSchedulingOrderAccess();
	}
	
	public EnumRule getOrthogonalRegionSchedulingOrderRule() {
		return getOrthogonalRegionSchedulingOrderAccess().getRule();
	}
	
	//enum TransitionPriority returns TransitionPriority:
	//    OFF = 'off' | ORDER_BASED = 'order-based' | VALUE_BASED = 'value-based'
	//;
	public StatechartLanguageGrammarAccess.TransitionPriorityElements getTransitionPriorityAccess() {
		return gaStatechartLanguage.getTransitionPriorityAccess();
	}
	
	public EnumRule getTransitionPriorityRule() {
		return getTransitionPriorityAccess().getRule();
	}
	
	//enum GuardEvaluation returns GuardEvaluation:
	//    ON_THE_FLY = 'on-the-fly' | BEGINNING_OF_STEP = 'beginning-of-step'
	//;
	public StatechartLanguageGrammarAccess.GuardEvaluationElements getGuardEvaluationAccess() {
		return gaStatechartLanguage.getGuardEvaluationAccess();
	}
	
	public EnumRule getGuardEvaluationRule() {
		return getGuardEvaluationAccess().getRule();
	}
	
	//ComponentAnnotation returns InterfaceModel::ComponentAnnotation:
	//    WrapperComponentAnnotation | RunUponExternalEventAnnotation | RunUponExternalEventOrInternalTimeoutAnnotation
	//;
	public StatechartLanguageGrammarAccess.ComponentAnnotationElements getComponentAnnotationAccess() {
		return gaStatechartLanguage.getComponentAnnotationAccess();
	}
	
	public ParserRule getComponentAnnotationRule() {
		return getComponentAnnotationAccess().getRule();
	}
	
	//StatechartContractAnnotation returns StatechartAnnotation:
	//    ScenarioAllowedWaitingAnnotation | ScenarioContractAnnotation |
	//    AdaptiveContractAnnotation | MissionPhaseAnnotation | HasInitialoutputsBlockAnnotation |
	//    NegativeContractStatechartAnnotation
	//;
	public StatechartLanguageGrammarAccess.StatechartContractAnnotationElements getStatechartContractAnnotationAccess() {
		return gaStatechartLanguage.getStatechartContractAnnotationAccess();
	}
	
	public ParserRule getStatechartContractAnnotationRule() {
		return getStatechartContractAnnotationAccess().getRule();
	}
	
	//NegativeContractStatechartAnnotation returns ContractModel::NegativeContractStatechartAnnotation:
	//    {ContractModel::NegativeContractStatechartAnnotation}
	//    '@NegativeContractStatechart'
	//;
	public StatechartLanguageGrammarAccess.NegativeContractStatechartAnnotationElements getNegativeContractStatechartAnnotationAccess() {
		return gaStatechartLanguage.getNegativeContractStatechartAnnotationAccess();
	}
	
	public ParserRule getNegativeContractStatechartAnnotationRule() {
		return getNegativeContractStatechartAnnotationAccess().getRule();
	}
	
	//HasInitialoutputsBlockAnnotation returns ContractModel::HasInitialOutputsBlockAnnotation:
	//    {ContractModel::HasInitialOutputsBlockAnnotation}
	//    '@HasInitialOutputsBlock'
	//;
	public StatechartLanguageGrammarAccess.HasInitialoutputsBlockAnnotationElements getHasInitialoutputsBlockAnnotationAccess() {
		return gaStatechartLanguage.getHasInitialoutputsBlockAnnotationAccess();
	}
	
	public ParserRule getHasInitialoutputsBlockAnnotationRule() {
		return getHasInitialoutputsBlockAnnotationAccess().getRule();
	}
	
	//enum SpecialStateKind returns ContractModel::SpecialStateKind:
	//    ACCEPTING = 'accepting'
	//;
	public StatechartLanguageGrammarAccess.SpecialStateKindElements getSpecialStateKindAccess() {
		return gaStatechartLanguage.getSpecialStateKindAccess();
	}
	
	public EnumRule getSpecialStateKindRule() {
		return getSpecialStateKindAccess().getRule();
	}
	
	//ScenarioAllowedWaitingAnnotation returns ContractModel::ScenarioAllowedWaitAnnotation:
	//    {ContractModel::ScenarioAllowedWaitAnnotation}
	//    ('@ScenarioAllowedWaitAnnotation' | '@ScenarioAllowedWait') '=' lowerLimit=Expression '..' upperLimit=Expression
	//;
	public StatechartLanguageGrammarAccess.ScenarioAllowedWaitingAnnotationElements getScenarioAllowedWaitingAnnotationAccess() {
		return gaStatechartLanguage.getScenarioAllowedWaitingAnnotationAccess();
	}
	
	public ParserRule getScenarioAllowedWaitingAnnotationRule() {
		return getScenarioAllowedWaitingAnnotationAccess().getRule();
	}
	
	//ScenarioContractAnnotation returns ContractModel::ScenarioContractAnnotation:
	//    '@ScenarioContractStatechart' '=' monitoredComponent=[InterfaceModel::Component] '(' scenarioType = NotDefinedEventMode ')'
	//;
	public StatechartLanguageGrammarAccess.ScenarioContractAnnotationElements getScenarioContractAnnotationAccess() {
		return gaStatechartLanguage.getScenarioContractAnnotationAccess();
	}
	
	public ParserRule getScenarioContractAnnotationRule() {
		return getScenarioContractAnnotationAccess().getRule();
	}
	
	//enum NotDefinedEventMode returns ContractModel::NotDefinedEventMode:
	//    PERMISSIVE = 'permissive' | STRICT ='strict'
	//;
	public StatechartLanguageGrammarAccess.NotDefinedEventModeElements getNotDefinedEventModeAccess() {
		return gaStatechartLanguage.getNotDefinedEventModeAccess();
	}
	
	public EnumRule getNotDefinedEventModeRule() {
		return getNotDefinedEventModeAccess().getRule();
	}
	
	//AdaptiveContractAnnotation returns ContractModel::AdaptiveContractAnnotation:
	//    '@AdaptiveContractStatechart' '=' monitoredComponent=[InterfaceModel::Component]
	//;
	public StatechartLanguageGrammarAccess.AdaptiveContractAnnotationElements getAdaptiveContractAnnotationAccess() {
		return gaStatechartLanguage.getAdaptiveContractAnnotationAccess();
	}
	
	public ParserRule getAdaptiveContractAnnotationRule() {
		return getAdaptiveContractAnnotationAccess().getRule();
	}
	
	//MissionPhaseAnnotation returns PhaseModel::MissionPhaseAnnotation:
	//    {PhaseModel::MissionPhaseAnnotation} '@PhaseStatechart'
	//;
	public StatechartLanguageGrammarAccess.MissionPhaseAnnotationElements getMissionPhaseAnnotationAccess() {
		return gaStatechartLanguage.getMissionPhaseAnnotationAccess();
	}
	
	public ParserRule getMissionPhaseAnnotationRule() {
		return getMissionPhaseAnnotationAccess().getRule();
	}
	
	//WrapperComponentAnnotation returns InterfaceModel::WrapperComponentAnnotation:
	//    {InterfaceModel::WrapperComponentAnnotation} '@WrapperComponent'
	//;
	public StatechartLanguageGrammarAccess.WrapperComponentAnnotationElements getWrapperComponentAnnotationAccess() {
		return gaStatechartLanguage.getWrapperComponentAnnotationAccess();
	}
	
	public ParserRule getWrapperComponentAnnotationRule() {
		return getWrapperComponentAnnotationAccess().getRule();
	}
	
	//RunUponExternalEventAnnotation returns RunUponExternalEventAnnotation:
	//    {RunUponExternalEventAnnotation} ('@RunUponExternalEventAnnotation' |
	//        '@RunUponExternalEvent')
	//;
	public StatechartLanguageGrammarAccess.RunUponExternalEventAnnotationElements getRunUponExternalEventAnnotationAccess() {
		return gaStatechartLanguage.getRunUponExternalEventAnnotationAccess();
	}
	
	public ParserRule getRunUponExternalEventAnnotationRule() {
		return getRunUponExternalEventAnnotationAccess().getRule();
	}
	
	//RunUponExternalEventOrInternalTimeoutAnnotation returns RunUponExternalEventOrInternalTimeoutAnnotation:
	//    {RunUponExternalEventOrInternalTimeoutAnnotation} ('@RunUponExternalEventOrInternalTimeoutAnnotation' |
	//        '@RunUponExternalEventOrInternalTimeout' )
	//;
	public StatechartLanguageGrammarAccess.RunUponExternalEventOrInternalTimeoutAnnotationElements getRunUponExternalEventOrInternalTimeoutAnnotationAccess() {
		return gaStatechartLanguage.getRunUponExternalEventOrInternalTimeoutAnnotationAccess();
	}
	
	public ParserRule getRunUponExternalEventOrInternalTimeoutAnnotationRule() {
		return getRunUponExternalEventOrInternalTimeoutAnnotationAccess().getRule();
	}
	
	//Region returns Region:
	//    'region' name=ID '{'
	//        (stateNodes+=StateNode)*
	//    '}'
	//;
	public StatechartLanguageGrammarAccess.RegionElements getRegionAccess() {
		return gaStatechartLanguage.getRegionAccess();
	}
	
	public ParserRule getRegionRule() {
		return getRegionAccess().getRule();
	}
	
	//Transition returns Transition:
	//    (annotations+=TransitionAnnotation)*
	//    'transition' ('(' priority=INTEGER ')')?
	//    'from' sourceState=[StateNode] 'to' targetState=[StateNode]
	//    (
	//        ('when' trigger=Trigger)?
	//        ('[' guard=Expression ']')?
	//        ('/' ( => effects+=Action)* )?
	//    )
	//;
	public StatechartLanguageGrammarAccess.TransitionElements getTransitionAccess() {
		return gaStatechartLanguage.getTransitionAccess();
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//TransitionAnnotation returns TransitionAnnotation:
	//    TransitionIdAnnotation
	//;
	public StatechartLanguageGrammarAccess.TransitionAnnotationElements getTransitionAnnotationAccess() {
		return gaStatechartLanguage.getTransitionAnnotationAccess();
	}
	
	public ParserRule getTransitionAnnotationRule() {
		return getTransitionAnnotationAccess().getRule();
	}
	
	//TransitionIdAnnotation returns TransitionIdAnnotation:
	//    '@' '(' name=ID ')'
	//;
	public StatechartLanguageGrammarAccess.TransitionIdAnnotationElements getTransitionIdAnnotationAccess() {
		return gaStatechartLanguage.getTransitionIdAnnotationAccess();
	}
	
	public ParserRule getTransitionIdAnnotationRule() {
		return getTransitionIdAnnotationAccess().getRule();
	}
	
	//StateNode returns StateNode:
	//    PseudoState |
	//    State
	//;
	public StatechartLanguageGrammarAccess.StateNodeElements getStateNodeAccess() {
		return gaStatechartLanguage.getStateNodeAccess();
	}
	
	public ParserRule getStateNodeRule() {
		return getStateNodeAccess().getRule();
	}
	
	//State returns State:
	//    (annotations+=StateAnnotation)*
	//    'state' name=ID
	//    (
	//        '{'
	//        (
	//            (
	//                ('invariant' invariants+=Expression)*
	//                ('entry' '/' (=> entryActions+=Action)* )?
	//                ('exit' '/' (=> exitActions+=Action)* )?
	//            )
	//            (regions+=Region)*
	//        )
	//        '}'
	//    )?
	//;
	public StatechartLanguageGrammarAccess.StateElements getStateAccess() {
		return gaStatechartLanguage.getStateAccess();
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//StateAnnotation returns StateAnnotation:
	//    StateContractAnnotation | MissionPhaseStateAnnotation | SpecialStateAnnotation
	//;
	public StatechartLanguageGrammarAccess.StateAnnotationElements getStateAnnotationAccess() {
		return gaStatechartLanguage.getStateAnnotationAccess();
	}
	
	public ParserRule getStateAnnotationRule() {
		return getStateAnnotationAccess().getRule();
	}
	
	//SpecialStateAnnotation returns ContractModel::SpecialStateAnnotation :
	//    {ContractModel::SpecialStateAnnotation}
	//    ('@SpecialStateAnnotation' | '@SpecialState') kind=SpecialStateKind
	//;
	public StatechartLanguageGrammarAccess.SpecialStateAnnotationElements getSpecialStateAnnotationAccess() {
		return gaStatechartLanguage.getSpecialStateAnnotationAccess();
	}
	
	public ParserRule getSpecialStateAnnotationRule() {
		return getSpecialStateAnnotationAccess().getRule();
	}
	
	//StateContractAnnotation returns ContractModel::StateContractAnnotation:
	//    '@StatechartContract' (linkType=LinkType)? (hasHistory?='history')?
	//        '=' contractStatechart=[StatechartDefinition] ('(' arguments+=Expression (',' arguments+=Expression)* ')')?
	//;
	public StatechartLanguageGrammarAccess.StateContractAnnotationElements getStateContractAnnotationAccess() {
		return gaStatechartLanguage.getStateContractAnnotationAccess();
	}
	
	public ParserRule getStateContractAnnotationRule() {
		return getStateContractAnnotationAccess().getRule();
	}
	
	//enum LinkType returns ContractModel::LinkType:
	//    TO_CONTROLLER = 'self' | TO_COMPONENT = 'component' // DEFAULT is set by default
	//;
	public StatechartLanguageGrammarAccess.LinkTypeElements getLinkTypeAccess() {
		return gaStatechartLanguage.getLinkTypeAccess();
	}
	
	public EnumRule getLinkTypeRule() {
		return getLinkTypeAccess().getRule();
	}
	
	//MissionPhaseStateAnnotation returns PhaseModel::MissionPhaseStateAnnotation:
	//    {PhaseModel::MissionPhaseStateAnnotation} '@Phase' '=' '['
	//        (history=History component=ComponentInstance '{'
	//            portBindings+=PortBinding*
	//            variableBindings+=VariableBinding*
	//        '}')
	//    ']'
	//;
	public StatechartLanguageGrammarAccess.MissionPhaseStateAnnotationElements getMissionPhaseStateAnnotationAccess() {
		return gaStatechartLanguage.getMissionPhaseStateAnnotationAccess();
	}
	
	public ParserRule getMissionPhaseStateAnnotationRule() {
		return getMissionPhaseStateAnnotationAccess().getRule();
	}
	
	//VariableBinding returns PhaseModel::VariableBinding:
	//    ('tie' statechartVariable=[ExpressionModel::VariableDeclaration] '->'
	//        instanceVariableReference=InstanceVariableReference) |
	//    ('bind' statechartVariable=[ExpressionModel::VariableDeclaration] '='
	//        instanceVariableReference=InstanceVariableReference)
	//;
	public StatechartLanguageGrammarAccess.VariableBindingElements getVariableBindingAccess() {
		return gaStatechartLanguage.getVariableBindingAccess();
	}
	
	public ParserRule getVariableBindingRule() {
		return getVariableBindingAccess().getRule();
	}
	
	//InstanceVariableReference returns PhaseModel::InstanceVariableReference:
	//    instance=[CompositeModel::ComponentInstance] '.' variable=[ExpressionModel::VariableDeclaration]
	//;
	public StatechartLanguageGrammarAccess.InstanceVariableReferenceElements getInstanceVariableReferenceAccess() {
		return gaStatechartLanguage.getInstanceVariableReferenceAccess();
	}
	
	public ParserRule getInstanceVariableReferenceRule() {
		return getInstanceVariableReferenceAccess().getRule();
	}
	
	//enum History returns PhaseModel::History:
	//    NO_HISTORY = 'no-history' | SHALLOW_HISTORY = 'shallow' | DEEP_HISTORY = 'deep'
	//;
	public StatechartLanguageGrammarAccess.HistoryElements getHistoryAccess() {
		return gaStatechartLanguage.getHistoryAccess();
	}
	
	public EnumRule getHistoryRule() {
		return getHistoryAccess().getRule();
	}
	
	//PseudoState returns PseudoState:
	//    EntryState |
	//    ForkState |
	//    JoinState |
	//    ChoiceState |
	//    MergeState
	//;
	public StatechartLanguageGrammarAccess.PseudoStateElements getPseudoStateAccess() {
		return gaStatechartLanguage.getPseudoStateAccess();
	}
	
	public ParserRule getPseudoStateRule() {
		return getPseudoStateAccess().getRule();
	}
	
	//MergeState returns MergeState:
	//    'merge' name=ID
	//;
	public StatechartLanguageGrammarAccess.MergeStateElements getMergeStateAccess() {
		return gaStatechartLanguage.getMergeStateAccess();
	}
	
	public ParserRule getMergeStateRule() {
		return getMergeStateAccess().getRule();
	}
	
	//ChoiceState returns ChoiceState:
	//    'choice' name=ID
	//;
	public StatechartLanguageGrammarAccess.ChoiceStateElements getChoiceStateAccess() {
		return gaStatechartLanguage.getChoiceStateAccess();
	}
	
	public ParserRule getChoiceStateRule() {
		return getChoiceStateAccess().getRule();
	}
	
	//JoinState returns JoinState:
	//    'join' name=ID
	//;
	public StatechartLanguageGrammarAccess.JoinStateElements getJoinStateAccess() {
		return gaStatechartLanguage.getJoinStateAccess();
	}
	
	public ParserRule getJoinStateRule() {
		return getJoinStateAccess().getRule();
	}
	
	//ForkState returns ForkState:
	//    'fork' name=ID
	//;
	public StatechartLanguageGrammarAccess.ForkStateElements getForkStateAccess() {
		return gaStatechartLanguage.getForkStateAccess();
	}
	
	public ParserRule getForkStateRule() {
		return getForkStateAccess().getRule();
	}
	
	//EntryState:
	//    InitialState |
	//    ShallowHistoryState |
	//    DeepHistoryState
	//;
	public StatechartLanguageGrammarAccess.EntryStateElements getEntryStateAccess() {
		return gaStatechartLanguage.getEntryStateAccess();
	}
	
	public ParserRule getEntryStateRule() {
		return getEntryStateAccess().getRule();
	}
	
	//InitialState returns InitialState:
	//    'initial' name=ID
	//;
	public StatechartLanguageGrammarAccess.InitialStateElements getInitialStateAccess() {
		return gaStatechartLanguage.getInitialStateAccess();
	}
	
	public ParserRule getInitialStateRule() {
		return getInitialStateAccess().getRule();
	}
	
	//ShallowHistoryState returns ShallowHistoryState:
	//    'shallow' 'history' name=ID
	//;
	public StatechartLanguageGrammarAccess.ShallowHistoryStateElements getShallowHistoryStateAccess() {
		return gaStatechartLanguage.getShallowHistoryStateAccess();
	}
	
	public ParserRule getShallowHistoryStateRule() {
		return getShallowHistoryStateAccess().getRule();
	}
	
	//DeepHistoryState returns DeepHistoryState:
	//    'deep' 'history' name=ID
	//;
	public StatechartLanguageGrammarAccess.DeepHistoryStateElements getDeepHistoryStateAccess() {
		return gaStatechartLanguage.getDeepHistoryStateAccess();
	}
	
	public ParserRule getDeepHistoryStateRule() {
		return getDeepHistoryStateAccess().getRule();
	}
	
	//SynchronousComponent returns CompositeModel::SynchronousComponent:
	//    SynchronousStatechartDefinition |
	//    AbstractSynchronousComponent
	//;
	public StatechartLanguageGrammarAccess.SynchronousComponentElements getSynchronousComponentAccess() {
		return gaStatechartLanguage.getSynchronousComponentAccess();
	}
	
	public ParserRule getSynchronousComponentRule() {
		return getSynchronousComponentAccess().getRule();
	}
	
	//AbstractSynchronousComponent returns CompositeModel::AbstractSynchronousCompositeComponent:
	//    CascadeCompositeComponent |
	//    SynchronousCompositeComponent
	//;
	public StatechartLanguageGrammarAccess.AbstractSynchronousComponentElements getAbstractSynchronousComponentAccess() {
		return gaStatechartLanguage.getAbstractSynchronousComponentAccess();
	}
	
	public ParserRule getAbstractSynchronousComponentRule() {
		return getAbstractSynchronousComponentAccess().getRule();
	}
	
	//CascadeCompositeComponent returns CompositeModel::CascadeCompositeComponent:
	//    annotations+=ComponentAnnotation*
	//    'cascade' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                components+=SynchronousComponentInstance |
	//                portBindings+=PortBinding |
	//                channels+=Channel
	//            )*
	//            ('initial' 'execute' initialExecutionList+=AtomicComponentInstanceReferenceExpression
	//                    (',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*)?
	//            ('execute' executionList+=AtomicComponentInstanceReferenceExpression
	//                    (',' executionList+=AtomicComponentInstanceReferenceExpression)*)?
	//        '}'
	//;
	public StatechartLanguageGrammarAccess.CascadeCompositeComponentElements getCascadeCompositeComponentAccess() {
		return gaStatechartLanguage.getCascadeCompositeComponentAccess();
	}
	
	public ParserRule getCascadeCompositeComponentRule() {
		return getCascadeCompositeComponentAccess().getRule();
	}
	
	//SynchronousCompositeComponent returns CompositeModel::SynchronousCompositeComponent:
	//    annotations+=ComponentAnnotation*
	//    'sync' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                components+=SynchronousComponentInstance |
	//                portBindings+=PortBinding |
	//                channels+=Channel
	//            )*
	//        '}'
	//;
	public StatechartLanguageGrammarAccess.SynchronousCompositeComponentElements getSynchronousCompositeComponentAccess() {
		return gaStatechartLanguage.getSynchronousCompositeComponentAccess();
	}
	
	public ParserRule getSynchronousCompositeComponentRule() {
		return getSynchronousCompositeComponentAccess().getRule();
	}
	
	//AsynchronousComponent returns CompositeModel::AsynchronousComponent:
	//    AbstractAsynchronousCompositeComponent |
	//    AsynchronousAdapter |
	//    AsynchronousStatechartDefinition
	//;
	public StatechartLanguageGrammarAccess.AsynchronousComponentElements getAsynchronousComponentAccess() {
		return gaStatechartLanguage.getAsynchronousComponentAccess();
	}
	
	public ParserRule getAsynchronousComponentRule() {
		return getAsynchronousComponentAccess().getRule();
	}
	
	//AbstractAsynchronousCompositeComponent returns CompositeModel::AbstractAsynchronousCompositeComponent:
	//    AsynchronousCompositeComponent |
	//    ScheduledAsynchronousCompositeComponent
	//;
	public StatechartLanguageGrammarAccess.AbstractAsynchronousCompositeComponentElements getAbstractAsynchronousCompositeComponentAccess() {
		return gaStatechartLanguage.getAbstractAsynchronousCompositeComponentAccess();
	}
	
	public ParserRule getAbstractAsynchronousCompositeComponentRule() {
		return getAbstractAsynchronousCompositeComponentAccess().getRule();
	}
	
	//AsynchronousCompositeComponent returns CompositeModel::AsynchronousCompositeComponent:
	//    annotations+=ComponentAnnotation*
	//    'async' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                components+=AsynchronousComponentInstance |
	//                portBindings+=PortBinding |
	//                channels+=Channel
	//            )*
	//        '}'
	//;
	public StatechartLanguageGrammarAccess.AsynchronousCompositeComponentElements getAsynchronousCompositeComponentAccess() {
		return gaStatechartLanguage.getAsynchronousCompositeComponentAccess();
	}
	
	public ParserRule getAsynchronousCompositeComponentRule() {
		return getAsynchronousCompositeComponentAccess().getRule();
	}
	
	//ScheduledAsynchronousCompositeComponent returns CompositeModel::ScheduledAsynchronousCompositeComponent:
	//    annotations+=ComponentAnnotation*
	//    'scheduled-async' name=ID
	//    ('(' ((parameterDeclarations+=ParameterDeclaration) (',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                components+=AsynchronousComponentInstance |
	//                portBindings+=PortBinding |
	//                channels+=Channel
	//            )*
	//            ('initial' 'execute' initialExecutionList+=AtomicComponentInstanceReferenceExpression
	//                    (',' initialExecutionList+=AtomicComponentInstanceReferenceExpression)*)?
	//            ('execute' executionList+=AtomicComponentInstanceReferenceExpression
	//                    (',' executionList+=AtomicComponentInstanceReferenceExpression)*)?
	//        '}'
	//;
	public StatechartLanguageGrammarAccess.ScheduledAsynchronousCompositeComponentElements getScheduledAsynchronousCompositeComponentAccess() {
		return gaStatechartLanguage.getScheduledAsynchronousCompositeComponentAccess();
	}
	
	public ParserRule getScheduledAsynchronousCompositeComponentRule() {
		return getScheduledAsynchronousCompositeComponentAccess().getRule();
	}
	
	//AsynchronousAdapter returns CompositeModel::AsynchronousAdapter:
	//    annotations+=ComponentAnnotation*
	//    'adapter' name=ID ('(' ((parameterDeclarations+=ParameterDeclaration)
	//            (',' parameterDeclarations+=ParameterDeclaration)*)? ')')?
	//        'of' wrappedComponent=SynchronousComponentInstance
	//        ('[' ((ports+=Port)((',')? ports+=Port)*)? ']')?
	//        '{'
	//            (
	//                clocks+=ClockDeclaration |
	//                controlSpecifications+=ControlSpecificaiton |
	//                messageQueues+=MessageQueue
	//            )*
	//        '}'
	//;
	public StatechartLanguageGrammarAccess.AsynchronousAdapterElements getAsynchronousAdapterAccess() {
		return gaStatechartLanguage.getAsynchronousAdapterAccess();
	}
	
	public ParserRule getAsynchronousAdapterRule() {
		return getAsynchronousAdapterAccess().getRule();
	}
	
	//ClockDeclaration returns InterfaceModel::Clock:
	//    'clock' name=ID '(' 'rate' '=' timeSpecification=TimeSpecification')'
	//;
	public StatechartLanguageGrammarAccess.ClockDeclarationElements getClockDeclarationAccess() {
		return gaStatechartLanguage.getClockDeclarationAccess();
	}
	
	public ParserRule getClockDeclarationRule() {
		return getClockDeclarationAccess().getRule();
	}
	
	//TimeSpecification returns InterfaceModel::TimeSpecification:
	//    value=AdditiveExpression unit=TimeUnit
	//;
	public StatechartLanguageGrammarAccess.TimeSpecificationElements getTimeSpecificationAccess() {
		return gaStatechartLanguage.getTimeSpecificationAccess();
	}
	
	public ParserRule getTimeSpecificationRule() {
		return getTimeSpecificationAccess().getRule();
	}
	
	//enum TimeUnit returns InterfaceModel::TimeUnit:
	//    MILLISECOND = 'ms' | SECOND = 's'
	//;
	public StatechartLanguageGrammarAccess.TimeUnitElements getTimeUnitAccess() {
		return gaStatechartLanguage.getTimeUnitAccess();
	}
	
	public EnumRule getTimeUnitRule() {
		return getTimeUnitAccess().getRule();
	}
	
	//ControlSpecificaiton returns CompositeModel::ControlSpecification:
	//     'when' trigger=SimpleTrigger '/' controlFunction=ControlFunction
	//;
	public StatechartLanguageGrammarAccess.ControlSpecificaitonElements getControlSpecificaitonAccess() {
		return gaStatechartLanguage.getControlSpecificaitonAccess();
	}
	
	public ParserRule getControlSpecificaitonRule() {
		return getControlSpecificaitonAccess().getRule();
	}
	
	//enum ControlFunction returns CompositeModel::ControlFunction:
	//    RUN_ONCE = 'run' | RUN_TO_COMPLETION = 'full-step' | RESET = 'reset' | RESET_MESSAGE_QUEUE = 'reset-queue'
	//        | RESET_MESSAGE_QUEUES = 'reset-queues' | RESET_OTHER_MESSAGE_QUEUES = 'reset-other-queues'
	//;
	public StatechartLanguageGrammarAccess.ControlFunctionElements getControlFunctionAccess() {
		return gaStatechartLanguage.getControlFunctionAccess();
	}
	
	public EnumRule getControlFunctionRule() {
		return getControlFunctionAccess().getRule();
	}
	
	//MessageQueue returns CompositeModel::MessageQueue:
	//    'queue' name=ID '(' ('priority' '=' priority=INTEGER) (',' 'capacity' '=' capacity=Expression)
	//                (',' 'discard' '=' eventDiscardStrategy=DiscardStrategy)?
	//            ')' '{'
	//         (eventPassings+=EventPassing) (',' eventPassings+=EventPassing)*
	//    '}'
	//;
	public StatechartLanguageGrammarAccess.MessageQueueElements getMessageQueueAccess() {
		return gaStatechartLanguage.getMessageQueueAccess();
	}
	
	public ParserRule getMessageQueueRule() {
		return getMessageQueueAccess().getRule();
	}
	
	//EventPassing returns CompositeModel::EventPassing:
	//    source=EventReference ('->' target=EventReference)?
	//;
	public StatechartLanguageGrammarAccess.EventPassingElements getEventPassingAccess() {
		return gaStatechartLanguage.getEventPassingAccess();
	}
	
	public ParserRule getEventPassingRule() {
		return getEventPassingAccess().getRule();
	}
	
	//enum DiscardStrategy returns CompositeModel::DiscardStrategy:
	//    INCOMING = 'incoming' | OLDEST = 'oldest'
	//;
	public StatechartLanguageGrammarAccess.DiscardStrategyElements getDiscardStrategyAccess() {
		return gaStatechartLanguage.getDiscardStrategyAccess();
	}
	
	public EnumRule getDiscardStrategyRule() {
		return getDiscardStrategyAccess().getRule();
	}
	
	//PortBinding returns CompositeModel::PortBinding:
	//    'bind' compositeSystemPort=[InterfaceModel::Port] '->' instancePortReference=InstancePortReference
	//;
	public StatechartLanguageGrammarAccess.PortBindingElements getPortBindingAccess() {
		return gaStatechartLanguage.getPortBindingAccess();
	}
	
	public ParserRule getPortBindingRule() {
		return getPortBindingAccess().getRule();
	}
	
	//InstancePortReference returns CompositeModel::InstancePortReference:
	//    instance=[CompositeModel::ComponentInstance] '.' port=[InterfaceModel::Port]
	//;
	public StatechartLanguageGrammarAccess.InstancePortReferenceElements getInstancePortReferenceAccess() {
		return gaStatechartLanguage.getInstancePortReferenceAccess();
	}
	
	public ParserRule getInstancePortReferenceRule() {
		return getInstancePortReferenceAccess().getRule();
	}
	
	//ComponentInstance returns CompositeModel::ComponentInstance:
	//    SynchronousComponentInstance | 'async' AsynchronousComponentInstance
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceElements getComponentInstanceAccess() {
		return gaStatechartLanguage.getComponentInstanceAccess();
	}
	
	public ParserRule getComponentInstanceRule() {
		return getComponentInstanceAccess().getRule();
	}
	
	//AtomicComponentInstanceReferenceExpression returns CompositeModel::ComponentInstanceReferenceExpression:
	//    componentInstance=[CompositeModel::ComponentInstance]
	//;
	public StatechartLanguageGrammarAccess.AtomicComponentInstanceReferenceExpressionElements getAtomicComponentInstanceReferenceExpressionAccess() {
		return gaStatechartLanguage.getAtomicComponentInstanceReferenceExpressionAccess();
	}
	
	public ParserRule getAtomicComponentInstanceReferenceExpressionRule() {
		return getAtomicComponentInstanceReferenceExpressionAccess().getRule();
	}
	
	//// Subgrammars can use this
	//ComponentInstanceReferenceExpression returns CompositeModel::ComponentInstanceReferenceExpression:
	//    componentInstance=[CompositeModel::ComponentInstance] ('->' child=ComponentInstanceReferenceExpression )?
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceReferenceExpressionElements getComponentInstanceReferenceExpressionAccess() {
		return gaStatechartLanguage.getComponentInstanceReferenceExpressionAccess();
	}
	
	public ParserRule getComponentInstanceReferenceExpressionRule() {
		return getComponentInstanceReferenceExpressionAccess().getRule();
	}
	
	//SynchronousComponentInstance returns CompositeModel::SynchronousComponentInstance:
	//    'component' name=ID ':' type=[CompositeModel::SynchronousComponent] ('(' arguments+=Expression (',' arguments+=Expression)* ')')?
	//;
	public StatechartLanguageGrammarAccess.SynchronousComponentInstanceElements getSynchronousComponentInstanceAccess() {
		return gaStatechartLanguage.getSynchronousComponentInstanceAccess();
	}
	
	public ParserRule getSynchronousComponentInstanceRule() {
		return getSynchronousComponentInstanceAccess().getRule();
	}
	
	//AsynchronousComponentInstance returns CompositeModel::AsynchronousComponentInstance:
	//    'component' name=ID ':' type=[CompositeModel::AsynchronousComponent] ('(' arguments+=Expression (',' arguments+=Expression)* ')')?
	//;
	public StatechartLanguageGrammarAccess.AsynchronousComponentInstanceElements getAsynchronousComponentInstanceAccess() {
		return gaStatechartLanguage.getAsynchronousComponentInstanceAccess();
	}
	
	public ParserRule getAsynchronousComponentInstanceRule() {
		return getAsynchronousComponentInstanceAccess().getRule();
	}
	
	//Channel returns CompositeModel::Channel:
	//    SimpleChannel | BroadcastChannel
	//;
	public StatechartLanguageGrammarAccess.ChannelElements getChannelAccess() {
		return gaStatechartLanguage.getChannelAccess();
	}
	
	public ParserRule getChannelRule() {
		return getChannelAccess().getRule();
	}
	
	//SimpleChannel returns CompositeModel::SimpleChannel:
	//    // This is the channel's point of view: input is the input of the channel, i.e. the out port signals of statecharts
	//    'channel' '[' providedPort=InstancePortReference ']' '-o)-' '[' requiredPort=InstancePortReference ']'
	//;
	public StatechartLanguageGrammarAccess.SimpleChannelElements getSimpleChannelAccess() {
		return gaStatechartLanguage.getSimpleChannelAccess();
	}
	
	public ParserRule getSimpleChannelRule() {
		return getSimpleChannelAccess().getRule();
	}
	
	//BroadcastChannel returns CompositeModel::BroadcastChannel:
	//    // This is the channel's point of view: input is the input of the channel, i.e. the out port signals of statecharts
	//    'channel' '[' providedPort=InstancePortReference ']' '-o)-' '[' (requiredPorts+=InstancePortReference) (',' requiredPorts+=InstancePortReference)+ ']'
	//;
	public StatechartLanguageGrammarAccess.BroadcastChannelElements getBroadcastChannelAccess() {
		return gaStatechartLanguage.getBroadcastChannelAccess();
	}
	
	public ParserRule getBroadcastChannelRule() {
		return getBroadcastChannelAccess().getRule();
	}
	
	//// Interface
	//Interface returns InterfaceModel::Interface:
	//    {InterfaceModel::Interface}
	//    'interface' name=ID ('extends' (parents+=[InterfaceModel::Interface]) (',' (parents+=[InterfaceModel::Interface]))* )? '{'
	//        ((events+=EventDeclaration))*
	//    '}'
	//;
	public StatechartLanguageGrammarAccess.InterfaceElements getInterfaceAccess() {
		return gaStatechartLanguage.getInterfaceAccess();
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//enum EventDirection returns InterfaceModel::EventDirection:
	//    IN = 'in' | OUT = 'out' | INOUT = 'inout' | INTERNAL = 'internal'
	//;
	public StatechartLanguageGrammarAccess.EventDirectionElements getEventDirectionAccess() {
		return gaStatechartLanguage.getEventDirectionAccess();
	}
	
	public EnumRule getEventDirectionRule() {
		return getEventDirectionAccess().getRule();
	}
	
	//EventDeclaration returns InterfaceModel::EventDeclaration:
	//    {InterfaceModel::EventDeclaration}
	//    (direction=EventDirection) (event=Event)
	//;
	public StatechartLanguageGrammarAccess.EventDeclarationElements getEventDeclarationAccess() {
		return gaStatechartLanguage.getEventDeclarationAccess();
	}
	
	public ParserRule getEventDeclarationRule() {
		return getEventDeclarationAccess().getRule();
	}
	
	//Event returns InterfaceModel::Event:
	//    {InterfaceModel::Event}
	//    (persistency=Persistency)? 'event' name=ID ('(' (parameterDeclarations+=ParameterDeclaration) (','(parameterDeclarations+=ParameterDeclaration))* ')')? ('priority' '=' priority=INTEGER)?
	//;
	public StatechartLanguageGrammarAccess.EventElements getEventAccess() {
		return gaStatechartLanguage.getEventAccess();
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//enum Persistency returns InterfaceModel::Persistency:
	//    PERSISTENT = 'persistent' | TRANSIENT = 'transient'
	//;
	public StatechartLanguageGrammarAccess.PersistencyElements getPersistencyAccess() {
		return gaStatechartLanguage.getPersistencyAccess();
	}
	
	public EnumRule getPersistencyRule() {
		return getPersistencyAccess().getRule();
	}
	
	//// Overriding it for the sake of EventParameterReferenceExpression
	//@Override
	//PrimaryExpression returns ExpressionModel::Expression:
	//    super |
	//    EventParameterReferenceExpression |
	//    StateReferenceExpression
	//;
	public StatechartLanguageGrammarAccess.PrimaryExpressionElements getPrimaryExpressionAccess() {
		return gaStatechartLanguage.getPrimaryExpressionAccess();
	}
	
	public ParserRule getPrimaryExpressionRule() {
		return getPrimaryExpressionAccess().getRule();
	}
	
	//StateReferenceExpression returns StateReferenceExpression:
	//    'in-state' '(' region=[Region] '.' state = [State] ')'
	//;
	public StatechartLanguageGrammarAccess.StateReferenceExpressionElements getStateReferenceExpressionAccess() {
		return gaStatechartLanguage.getStateReferenceExpressionAccess();
	}
	
	public ParserRule getStateReferenceExpressionRule() {
		return getStateReferenceExpressionAccess().getRule();
	}
	
	//EventParameterReferenceExpression returns InterfaceModel::EventParameterReferenceExpression:
	//    port=[InterfaceModel::Port] '.' event=[InterfaceModel::Event] '::' parameter=[ExpressionModel::ParameterDeclaration];
	public StatechartLanguageGrammarAccess.EventParameterReferenceExpressionElements getEventParameterReferenceExpressionAccess() {
		return gaStatechartLanguage.getEventParameterReferenceExpressionAccess();
	}
	
	public ParserRule getEventParameterReferenceExpressionRule() {
		return getEventParameterReferenceExpressionAccess().getRule();
	}
	
	//// Action Language Extensions
	//@Override
	//InlineStatement returns ActionModel::Statement:
	//    super |
	//    (
	//        (
	//        RaiseEventAction |
	//        SetTimeoutAction
	//        )
	//        ';'
	//    )
	//;
	public StatechartLanguageGrammarAccess.InlineStatementElements getInlineStatementAccess() {
		return gaStatechartLanguage.getInlineStatementAccess();
	}
	
	public ParserRule getInlineStatementRule() {
		return getInlineStatementAccess().getRule();
	}
	
	//RaiseEventAction returns RaiseEventAction:
	//    'raise' port=[InterfaceModel::Port] '.' event=[InterfaceModel::Event] ('(' (arguments+=Expression)(',' arguments+=Expression)* ')')?
	//;
	public StatechartLanguageGrammarAccess.RaiseEventActionElements getRaiseEventActionAccess() {
		return gaStatechartLanguage.getRaiseEventActionAccess();
	}
	
	public ParserRule getRaiseEventActionRule() {
		return getRaiseEventActionAccess().getRule();
	}
	
	//SetTimeoutAction returns SetTimeoutAction:
	//    'set' timeoutDeclaration=[TimeoutDeclaration] ':=' time=TimeSpecification
	//;
	public StatechartLanguageGrammarAccess.SetTimeoutActionElements getSetTimeoutActionAccess() {
		return gaStatechartLanguage.getSetTimeoutActionAccess();
	}
	
	public ParserRule getSetTimeoutActionRule() {
		return getSetTimeoutActionAccess().getRule();
	}
	
	//DeactivateTimeoutAction returns DeactivateTimeoutAction:
	//    'deactivate' timeoutDeclaration=[TimeoutDeclaration]
	//;
	public StatechartLanguageGrammarAccess.DeactivateTimeoutActionElements getDeactivateTimeoutActionAccess() {
		return gaStatechartLanguage.getDeactivateTimeoutActionAccess();
	}
	
	public ParserRule getDeactivateTimeoutActionRule() {
		return getDeactivateTimeoutActionAccess().getRule();
	}
	
	//// Component instance element references for subgrammars
	//ComponentInstanceStateExpression returns CompositeModel::ComponentInstanceElementReferenceExpression:
	//    ComponentInstanceStateReferenceExpression | ComponentInstanceVariableReferenceExpression |
	//        ComponentInstanceEventReferenceExpression | ComponentInstanceEventParameterReferenceExpression
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceStateExpressionElements getComponentInstanceStateExpressionAccess() {
		return gaStatechartLanguage.getComponentInstanceStateExpressionAccess();
	}
	
	public ParserRule getComponentInstanceStateExpressionRule() {
		return getComponentInstanceStateExpressionAccess().getRule();
	}
	
	//ComponentInstanceStateReferenceExpression returns CompositeModel::ComponentInstanceStateReferenceExpression:
	//    'state' instance=ComponentInstanceReferenceExpression '.' region=[Region] '.' state=[State]
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceStateReferenceExpressionElements getComponentInstanceStateReferenceExpressionAccess() {
		return gaStatechartLanguage.getComponentInstanceStateReferenceExpressionAccess();
	}
	
	public ParserRule getComponentInstanceStateReferenceExpressionRule() {
		return getComponentInstanceStateReferenceExpressionAccess().getRule();
	}
	
	//ComponentInstanceVariableReferenceExpression returns CompositeModel::ComponentInstanceVariableReferenceExpression:
	//    'variable' instance=ComponentInstanceReferenceExpression '.' variableDeclaration=[ExpressionModel::VariableDeclaration]
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceVariableReferenceExpressionElements getComponentInstanceVariableReferenceExpressionAccess() {
		return gaStatechartLanguage.getComponentInstanceVariableReferenceExpressionAccess();
	}
	
	public ParserRule getComponentInstanceVariableReferenceExpressionRule() {
		return getComponentInstanceVariableReferenceExpressionAccess().getRule();
	}
	
	//ComponentInstanceEventReferenceExpression returns CompositeModel::ComponentInstanceEventReferenceExpression:
	//    'event' instance=ComponentInstanceReferenceExpression '.' port=[InterfaceModel::Port] '.' event=[InterfaceModel::Event]
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceEventReferenceExpressionElements getComponentInstanceEventReferenceExpressionAccess() {
		return gaStatechartLanguage.getComponentInstanceEventReferenceExpressionAccess();
	}
	
	public ParserRule getComponentInstanceEventReferenceExpressionRule() {
		return getComponentInstanceEventReferenceExpressionAccess().getRule();
	}
	
	//ComponentInstanceEventParameterReferenceExpression returns CompositeModel::ComponentInstanceEventParameterReferenceExpression:
	//    'parameter' instance=ComponentInstanceReferenceExpression '.' port=[InterfaceModel::Port] '.'
	//        event=[InterfaceModel::Event] '::' parameterDeclaration=[ExpressionModel::ParameterDeclaration]
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceEventParameterReferenceExpressionElements getComponentInstanceEventParameterReferenceExpressionAccess() {
		return gaStatechartLanguage.getComponentInstanceEventParameterReferenceExpressionAccess();
	}
	
	public ParserRule getComponentInstanceEventParameterReferenceExpressionRule() {
		return getComponentInstanceEventParameterReferenceExpressionAccess().getRule();
	}
	
	//ComponentInstanceReflectiveElementReferenceExpression returns CompositeModel::ComponentInstanceReflectiveElementReferenceExpression:
	//    'element' instance=ComponentInstanceReferenceExpression ('.' identifier+=ID) ('::' identifier+=ID)*
	//;
	public StatechartLanguageGrammarAccess.ComponentInstanceReflectiveElementReferenceExpressionElements getComponentInstanceReflectiveElementReferenceExpressionAccess() {
		return gaStatechartLanguage.getComponentInstanceReflectiveElementReferenceExpressionAccess();
	}
	
	public ParserRule getComponentInstanceReflectiveElementReferenceExpressionRule() {
		return getComponentInstanceReflectiveElementReferenceExpressionAccess().getRule();
	}
	
	//Action returns ActionModel::Action:
	//    Block |
	//    Statement
	//;
	public ActionLanguageGrammarAccess.ActionElements getActionAccess() {
		return gaActionLanguage.getActionAccess();
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//@Override
	//FunctionDeclaration returns ConstraintModel::FunctionDeclaration:
	//    LambdaDeclaration | ProcedureDeclaration
	//;
	public ActionLanguageGrammarAccess.FunctionDeclarationElements getFunctionDeclarationAccess() {
		return gaActionLanguage.getFunctionDeclarationAccess();
	}
	
	public ParserRule getFunctionDeclarationRule() {
		return getFunctionDeclarationAccess().getRule();
	}
	
	//ProcedureDeclaration returns ActionModel::ProcedureDeclaration:
	//    'procedure' name=ID ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')? ':' type=Type
	//    body=Block
	//;
	public ActionLanguageGrammarAccess.ProcedureDeclarationElements getProcedureDeclarationAccess() {
		return gaActionLanguage.getProcedureDeclarationAccess();
	}
	
	public ParserRule getProcedureDeclarationRule() {
		return getProcedureDeclarationAccess().getRule();
	}
	
	//Block returns ActionModel::Block:
	//    {ActionModel::Block}
	//    '{'
	//        (actions+=Action)*
	//    '}'
	//;
	public ActionLanguageGrammarAccess.BlockElements getBlockAccess() {
		return gaActionLanguage.getBlockAccess();
	}
	
	public ParserRule getBlockRule() {
		return getBlockAccess().getRule();
	}
	
	//Statement returns ActionModel::Statement:
	//    InlineStatement |
	//    MultilineStatement
	//;
	public ActionLanguageGrammarAccess.StatementElements getStatementAccess() {
		return gaActionLanguage.getStatementAccess();
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}
	
	//InlineStatement returns ActionModel::Statement:
	//    (
	//    VariableDeclarationStatement |
	//    ConstantDeclarationStatement |
	//    ReturnStatement |
	//    BreakStatement |
	//    =>AssignmentStatement |
	//    AssertionStatement |
	//    ExpressionStatement |
	//    EmptyStatement
	//    )
	//    ';'
	//;
	public ActionLanguageGrammarAccess.InlineStatementElements getActionLanguageInlineStatementAccess() {
		return gaActionLanguage.getInlineStatementAccess();
	}
	
	public ParserRule getActionLanguageInlineStatementRule() {
		return getActionLanguageInlineStatementAccess().getRule();
	}
	
	//MultilineStatement returns ActionModel::Statement:
	//    IfStatement |
	//    SwitchStatement |
	//    ForStatement |
	//    ChoiceStatement
	//;
	public ActionLanguageGrammarAccess.MultilineStatementElements getMultilineStatementAccess() {
		return gaActionLanguage.getMultilineStatementAccess();
	}
	
	public ParserRule getMultilineStatementRule() {
		return getMultilineStatementAccess().getRule();
	}
	
	//VariableDeclarationStatement returns ActionModel::VariableDeclarationStatement:
	//    variableDeclaration = VariableDeclaration
	//;
	public ActionLanguageGrammarAccess.VariableDeclarationStatementElements getVariableDeclarationStatementAccess() {
		return gaActionLanguage.getVariableDeclarationStatementAccess();
	}
	
	public ParserRule getVariableDeclarationStatementRule() {
		return getVariableDeclarationStatementAccess().getRule();
	}
	
	//ConstantDeclarationStatement returns ActionModel::ConstantDeclarationStatement:
	//    constantDeclaration = ConstantDeclaration
	//;
	public ActionLanguageGrammarAccess.ConstantDeclarationStatementElements getConstantDeclarationStatementAccess() {
		return gaActionLanguage.getConstantDeclarationStatementAccess();
	}
	
	public ParserRule getConstantDeclarationStatementRule() {
		return getConstantDeclarationStatementAccess().getRule();
	}
	
	//ExpressionStatement returns ActionModel::ExpressionStatement:
	//    expression=Expression
	//;
	public ActionLanguageGrammarAccess.ExpressionStatementElements getExpressionStatementAccess() {
		return gaActionLanguage.getExpressionStatementAccess();
	}
	
	public ParserRule getExpressionStatementRule() {
		return getExpressionStatementAccess().getRule();
	}
	
	//EmptyStatement returns ActionModel::EmptyStatement:
	//    {ActionModel::EmptyStatement} 'no' 'operation'
	//;
	public ActionLanguageGrammarAccess.EmptyStatementElements getEmptyStatementAccess() {
		return gaActionLanguage.getEmptyStatementAccess();
	}
	
	public ParserRule getEmptyStatementRule() {
		return getEmptyStatementAccess().getRule();
	}
	
	//IfBranch returns ActionModel::Branch:
	//    '(' guard=Expression ')'
	//    action=Action
	//;
	public ActionLanguageGrammarAccess.IfBranchElements getIfBranchAccess() {
		return gaActionLanguage.getIfBranchAccess();
	}
	
	public ParserRule getIfBranchRule() {
		return getIfBranchAccess().getRule();
	}
	
	//ElseBranch returns ActionModel::Branch:
	//    guard=ElseExpression
	//    action=Action
	//;
	public ActionLanguageGrammarAccess.ElseBranchElements getElseBranchAccess() {
		return gaActionLanguage.getElseBranchAccess();
	}
	
	public ParserRule getElseBranchRule() {
		return getElseBranchAccess().getRule();
	}
	
	//SwitchBranch returns ActionModel::Branch:
	//    guard=Expression ':'
	//    action=Action
	//;
	public ActionLanguageGrammarAccess.SwitchBranchElements getSwitchBranchAccess() {
		return gaActionLanguage.getSwitchBranchAccess();
	}
	
	public ParserRule getSwitchBranchRule() {
		return getSwitchBranchAccess().getRule();
	}
	
	//DefaultBranch returns ActionModel::Branch:
	//    guard=DefaultExpression ':'
	//    action=Action
	//;
	public ActionLanguageGrammarAccess.DefaultBranchElements getDefaultBranchAccess() {
		return gaActionLanguage.getDefaultBranchAccess();
	}
	
	public ParserRule getDefaultBranchRule() {
		return getDefaultBranchAccess().getRule();
	}
	
	//ChoiceBranch returns ActionModel::Branch:
	//    '[' guard=Expression ']'
	//    action=Action
	//;
	public ActionLanguageGrammarAccess.ChoiceBranchElements getChoiceBranchAccess() {
		return gaActionLanguage.getChoiceBranchAccess();
	}
	
	public ParserRule getChoiceBranchRule() {
		return getChoiceBranchAccess().getRule();
	}
	
	//// Xtext bug - DefaultExpression had to be introduced to tackle the problem in the generated StatechartLanguageSemanticSequencer class
	//// DefaultExpression has the same semantics as ElseExpression (but it is used in DefaultBranch)
	//DefaultExpression returns ConstraintModel::DefaultExpression:
	//    {ConstraintModel::DefaultExpression} 'default'
	//;
	public ActionLanguageGrammarAccess.DefaultExpressionElements getDefaultExpressionAccess() {
		return gaActionLanguage.getDefaultExpressionAccess();
	}
	
	public ParserRule getDefaultExpressionRule() {
		return getDefaultExpressionAccess().getRule();
	}
	
	//IfStatement returns ActionModel::IfStatement:
	//    {ActionModel::IfStatement}
	//    'if' conditionals+=IfBranch
	//    (=> 'elseif' conditionals+=IfBranch)*
	//    (=> conditionals+=ElseBranch)?
	//;
	public ActionLanguageGrammarAccess.IfStatementElements getIfStatementAccess() {
		return gaActionLanguage.getIfStatementAccess();
	}
	
	public ParserRule getIfStatementRule() {
		return getIfStatementAccess().getRule();
	}
	
	//SwitchStatement returns ActionModel::SwitchStatement:
	//    'switch' '(' controlExpression=Expression ')' '{'
	//    ('case' cases+=SwitchBranch ('case' cases+=SwitchBranch)*)
	//    (cases+=DefaultBranch)?
	//    '}'
	//;
	public ActionLanguageGrammarAccess.SwitchStatementElements getSwitchStatementAccess() {
		return gaActionLanguage.getSwitchStatementAccess();
	}
	
	public ParserRule getSwitchStatementRule() {
		return getSwitchStatementAccess().getRule();
	}
	
	//ForStatement returns ActionModel::ForStatement:
	//    'for' '(' parameter=ParameterDeclaration 'in' range=Expression ')'
	//    (=> body=Action)
	//;
	public ActionLanguageGrammarAccess.ForStatementElements getForStatementAccess() {
		return gaActionLanguage.getForStatementAccess();
	}
	
	public ParserRule getForStatementRule() {
		return getForStatementAccess().getRule();
	}
	
	//ReturnStatement returns ActionModel::ReturnStatement:
	//    {ActionModel::ReturnStatement} 'return' (expression=Expression)?
	//;
	public ActionLanguageGrammarAccess.ReturnStatementElements getReturnStatementAccess() {
		return gaActionLanguage.getReturnStatementAccess();
	}
	
	public ParserRule getReturnStatementRule() {
		return getReturnStatementAccess().getRule();
	}
	
	//BreakStatement returns ActionModel::BreakStatement:
	//    {ActionModel::BreakStatement}
	//    'break'
	//;
	public ActionLanguageGrammarAccess.BreakStatementElements getBreakStatementAccess() {
		return gaActionLanguage.getBreakStatementAccess();
	}
	
	public ParserRule getBreakStatementRule() {
		return getBreakStatementAccess().getRule();
	}
	
	//ChoiceStatement returns ActionModel::ChoiceStatement:
	//    'choice' '{'
	//        ('branch' branches+=ChoiceBranch ('branch' branches+=ChoiceBranch)*)
	//    '}'
	//;
	public ActionLanguageGrammarAccess.ChoiceStatementElements getChoiceStatementAccess() {
		return gaActionLanguage.getChoiceStatementAccess();
	}
	
	public ParserRule getChoiceStatementRule() {
		return getChoiceStatementAccess().getRule();
	}
	
	//AssignmentStatement returns ActionModel::AssignmentStatement:
	//    lhs=AssignableAccessExpression ':=' rhs=Expression
	//;
	public ActionLanguageGrammarAccess.AssignmentStatementElements getAssignmentStatementAccess() {
		return gaActionLanguage.getAssignmentStatementAccess();
	}
	
	public ParserRule getAssignmentStatementRule() {
		return getAssignmentStatementAccess().getRule();
	}
	
	//AssertionStatement returns ActionModel::AssertionStatement:
	//    'assert' '(' assertion=Expression ')'
	//;
	public ActionLanguageGrammarAccess.AssertionStatementElements getAssertionStatementAccess() {
		return gaActionLanguage.getAssertionStatementAccess();
	}
	
	public ParserRule getAssertionStatementRule() {
		return getAssertionStatementAccess().getRule();
	}
	
	////Lvalue expression rules based on the constraint model
	//AssignableAccessExpression returns ConstraintModel::ReferenceExpression:
	//    AssignablePrimaryExpression(
	//        {ConstraintModel::ArrayAccessExpression.operand=current} '[' index=Expression ']' |
	//        {ConstraintModel::RecordAccessExpression.operand=current} '.' fieldReference=FieldReferenceExpression
	//    )*
	//;
	public ActionLanguageGrammarAccess.AssignableAccessExpressionElements getAssignableAccessExpressionAccess() {
		return gaActionLanguage.getAssignableAccessExpressionAccess();
	}
	
	public ParserRule getAssignableAccessExpressionRule() {
		return getAssignableAccessExpressionAccess().getRule();
	}
	
	//AssignablePrimaryExpression returns ConstraintModel::ReferenceExpression:
	//      AssignableDirectReferenceExpression |
	//     '(' AssignableAccessExpression ')'
	//;
	public ActionLanguageGrammarAccess.AssignablePrimaryExpressionElements getAssignablePrimaryExpressionAccess() {
		return gaActionLanguage.getAssignablePrimaryExpressionAccess();
	}
	
	public ParserRule getAssignablePrimaryExpressionRule() {
		return getAssignablePrimaryExpressionAccess().getRule();
	}
	
	//AssignableDirectReferenceExpression returns ConstraintModel::ReferenceExpression:
	//        {ConstraintModel::DirectReferenceExpression} declaration=[ConstraintModel::ValueDeclaration]
	//;
	public ActionLanguageGrammarAccess.AssignableDirectReferenceExpressionElements getAssignableDirectReferenceExpressionAccess() {
		return gaActionLanguage.getAssignableDirectReferenceExpressionAccess();
	}
	
	public ParserRule getAssignableDirectReferenceExpressionRule() {
		return getAssignableDirectReferenceExpressionAccess().getRule();
	}
	
	/////////////////////////////////////////////
	//ExpressionPackage returns ExpressionPackage:
	//    "specification" name=ID ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')? '{'
	//        (
	//            typeDeclarations+=TypeDeclaration |
	//            constantDeclarations+=ConstantDeclaration |
	//            functionDeclarations+=FunctionDeclaration |
	//            basicConstraintDefinitions+=BasicConstraintDefinition
	//        )*
	//    '}'
	//;
	public ExpressionLanguageGrammarAccess.ExpressionPackageElements getExpressionPackageAccess() {
		return gaExpressionLanguage.getExpressionPackageAccess();
	}
	
	public ParserRule getExpressionPackageRule() {
		return getExpressionPackageAccess().getRule();
	}
	
	/////////////////////////////////////////////
	//ParameterDeclaration returns ParameterDeclaration:
	//    {ParameterDeclaration} name=ID ':' type=Type
	//;
	public ExpressionLanguageGrammarAccess.ParameterDeclarationElements getParameterDeclarationAccess() {
		return gaExpressionLanguage.getParameterDeclarationAccess();
	}
	
	public ParserRule getParameterDeclarationRule() {
		return getParameterDeclarationAccess().getRule();
	}
	
	//FieldDeclaration returns FieldDeclaration:
	//    {FieldDeclaration} name=ID ':' type=Type
	//;
	public ExpressionLanguageGrammarAccess.FieldDeclarationElements getFieldDeclarationAccess() {
		return gaExpressionLanguage.getFieldDeclarationAccess();
	}
	
	public ParserRule getFieldDeclarationRule() {
		return getFieldDeclarationAccess().getRule();
	}
	
	//ConstantDeclaration returns ConstantDeclaration:
	//    'const' name=ID ':' type=Type ( ':=' expression=Expression )?
	//;
	public ExpressionLanguageGrammarAccess.ConstantDeclarationElements getConstantDeclarationAccess() {
		return gaExpressionLanguage.getConstantDeclarationAccess();
	}
	
	public ParserRule getConstantDeclarationRule() {
		return getConstantDeclarationAccess().getRule();
	}
	
	//// Referred in the statechart language
	//VariableDeclaration returns VariableDeclaration:
	//    (annotations+=VariableDeclarationAnnotation)*
	//    'var' name=ID ':' type=Type (':=' expression=Expression)?
	//;
	public ExpressionLanguageGrammarAccess.VariableDeclarationElements getVariableDeclarationAccess() {
		return gaExpressionLanguage.getVariableDeclarationAccess();
	}
	
	public ParserRule getVariableDeclarationRule() {
		return getVariableDeclarationAccess().getRule();
	}
	
	//VariableDeclarationAnnotation returns VariableDeclarationAnnotation:
	//    TransientVariableDeclarationAnnotation | ResettableVariableDeclarationAnnotation |
	//         UnremovableVariableDeclarationAnnotation | InjectedVariableDeclarationAnnotation
	//;
	public ExpressionLanguageGrammarAccess.VariableDeclarationAnnotationElements getVariableDeclarationAnnotationAccess() {
		return gaExpressionLanguage.getVariableDeclarationAnnotationAccess();
	}
	
	public ParserRule getVariableDeclarationAnnotationRule() {
		return getVariableDeclarationAnnotationAccess().getRule();
	}
	
	//TransientVariableDeclarationAnnotation returns TransientVariableDeclarationAnnotation:
	//    {TransientVariableDeclarationAnnotation} '@Transient'
	//;
	public ExpressionLanguageGrammarAccess.TransientVariableDeclarationAnnotationElements getTransientVariableDeclarationAnnotationAccess() {
		return gaExpressionLanguage.getTransientVariableDeclarationAnnotationAccess();
	}
	
	public ParserRule getTransientVariableDeclarationAnnotationRule() {
		return getTransientVariableDeclarationAnnotationAccess().getRule();
	}
	
	//ResettableVariableDeclarationAnnotation returns ResettableVariableDeclarationAnnotation:
	//    {ResettableVariableDeclarationAnnotation} '@Resettable'
	//;
	public ExpressionLanguageGrammarAccess.ResettableVariableDeclarationAnnotationElements getResettableVariableDeclarationAnnotationAccess() {
		return gaExpressionLanguage.getResettableVariableDeclarationAnnotationAccess();
	}
	
	public ParserRule getResettableVariableDeclarationAnnotationRule() {
		return getResettableVariableDeclarationAnnotationAccess().getRule();
	}
	
	//UnremovableVariableDeclarationAnnotation returns UnremovableVariableDeclarationAnnotation:
	//    {UnremovableVariableDeclarationAnnotation} '@Unremovable'
	//;
	public ExpressionLanguageGrammarAccess.UnremovableVariableDeclarationAnnotationElements getUnremovableVariableDeclarationAnnotationAccess() {
		return gaExpressionLanguage.getUnremovableVariableDeclarationAnnotationAccess();
	}
	
	public ParserRule getUnremovableVariableDeclarationAnnotationRule() {
		return getUnremovableVariableDeclarationAnnotationAccess().getRule();
	}
	
	//InjectedVariableDeclarationAnnotation returns InjectedVariableDeclarationAnnotation:
	//    {InjectedVariableDeclarationAnnotation} '@Injected'
	//;
	public ExpressionLanguageGrammarAccess.InjectedVariableDeclarationAnnotationElements getInjectedVariableDeclarationAnnotationAccess() {
		return gaExpressionLanguage.getInjectedVariableDeclarationAnnotationAccess();
	}
	
	public ParserRule getInjectedVariableDeclarationAnnotationRule() {
		return getInjectedVariableDeclarationAnnotationAccess().getRule();
	}
	
	//LambdaDeclaration returns LambdaDeclaration:
	//    'lambda' name=ID ('(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')')? ':' type=Type ( ':=' expression=Expression )?
	//;
	public ExpressionLanguageGrammarAccess.LambdaDeclarationElements getLambdaDeclarationAccess() {
		return gaExpressionLanguage.getLambdaDeclarationAccess();
	}
	
	public ParserRule getLambdaDeclarationRule() {
		return getLambdaDeclarationAccess().getRule();
	}
	
	//////////////////////////////////////////
	//// Type language
	//////////////////////////////////////////
	//Type returns Type:
	//    TypeReference | TypeDefinition
	//;
	public ExpressionLanguageGrammarAccess.TypeElements getTypeAccess() {
		return gaExpressionLanguage.getTypeAccess();
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//TypeDeclaration returns TypeDeclaration:
	//    'type' name=ID ':' type=Type
	//;
	public ExpressionLanguageGrammarAccess.TypeDeclarationElements getTypeDeclarationAccess() {
		return gaExpressionLanguage.getTypeDeclarationAccess();
	}
	
	public ParserRule getTypeDeclarationRule() {
		return getTypeDeclarationAccess().getRule();
	}
	
	//TypeReference returns TypeReference:
	//    reference=[TypeDeclaration]
	//;
	public ExpressionLanguageGrammarAccess.TypeReferenceElements getTypeReferenceAccess() {
		return gaExpressionLanguage.getTypeReferenceAccess();
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}
	
	//TypeDefinition returns TypeDefinition:
	//    VoidTypeDefinition |
	//    IntegerTypeDefinition |
	//    BooleanTypeDefinition |
	//    DecimalTypeDefinition |
	//    RationalTypeDefinition |
	//    ArrayTypeDefinition |
	//    IntegerRangeTypeDefinition |
	//    EnumerationTypeDefinition |
	//    RecordTypeDefinition |
	//    SubrangeTypeDefinition |
	//    FunctionTypeDefinition
	//;
	public ExpressionLanguageGrammarAccess.TypeDefinitionElements getTypeDefinitionAccess() {
		return gaExpressionLanguage.getTypeDefinitionAccess();
	}
	
	public ParserRule getTypeDefinitionRule() {
		return getTypeDefinitionAccess().getRule();
	}
	
	//VoidTypeDefinition returns VoidTypeDefinition:
	//    {VoidTypeDefinition} 'void'
	//;
	public ExpressionLanguageGrammarAccess.VoidTypeDefinitionElements getVoidTypeDefinitionAccess() {
		return gaExpressionLanguage.getVoidTypeDefinitionAccess();
	}
	
	public ParserRule getVoidTypeDefinitionRule() {
		return getVoidTypeDefinitionAccess().getRule();
	}
	
	//IntegerTypeDefinition returns IntegerTypeDefinition:
	//    {IntegerTypeDefinition} 'integer'
	//;
	public ExpressionLanguageGrammarAccess.IntegerTypeDefinitionElements getIntegerTypeDefinitionAccess() {
		return gaExpressionLanguage.getIntegerTypeDefinitionAccess();
	}
	
	public ParserRule getIntegerTypeDefinitionRule() {
		return getIntegerTypeDefinitionAccess().getRule();
	}
	
	//BooleanTypeDefinition returns BooleanTypeDefinition:
	//    {BooleanTypeDefinition} 'boolean'
	//;
	public ExpressionLanguageGrammarAccess.BooleanTypeDefinitionElements getBooleanTypeDefinitionAccess() {
		return gaExpressionLanguage.getBooleanTypeDefinitionAccess();
	}
	
	public ParserRule getBooleanTypeDefinitionRule() {
		return getBooleanTypeDefinitionAccess().getRule();
	}
	
	//DecimalTypeDefinition returns DecimalTypeDefinition:
	//    {DecimalTypeDefinition} 'decimal'
	//;
	public ExpressionLanguageGrammarAccess.DecimalTypeDefinitionElements getDecimalTypeDefinitionAccess() {
		return gaExpressionLanguage.getDecimalTypeDefinitionAccess();
	}
	
	public ParserRule getDecimalTypeDefinitionRule() {
		return getDecimalTypeDefinitionAccess().getRule();
	}
	
	//RationalTypeDefinition returns RationalTypeDefinition:
	//    {RationalTypeDefinition} 'rational'
	//;
	public ExpressionLanguageGrammarAccess.RationalTypeDefinitionElements getRationalTypeDefinitionAccess() {
		return gaExpressionLanguage.getRationalTypeDefinitionAccess();
	}
	
	public ParserRule getRationalTypeDefinitionRule() {
		return getRationalTypeDefinitionAccess().getRule();
	}
	
	//ArrayTypeDefinition returns ArrayTypeDefinition:
	//    '[' size=Expression ']' elementType=Type
	//;
	public ExpressionLanguageGrammarAccess.ArrayTypeDefinitionElements getArrayTypeDefinitionAccess() {
		return gaExpressionLanguage.getArrayTypeDefinitionAccess();
	}
	
	public ParserRule getArrayTypeDefinitionRule() {
		return getArrayTypeDefinitionAccess().getRule();
	}
	
	//IntegerRangeTypeDefinition returns IntegerRangeTypeDefinition:
	//    {IntegerRangeTypeDefinition} 'integer' 'range'
	//;
	public ExpressionLanguageGrammarAccess.IntegerRangeTypeDefinitionElements getIntegerRangeTypeDefinitionAccess() {
		return gaExpressionLanguage.getIntegerRangeTypeDefinitionAccess();
	}
	
	public ParserRule getIntegerRangeTypeDefinitionRule() {
		return getIntegerRangeTypeDefinitionAccess().getRule();
	}
	
	//EnumerationTypeDefinition returns EnumerationTypeDefinition:
	//    'enum' '{' (literals+=EnumerationLiteralDefinition)(',' literals+=EnumerationLiteralDefinition)* '}'
	//;
	public ExpressionLanguageGrammarAccess.EnumerationTypeDefinitionElements getEnumerationTypeDefinitionAccess() {
		return gaExpressionLanguage.getEnumerationTypeDefinitionAccess();
	}
	
	public ParserRule getEnumerationTypeDefinitionRule() {
		return getEnumerationTypeDefinitionAccess().getRule();
	}
	
	//EnumerationLiteralDefinition:
	//    name=ID
	//;
	public ExpressionLanguageGrammarAccess.EnumerationLiteralDefinitionElements getEnumerationLiteralDefinitionAccess() {
		return gaExpressionLanguage.getEnumerationLiteralDefinitionAccess();
	}
	
	public ParserRule getEnumerationLiteralDefinitionRule() {
		return getEnumerationLiteralDefinitionAccess().getRule();
	}
	
	//RecordTypeDefinition returns RecordTypeDefinition:
	//    'record' '{' (fieldDeclarations+=FieldDeclaration)(',' fieldDeclarations+=FieldDeclaration)* '}'
	//;
	public ExpressionLanguageGrammarAccess.RecordTypeDefinitionElements getRecordTypeDefinitionAccess() {
		return gaExpressionLanguage.getRecordTypeDefinitionAccess();
	}
	
	public ParserRule getRecordTypeDefinitionRule() {
		return getRecordTypeDefinitionAccess().getRule();
	}
	
	//SubrangeTypeDefinition returns SubrangeTypeDefinition:
	//    {SubrangeTypeDefinition} '#[' ('-' 'inf' | lowerBound=Expression) 'to' ('inf' | upperBound=Expression) ']'
	//;
	public ExpressionLanguageGrammarAccess.SubrangeTypeDefinitionElements getSubrangeTypeDefinitionAccess() {
		return gaExpressionLanguage.getSubrangeTypeDefinitionAccess();
	}
	
	public ParserRule getSubrangeTypeDefinitionRule() {
		return getSubrangeTypeDefinitionAccess().getRule();
	}
	
	//FunctionTypeDefinition returns FunctionTypeDefinition:
	//    'function' '(' ((parameterTypes+=Type)(',' parameterTypes+=Type)*)? ')' ':' returnType=Type
	//;
	public ExpressionLanguageGrammarAccess.FunctionTypeDefinitionElements getFunctionTypeDefinitionAccess() {
		return gaExpressionLanguage.getFunctionTypeDefinitionAccess();
	}
	
	public ParserRule getFunctionTypeDefinitionRule() {
		return getFunctionTypeDefinitionAccess().getRule();
	}
	
	//////////////////////////////////////////
	//// Expression language
	//////////////////////////////////////////
	//Expression returns Expression:
	//    IfThenElseExpression |
	//    ElseExpression
	//;
	public ExpressionLanguageGrammarAccess.ExpressionElements getExpressionAccess() {
		return gaExpressionLanguage.getExpressionAccess();
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//ElseExpression returns ElseExpression:
	//    {ElseExpression}
	//    'else'
	//;
	public ExpressionLanguageGrammarAccess.ElseExpressionElements getElseExpressionAccess() {
		return gaExpressionLanguage.getElseExpressionAccess();
	}
	
	public ParserRule getElseExpressionRule() {
		return getElseExpressionAccess().getRule();
	}
	
	////ternary, right-associative
	//IfThenElseExpression returns Expression:
	//    ImplyExpression({IfThenElseExpression.condition=current} '?' then=Expression (=> ':' else=Expression))?
	//;
	public ExpressionLanguageGrammarAccess.IfThenElseExpressionElements getIfThenElseExpressionAccess() {
		return gaExpressionLanguage.getIfThenElseExpressionAccess();
	}
	
	public ParserRule getIfThenElseExpressionRule() {
		return getIfThenElseExpressionAccess().getRule();
	}
	
	////binary, right-associative
	//ImplyExpression returns Expression:
	//     OrExpression ({ImplyExpression.leftOperand=current} 'imply' rightOperand=ImplyExpression)?
	//;
	public ExpressionLanguageGrammarAccess.ImplyExpressionElements getImplyExpressionAccess() {
		return gaExpressionLanguage.getImplyExpressionAccess();
	}
	
	public ParserRule getImplyExpressionRule() {
		return getImplyExpressionAccess().getRule();
	}
	
	////multiary
	//OrExpression returns Expression:
	//    XorExpression ({OrExpression.operands+=current} ('or' operands+=XorExpression)+)?
	//;
	public ExpressionLanguageGrammarAccess.OrExpressionElements getOrExpressionAccess() {
		return gaExpressionLanguage.getOrExpressionAccess();
	}
	
	public ParserRule getOrExpressionRule() {
		return getOrExpressionAccess().getRule();
	}
	
	////multiary
	//XorExpression returns Expression:
	//    AndExpression ({XorExpression.operands+=current} ('xor' operands+=AndExpression)+)?
	//;
	public ExpressionLanguageGrammarAccess.XorExpressionElements getXorExpressionAccess() {
		return gaExpressionLanguage.getXorExpressionAccess();
	}
	
	public ParserRule getXorExpressionRule() {
		return getXorExpressionAccess().getRule();
	}
	
	////multiary
	//AndExpression returns Expression:
	//    UnaryLogicExpression ({AndExpression.operands+=current} ('and' operands+=UnaryLogicExpression)+)?
	//;
	public ExpressionLanguageGrammarAccess.AndExpressionElements getAndExpressionAccess() {
		return gaExpressionLanguage.getAndExpressionAccess();
	}
	
	public ParserRule getAndExpressionRule() {
		return getAndExpressionAccess().getRule();
	}
	
	////prefix unary, right-associative
	//UnaryLogicExpression returns Expression:
	//    NotExpression |
	//    ForallExpression |
	//    ExistsExpression |
	//    EquivalenceExpression
	//;
	public ExpressionLanguageGrammarAccess.UnaryLogicExpressionElements getUnaryLogicExpressionAccess() {
		return gaExpressionLanguage.getUnaryLogicExpressionAccess();
	}
	
	public ParserRule getUnaryLogicExpressionRule() {
		return getUnaryLogicExpressionAccess().getRule();
	}
	
	//NotExpression returns Expression:
	//    {NotExpression} => ('not' | '!') operand=UnaryLogicExpression
	//;
	public ExpressionLanguageGrammarAccess.NotExpressionElements getNotExpressionAccess() {
		return gaExpressionLanguage.getNotExpressionAccess();
	}
	
	public ParserRule getNotExpressionRule() {
		return getNotExpressionAccess().getRule();
	}
	
	//ForallExpression returns Expression:
	//    {ForallExpression} => 'forall' '(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')' ':' operand=UnaryLogicExpression
	//;
	public ExpressionLanguageGrammarAccess.ForallExpressionElements getForallExpressionAccess() {
		return gaExpressionLanguage.getForallExpressionAccess();
	}
	
	public ParserRule getForallExpressionRule() {
		return getForallExpressionAccess().getRule();
	}
	
	//ExistsExpression returns Expression:
	//    {ExistsExpression} => 'exists' '(' ((parameterDeclarations+=ParameterDeclaration)(',' parameterDeclarations+=ParameterDeclaration)*)? ')' ':' operand=UnaryLogicExpression
	//;
	public ExpressionLanguageGrammarAccess.ExistsExpressionElements getExistsExpressionAccess() {
		return gaExpressionLanguage.getExistsExpressionAccess();
	}
	
	public ParserRule getExistsExpressionRule() {
		return getExistsExpressionAccess().getRule();
	}
	
	////binary, non-associative
	//EquivalenceExpression returns Expression:
	//    ComparisionExpression (
	//        {EqualityExpression.leftOperand=current} ('=' | '==') rightOperand=ComparisionExpression |
	//        {InequalityExpression.leftOperand=current} ('/=' | '!=') rightOperand=ComparisionExpression
	//    )?
	//;
	public ExpressionLanguageGrammarAccess.EquivalenceExpressionElements getEquivalenceExpressionAccess() {
		return gaExpressionLanguage.getEquivalenceExpressionAccess();
	}
	
	public ParserRule getEquivalenceExpressionRule() {
		return getEquivalenceExpressionAccess().getRule();
	}
	
	////binary, non-associative
	//ComparisionExpression returns Expression:
	//    AdditiveExpression (
	//        (
	//            {GreaterExpression.leftOperand=current} '>' |
	//            {GreaterEqualExpression.leftOperand=current} '>=' |
	//            {LessExpression.leftOperand=current} '<' |
	//            {LessEqualExpression.leftOperand=current} '<='
	//        ) rightOperand=AdditiveExpression
	//    )*
	//;
	public ExpressionLanguageGrammarAccess.ComparisionExpressionElements getComparisionExpressionAccess() {
		return gaExpressionLanguage.getComparisionExpressionAccess();
	}
	
	public ParserRule getComparisionExpressionRule() {
		return getComparisionExpressionAccess().getRule();
	}
	
	////binary, left-associative
	//AdditiveExpression returns Expression:
	//    MultiplicativeExpression (
	//        {AddExpression.operands+=current} => ('+' operands+=MultiplicativeExpression)+ |
	//        {SubtractExpression.leftOperand=current} '-' rightOperand=MultiplicativeExpression
	//    )*
	//;
	public ExpressionLanguageGrammarAccess.AdditiveExpressionElements getAdditiveExpressionAccess() {
		return gaExpressionLanguage.getAdditiveExpressionAccess();
	}
	
	public ParserRule getAdditiveExpressionRule() {
		return getAdditiveExpressionAccess().getRule();
	}
	
	////binary, left-associative
	//MultiplicativeExpression returns Expression:
	//    SignumExpression (
	//        {MultiplyExpression.operands+=current} => ('*' operands+=SignumExpression)+ |
	//        (
	//            {DivideExpression.leftOperand=current} '/' |
	//            {DivExpression.leftOperand=current} 'div' |
	//            {ModExpression.leftOperand=current} 'mod'
	//        ) rightOperand=SignumExpression
	//    )*
	//;
	public ExpressionLanguageGrammarAccess.MultiplicativeExpressionElements getMultiplicativeExpressionAccess() {
		return gaExpressionLanguage.getMultiplicativeExpressionAccess();
	}
	
	public ParserRule getMultiplicativeExpressionRule() {
		return getMultiplicativeExpressionAccess().getRule();
	}
	
	////prefix unary, right-associative
	//SignumExpression returns Expression:
	//    {UnaryMinusExpression} => '-' operand=SignumExpression |
	//    {UnaryPlusExpression} => '+' operand=SignumExpression |
	//    AccessExpression
	//;
	public ExpressionLanguageGrammarAccess.SignumExpressionElements getSignumExpressionAccess() {
		return gaExpressionLanguage.getSignumExpressionAccess();
	}
	
	public ParserRule getSignumExpressionRule() {
		return getSignumExpressionAccess().getRule();
	}
	
	//AccessExpression returns Expression:
	//    PrimaryExpression(
	//        {ArrayAccessExpression.operand=current} '[' index=Expression ']' |
	//        {FunctionAccessExpression.operand=current} '(' ((arguments+=Expression)(',' arguments+=Expression)*)? ')' |
	//        {RecordAccessExpression.operand=current} '.' fieldReference=FieldReferenceExpression |
	//        {SelectExpression.operand=current} '->' 'select'
	//    )*
	//;
	public ExpressionLanguageGrammarAccess.AccessExpressionElements getAccessExpressionAccess() {
		return gaExpressionLanguage.getAccessExpressionAccess();
	}
	
	public ParserRule getAccessExpressionRule() {
		return getAccessExpressionAccess().getRule();
	}
	
	//FieldReferenceExpression returns FieldReferenceExpression:
	//        {FieldReferenceExpression} fieldDeclaration=[FieldDeclaration]
	//;
	public ExpressionLanguageGrammarAccess.FieldReferenceExpressionElements getFieldReferenceExpressionAccess() {
		return gaExpressionLanguage.getFieldReferenceExpressionAccess();
	}
	
	public ParserRule getFieldReferenceExpressionRule() {
		return getFieldReferenceExpressionAccess().getRule();
	}
	
	//PrimaryExpression returns Expression:
	//    ReferenceExpression |
	//    LiteralExpression |
	//     '(' Expression ')'
	//;
	public ExpressionLanguageGrammarAccess.PrimaryExpressionElements getExpressionLanguagePrimaryExpressionAccess() {
		return gaExpressionLanguage.getPrimaryExpressionAccess();
	}
	
	public ParserRule getExpressionLanguagePrimaryExpressionRule() {
		return getExpressionLanguagePrimaryExpressionAccess().getRule();
	}
	
	//ReferenceExpression returns Expression: // So it can be overriden
	//    DirectReferenceExpression
	//;
	public ExpressionLanguageGrammarAccess.ReferenceExpressionElements getReferenceExpressionAccess() {
		return gaExpressionLanguage.getReferenceExpressionAccess();
	}
	
	public ParserRule getReferenceExpressionRule() {
		return getReferenceExpressionAccess().getRule();
	}
	
	//DirectReferenceExpression returns DirectReferenceExpression:
	//    declaration=[ValueDeclaration]
	//;
	public ExpressionLanguageGrammarAccess.DirectReferenceExpressionElements getDirectReferenceExpressionAccess() {
		return gaExpressionLanguage.getDirectReferenceExpressionAccess();
	}
	
	public ParserRule getDirectReferenceExpressionRule() {
		return getDirectReferenceExpressionAccess().getRule();
	}
	
	//LiteralExpression returns Expression:
	//    IntegerLiteralExpression |
	//    DecimalLiteralExpression |
	//    RationalLiteralExpression |
	//    BooleanLiteralExpression |
	//    ArrayLiteralExpression |
	//    RecordLiteralExpression |
	//    EnumerationLiteralExpression |
	//    IntegerRangeLiteralExpression  |
	//    OpaqueExpression |
	//    InfinityExpression
	//;
	public ExpressionLanguageGrammarAccess.LiteralExpressionElements getLiteralExpressionAccess() {
		return gaExpressionLanguage.getLiteralExpressionAccess();
	}
	
	public ParserRule getLiteralExpressionRule() {
		return getLiteralExpressionAccess().getRule();
	}
	
	//InfinityExpression returns InfinityExpression:
	//    {InfinityExpression} 'infinity'
	//;
	public ExpressionLanguageGrammarAccess.InfinityExpressionElements getInfinityExpressionAccess() {
		return gaExpressionLanguage.getInfinityExpressionAccess();
	}
	
	public ParserRule getInfinityExpressionRule() {
		return getInfinityExpressionAccess().getRule();
	}
	
	//IntegerLiteralExpression:
	//    value=INTEGER
	//;
	public ExpressionLanguageGrammarAccess.IntegerLiteralExpressionElements getIntegerLiteralExpressionAccess() {
		return gaExpressionLanguage.getIntegerLiteralExpressionAccess();
	}
	
	public ParserRule getIntegerLiteralExpressionRule() {
		return getIntegerLiteralExpressionAccess().getRule();
	}
	
	//DecimalLiteralExpression:
	//    value=DECIMAL
	//;
	public ExpressionLanguageGrammarAccess.DecimalLiteralExpressionElements getDecimalLiteralExpressionAccess() {
		return gaExpressionLanguage.getDecimalLiteralExpressionAccess();
	}
	
	public ParserRule getDecimalLiteralExpressionRule() {
		return getDecimalLiteralExpressionAccess().getRule();
	}
	
	//RationalLiteralExpression:
	//    numerator=INTEGER '%' denominator=INTEGER
	//;
	public ExpressionLanguageGrammarAccess.RationalLiteralExpressionElements getRationalLiteralExpressionAccess() {
		return gaExpressionLanguage.getRationalLiteralExpressionAccess();
	}
	
	public ParserRule getRationalLiteralExpressionRule() {
		return getRationalLiteralExpressionAccess().getRule();
	}
	
	//BooleanLiteralExpression:
	//    TrueExpression | FalseExpression
	//;
	public ExpressionLanguageGrammarAccess.BooleanLiteralExpressionElements getBooleanLiteralExpressionAccess() {
		return gaExpressionLanguage.getBooleanLiteralExpressionAccess();
	}
	
	public ParserRule getBooleanLiteralExpressionRule() {
		return getBooleanLiteralExpressionAccess().getRule();
	}
	
	//TrueExpression returns TrueExpression:
	//    {TrueExpression} 'true'
	//;
	public ExpressionLanguageGrammarAccess.TrueExpressionElements getTrueExpressionAccess() {
		return gaExpressionLanguage.getTrueExpressionAccess();
	}
	
	public ParserRule getTrueExpressionRule() {
		return getTrueExpressionAccess().getRule();
	}
	
	//FalseExpression returns FalseExpression:
	//    {FalseExpression} 'false'
	//;
	public ExpressionLanguageGrammarAccess.FalseExpressionElements getFalseExpressionAccess() {
		return gaExpressionLanguage.getFalseExpressionAccess();
	}
	
	public ParserRule getFalseExpressionRule() {
		return getFalseExpressionAccess().getRule();
	}
	
	//RecordLiteralExpression:
	//    '#' typeDeclaration=[TypeDeclaration] '{' (fieldAssignments+=FieldAssignment)(',' fieldAssignments+=FieldAssignment)* '}'
	//;
	public ExpressionLanguageGrammarAccess.RecordLiteralExpressionElements getRecordLiteralExpressionAccess() {
		return gaExpressionLanguage.getRecordLiteralExpressionAccess();
	}
	
	public ParserRule getRecordLiteralExpressionRule() {
		return getRecordLiteralExpressionAccess().getRule();
	}
	
	//FieldAssignment:
	//    reference=FieldReferenceExpression ':=' value=Expression
	//;
	public ExpressionLanguageGrammarAccess.FieldAssignmentElements getFieldAssignmentAccess() {
		return gaExpressionLanguage.getFieldAssignmentAccess();
	}
	
	public ParserRule getFieldAssignmentRule() {
		return getFieldAssignmentAccess().getRule();
	}
	
	//EnumerationLiteralExpression:
	//    typeReference=TypeReference '::' reference=[EnumerationLiteralDefinition]
	//;
	public ExpressionLanguageGrammarAccess.EnumerationLiteralExpressionElements getEnumerationLiteralExpressionAccess() {
		return gaExpressionLanguage.getEnumerationLiteralExpressionAccess();
	}
	
	public ParserRule getEnumerationLiteralExpressionRule() {
		return getEnumerationLiteralExpressionAccess().getRule();
	}
	
	//OpaqueExpression:
	//    expression=STRING
	//;
	public ExpressionLanguageGrammarAccess.OpaqueExpressionElements getOpaqueExpressionAccess() {
		return gaExpressionLanguage.getOpaqueExpressionAccess();
	}
	
	public ParserRule getOpaqueExpressionRule() {
		return getOpaqueExpressionAccess().getRule();
	}
	
	//ArrayLiteralExpression:
	//    '#[' operands+=Expression (',' operands+=Expression)* ']'
	//;
	public ExpressionLanguageGrammarAccess.ArrayLiteralExpressionElements getArrayLiteralExpressionAccess() {
		return gaExpressionLanguage.getArrayLiteralExpressionAccess();
	}
	
	public ParserRule getArrayLiteralExpressionRule() {
		return getArrayLiteralExpressionAccess().getRule();
	}
	
	//IntegerRangeLiteralExpression:
	//    {IntegerRangeLiteralExpression}
	//    ((leftInclusive?='<+') | '<-') (leftOperand=(Expression))
	//        '..' rightOperand=(Expression) ((rightInclusive?='+>') | '->')
	//;
	public ExpressionLanguageGrammarAccess.IntegerRangeLiteralExpressionElements getIntegerRangeLiteralExpressionAccess() {
		return gaExpressionLanguage.getIntegerRangeLiteralExpressionAccess();
	}
	
	public ParserRule getIntegerRangeLiteralExpressionRule() {
		return getIntegerRangeLiteralExpressionAccess().getRule();
	}
	
	/////////////////////////////////
	//// Basic Constraint
	/////////////////////////////////
	//BasicConstraintDefinition returns BasicConstraintDefinition:
	//    'constraint' expression=Expression
	//;
	public ExpressionLanguageGrammarAccess.BasicConstraintDefinitionElements getBasicConstraintDefinitionAccess() {
		return gaExpressionLanguage.getBasicConstraintDefinitionAccess();
	}
	
	public ParserRule getBasicConstraintDefinitionRule() {
		return getBasicConstraintDefinitionAccess().getRule();
	}
	
	/////////////////////////////////
	//// Terminal
	/////////////////////////////////
	//@Override
	//terminal INT returns Ecore::EInt:
	//    'INT has been deactivated'
	//;
	public TerminalRule getINTRule() {
		return gaExpressionLanguage.getINTRule();
	}
	
	//terminal INTEGER returns Ecore::EBigInteger:
	//    '-'? ('0'..'9')+
	//;
	public TerminalRule getINTEGERRule() {
		return gaExpressionLanguage.getINTEGERRule();
	}
	
	//terminal DECIMAL returns Ecore::EBigDecimal:
	//    '-'? ('0'..'9')+ '.' ('0'..'9')+
	//;
	public TerminalRule getDECIMALRule() {
		return gaExpressionLanguage.getDECIMALRule();
	}
	
	//BOOLEAN returns Ecore::EBoolean: // Terminal would not work due to the enshadowing of ID
	//    'true' | 'false'
	//;
	public ExpressionLanguageGrammarAccess.BOOLEANElements getBOOLEANAccess() {
		return gaExpressionLanguage.getBOOLEANAccess();
	}
	
	public ParserRule getBOOLEANRule() {
		return getBOOLEANAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
