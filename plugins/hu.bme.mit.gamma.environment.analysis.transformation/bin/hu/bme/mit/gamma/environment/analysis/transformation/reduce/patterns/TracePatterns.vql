package hu.bme.mit.gamma.environment.analysis.transformation.reduce.patterns


import "http://www.mit.bme.hu/gamma/statechart/Model/Interface"
import "http://www.mit.bme.hu/gamma/statechart/Model/Statechart"
import "http://www.mit.bme.hu/gamma/statechart/Model/Composite"
import "www.mit.bme.hu/gamma/environment/Model"
import "http://www.mit.bme.hu/environment/transformation/Traceability"




pattern EnvironmentAsynchronousCompositeCopmponentTracePattern (source : EnvironmentAsynchronousCompositeComponent, target : AsynchronousCompositeComponent){
	AsynchronousCompositeComponentTrace.source(trace, source);
	AsynchronousCompositeComponentTrace.target(trace, target);
}

pattern EnvironmentSynchronousCompositeCopmponentTracePattern (source : EnvironmentSynchronousCompositeComponent, target : SynchronousCompositeComponent){
	SynchronousCompositeComponentTrace.source(trace, source);
	SynchronousCompositeComponentTrace.target(trace, target);
}

pattern EnvironmentCascadeCompositeComponentTracePattern (source : EnvironmentCascadeCompositeComponent, target : CascadeCompositeComponent){
	CascadeCompositeComponentTrace.source(trace, source);
	CascadeCompositeComponentTrace.target(trace, target);
}

pattern EnvironmentAsynchronousCompositeInstanceTracePattern (source : EnvironmentAsynchronousCompositeComponentInstance, target : AsynchronousComponentInstance){
	AsynchronousCompositeInstanceTrace.source(trace, source);
	AsynchronousCompositeInstanceTrace.target(trace, target);
}

pattern EnvironmentSynchronousCompositeInstanceTracePattern (source : EnvironmentSynchronousCompositeComponentInstance, target : SynchronousComponentInstance){
	SynchronousCompositeInstanceTrace.source(trace, source);
	SynchronousCompositeInstanceTrace.target(trace, target);
}

pattern EnvironmentCascadeCompositeInstanceTracePattern (source : EnvironmentCascadeCompositeComponentInstance, target : SynchronousComponentInstance){
	CascadeCompositeInstanceTrace.source(trace, source);
	CascadeCompositeInstanceTrace.target(trace, target);
}

pattern ElementaryEnvironmentComponentInstanceTracePattern (source : ElementaryEnvironmentComponentInstance, typeTarget : StatechartDefinition, instanceTarget : ComponentInstance){
	ElementaryTrace.source(trace,source);
	ElementaryTrace.typeTarget(trace,typeTarget);
	ElementaryTrace.instanceTarget(trace,instanceTarget);
}