/*
 * generated by Xtext 2.23.0.M1
 */
package hu.bme.mit.gamma.fmeda.language.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import hu.bme.mit.gamma.fmeda.language.ide.contentassist.antlr.internal.InternalFMEDALanguageParser;
import hu.bme.mit.gamma.fmeda.language.services.FMEDALanguageGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class FMEDALanguageParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(FMEDALanguageGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, FMEDALanguageGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getPackageDefAccess().getAlternatives_2(), "rule__PackageDef__Alternatives_2");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getAlternatives_5(), "rule__FMEDAComponentDef__Alternatives_5");
			builder.put(grammarAccess.getChannelInterfaceReferenceAccess().getAlternatives(), "rule__ChannelInterfaceReference__Alternatives");
			builder.put(grammarAccess.getFailureModeReferenceAccess().getAlternatives(), "rule__FailureModeReference__Alternatives");
			builder.put(grammarAccess.getPackageDefAccess().getGroup(), "rule__PackageDef__Group__0");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getGroup(), "rule__FMEDAComponentDef__Group__0");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getGroup_3(), "rule__FMEDAComponentDef__Group_3__0");
			builder.put(grammarAccess.getInterfaceDefAccess().getGroup(), "rule__InterfaceDef__Group__0");
			builder.put(grammarAccess.getPortAccess().getGroup(), "rule__Port__Group__0");
			builder.put(grammarAccess.getHardwarePartPortReferenceAccess().getGroup(), "rule__HardwarePartPortReference__Group__0");
			builder.put(grammarAccess.getThisPortReferenceAccess().getGroup(), "rule__ThisPortReference__Group__0");
			builder.put(grammarAccess.getChannelAccess().getGroup(), "rule__Channel__Group__0");
			builder.put(grammarAccess.getChannelAccess().getGroup_3(), "rule__Channel__Group_3__0");
			builder.put(grammarAccess.getFMEDAComponentInstanceAccess().getGroup(), "rule__FMEDAComponentInstance__Group__0");
			builder.put(grammarAccess.getFMEDADiagnosticsAccess().getGroup(), "rule__FMEDADiagnostics__Group__0");
			builder.put(grammarAccess.getDiagnosticsReferenceAccess().getGroup(), "rule__DiagnosticsReference__Group__0");
			builder.put(grammarAccess.getDiagnosticsReferenceAccess().getGroup_2(), "rule__DiagnosticsReference__Group_2__0");
			builder.put(grammarAccess.getFailureModeDefAccess().getGroup(), "rule__FailureModeDef__Group__0");
			builder.put(grammarAccess.getPartFailureModeDefAccess().getGroup(), "rule__PartFailureModeDef__Group__0");
			builder.put(grammarAccess.getHardwarePartFailureModeReferenceDefAccess().getGroup(), "rule__HardwarePartFailureModeReferenceDef__Group__0");
			builder.put(grammarAccess.getThisPartFailureModeReferenceAccess().getGroup(), "rule__ThisPartFailureModeReference__Group__0");
			builder.put(grammarAccess.getPortFailureModeReferenceAccess().getGroup(), "rule__PortFailureModeReference__Group__0");
			builder.put(grammarAccess.getThisPortFailureModeReferenceAccess().getGroup(), "rule__ThisPortFailureModeReference__Group__0");
			builder.put(grammarAccess.getFailurePropagationDefAccess().getGroup(), "rule__FailurePropagationDef__Group__0");
			builder.put(grammarAccess.getFailurePropagationDefAccess().getGroup_3(), "rule__FailurePropagationDef__Group_3__0");
			builder.put(grammarAccess.getPackageDefAccess().getNameAssignment_1(), "rule__PackageDef__NameAssignment_1");
			builder.put(grammarAccess.getPackageDefAccess().getComponentsAssignment_2_0(), "rule__PackageDef__ComponentsAssignment_2_0");
			builder.put(grammarAccess.getPackageDefAccess().getDiagnosticsAssignment_2_1(), "rule__PackageDef__DiagnosticsAssignment_2_1");
			builder.put(grammarAccess.getPackageDefAccess().getInterfacesAssignment_2_2(), "rule__PackageDef__InterfacesAssignment_2_2");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getNameAssignment_2(), "rule__FMEDAComponentDef__NameAssignment_2");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getPortsAssignment_3_1(), "rule__FMEDAComponentDef__PortsAssignment_3_1");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getFailuremodesAssignment_5_0(), "rule__FMEDAComponentDef__FailuremodesAssignment_5_0");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getFailuremodesAssignment_5_1(), "rule__FMEDAComponentDef__FailuremodesAssignment_5_1");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getSubcomponentsAssignment_5_2(), "rule__FMEDAComponentDef__SubcomponentsAssignment_5_2");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getFailurepropagationsAssignment_5_3(), "rule__FMEDAComponentDef__FailurepropagationsAssignment_5_3");
			builder.put(grammarAccess.getFMEDAComponentDefAccess().getChannelsAssignment_5_4(), "rule__FMEDAComponentDef__ChannelsAssignment_5_4");
			builder.put(grammarAccess.getInterfaceDefAccess().getNameAssignment_1(), "rule__InterfaceDef__NameAssignment_1");
			builder.put(grammarAccess.getInterfaceDefAccess().getFailuremodesAssignment_3(), "rule__InterfaceDef__FailuremodesAssignment_3");
			builder.put(grammarAccess.getPortAccess().getNameAssignment_1(), "rule__Port__NameAssignment_1");
			builder.put(grammarAccess.getPortAccess().getTypeAssignment_3(), "rule__Port__TypeAssignment_3");
			builder.put(grammarAccess.getHardwarePartPortReferenceAccess().getPartAssignment_1(), "rule__HardwarePartPortReference__PartAssignment_1");
			builder.put(grammarAccess.getHardwarePartPortReferenceAccess().getPortAssignment_3(), "rule__HardwarePartPortReference__PortAssignment_3");
			builder.put(grammarAccess.getThisPortReferenceAccess().getPortAssignment_3(), "rule__ThisPortReference__PortAssignment_3");
			builder.put(grammarAccess.getChannelAccess().getFromAssignment_1(), "rule__Channel__FromAssignment_1");
			builder.put(grammarAccess.getChannelAccess().getToAssignment_3_0(), "rule__Channel__ToAssignment_3_0");
			builder.put(grammarAccess.getChannelAccess().getToAssignment_4(), "rule__Channel__ToAssignment_4");
			builder.put(grammarAccess.getFMEDAComponentInstanceAccess().getNameAssignment_1(), "rule__FMEDAComponentInstance__NameAssignment_1");
			builder.put(grammarAccess.getFMEDAComponentInstanceAccess().getTypeAssignment_3(), "rule__FMEDAComponentInstance__TypeAssignment_3");
			builder.put(grammarAccess.getFMEDADiagnosticsAccess().getNameAssignment_1(), "rule__FMEDADiagnostics__NameAssignment_1");
			builder.put(grammarAccess.getDiagnosticsReferenceAccess().getFmedadiagnosticsAssignment_2_0(), "rule__DiagnosticsReference__FmedadiagnosticsAssignment_2_0");
			builder.put(grammarAccess.getDiagnosticsReferenceAccess().getFmedadiagnosticsAssignment_3(), "rule__DiagnosticsReference__FmedadiagnosticsAssignment_3");
			builder.put(grammarAccess.getDiagnosticsReferenceAccess().getCoverageAssignment_5(), "rule__DiagnosticsReference__CoverageAssignment_5");
			builder.put(grammarAccess.getFailureModeDefAccess().getNameAssignment_1(), "rule__FailureModeDef__NameAssignment_1");
			builder.put(grammarAccess.getFailureModeDefAccess().getDiagnosticsAssignment_2(), "rule__FailureModeDef__DiagnosticsAssignment_2");
			builder.put(grammarAccess.getPartFailureModeDefAccess().getNameAssignment_1(), "rule__PartFailureModeDef__NameAssignment_1");
			builder.put(grammarAccess.getPartFailureModeDefAccess().getDiagnosticsAssignment_2(), "rule__PartFailureModeDef__DiagnosticsAssignment_2");
			builder.put(grammarAccess.getPartFailureModeDefAccess().getFailureRateAssignment_5(), "rule__PartFailureModeDef__FailureRateAssignment_5");
			builder.put(grammarAccess.getHardwarePartFailureModeReferenceDefAccess().getPartAssignment_1(), "rule__HardwarePartFailureModeReferenceDef__PartAssignment_1");
			builder.put(grammarAccess.getHardwarePartFailureModeReferenceDefAccess().getFailuremodeAssignment_3(), "rule__HardwarePartFailureModeReferenceDef__FailuremodeAssignment_3");
			builder.put(grammarAccess.getThisPartFailureModeReferenceAccess().getFailuremodeAssignment_3(), "rule__ThisPartFailureModeReference__FailuremodeAssignment_3");
			builder.put(grammarAccess.getPortFailureModeReferenceAccess().getPartAssignment_1(), "rule__PortFailureModeReference__PartAssignment_1");
			builder.put(grammarAccess.getPortFailureModeReferenceAccess().getPortAssignment_3(), "rule__PortFailureModeReference__PortAssignment_3");
			builder.put(grammarAccess.getPortFailureModeReferenceAccess().getFailuremodeAssignment_5(), "rule__PortFailureModeReference__FailuremodeAssignment_5");
			builder.put(grammarAccess.getThisPortFailureModeReferenceAccess().getPortAssignment_3(), "rule__ThisPortFailureModeReference__PortAssignment_3");
			builder.put(grammarAccess.getThisPortFailureModeReferenceAccess().getFailuremodeAssignment_5(), "rule__ThisPortFailureModeReference__FailuremodeAssignment_5");
			builder.put(grammarAccess.getFailurePropagationDefAccess().getCauseAssignment_1(), "rule__FailurePropagationDef__CauseAssignment_1");
			builder.put(grammarAccess.getFailurePropagationDefAccess().getEffectAssignment_3_0(), "rule__FailurePropagationDef__EffectAssignment_3_0");
			builder.put(grammarAccess.getFailurePropagationDefAccess().getEffectAssignment_4(), "rule__FailurePropagationDef__EffectAssignment_4");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private FMEDALanguageGrammarAccess grammarAccess;

	@Override
	protected InternalFMEDALanguageParser createParser() {
		InternalFMEDALanguageParser result = new InternalFMEDALanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public FMEDALanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(FMEDALanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
