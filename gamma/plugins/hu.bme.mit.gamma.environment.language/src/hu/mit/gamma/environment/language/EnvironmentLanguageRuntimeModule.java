/*
 * generated by Xtext 2.20.0
 */
package hu.mit.gamma.environment.language;


import org.eclipse.xtext.linking.ILinkingService;
import org.eclipse.xtext.scoping.IScopeProvider;

import com.google.inject.Binder;

import hu.bme.mit.gamma.environment.language.linking.EnvironmentLanguageLinker;
import hu.bme.mit.gamma.environment.language.scoping.EnvironmentLanguageScopeProvider;
/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class EnvironmentLanguageRuntimeModule extends AbstractEnvironmentLanguageRuntimeModule {

	
	// Theoretically, needed for the serialization
	public Class<? extends IScopeProvider> bindIScopeProvider() {
		return EnvironmentLanguageScopeProvider.class;
	}
	

	public void configureSerializerIScopeProvider(Binder binder) {
		binder.bind(org.eclipse.xtext.scoping.IScopeProvider.class).annotatedWith(org.eclipse.xtext.serializer.tokens.SerializerScopeProviderBinding.class).to(EnvironmentLanguageScopeProvider.class);
	}
	
	
	// Needed for importing
	@Override
	public Class<? extends ILinkingService> bindILinkingService() {
		return EnvironmentLanguageLinker.class;
	}

}
