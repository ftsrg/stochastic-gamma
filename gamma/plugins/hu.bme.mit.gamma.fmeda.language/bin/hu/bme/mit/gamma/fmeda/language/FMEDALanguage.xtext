// automatically generated by Xtext
grammar hu.bme.mit.gamma.fmeda.language.FMEDALanguage 
	with org.eclipse.xtext.common.Terminals


import "platform:/resource/hu.bme.mit.gamma.fmeda.model/model/fmeda.ecore" as FMEDAModel
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

PackageDef returns FMEDAModel::Package: 
	'package' name=ID
	(
		components+=FMEDAComponentDef |
		diagnostics+=FMEDADiagnostics |
		interfaces+=InterfaceDef
	)*
;

FMEDAComponentDef returns FMEDAModel::FMEDAComponent: 
	"fmeda" "component" name=ID ("["
			(ports+=Port)*
		"]")?
		"{"
		(
			failuremodes+=FailureModeDef |
			failuremodes+=PartFailureModeDef |
			subcomponents+=FMEDAComponentInstance |
			failurepropagations+=FailurePropagationDef |
			channels+=Channel
			
		)*
	"}"
;

InterfaceDef returns FMEDAModel::Interface: 
	"interface" name=ID "{"

	(failuremodes+=FailureModeDef)+
	
	"}"
;

Port returns FMEDAModel::Port: 
	"port" name=ID ":" type=[FMEDAModel::Interface] ";"
;


ChannelInterfaceReference returns FMEDAModel::ChannelPortReference: 
	HardwarePartPortReference | ThisPortReference
;


HardwarePartPortReference returns FMEDAModel::HardwarePartPortReference: 
	"[" part=[FMEDAModel::FMEDAComponentInstance] "." port=[FMEDAModel::Port] "]"
;

ThisPortReference returns FMEDAModel::ThisPortReference: 
	"[" "this" "." port=[FMEDAModel::Port] "]"
;


Channel returns FMEDAModel::Channel: 
	"CH" from=ChannelInterfaceReference "<->" (to+=ChannelInterfaceReference ",")* to+=ChannelInterfaceReference ";"
;


FMEDAComponentInstance returns FMEDAModel::FMEDAComponentInstance: 
	"subcomponent" name=ID ":" type=[FMEDAModel::FMEDAComponent] ";"
;


FMEDADiagnostics returns FMEDAModel::FMEDADiagnostics: 
	"diagnostics" name=ID ";"
;


DiagnosticsReference returns FMEDAModel::DiagnosticsReference: 
	"diagnosed" "by" (fmedadiagnostics+=[FMEDAModel::FMEDADiagnostics] "," )* (fmedadiagnostics+=[FMEDAModel::FMEDADiagnostics]) "with" coverage=DOUBLE  
;


FailureModeDef returns FMEDAModel::FailureMode: 
	"FM" name=ID (diagnostics=DiagnosticsReference)? ";"
;

PartFailureModeDef returns FMEDAModel::PartFailureMode: 
	"PFM" name=ID (diagnostics=DiagnosticsReference)? "FR" "=" failureRate=DOUBLE ";"
;



FailureModeReference returns FMEDAModel::FailureModeReference: 
	HardwarePartFailureModeReferenceDef | ThisPartFailureModeReference | PortFailureModeReference | ThisPortFailureModeReference
;


HardwarePartFailureModeReferenceDef returns FMEDAModel::HardwarePartFailureModeReference: 
	"[" part=[FMEDAModel::FMEDAComponentInstance] "." failuremode=[FMEDAModel::FailureMode] "]"
;


ThisPartFailureModeReference returns FMEDAModel::ThisPartFailureModeReference: 
	"[" "this" "." failuremode=[FMEDAModel::FailureMode] "]"
;


PortFailureModeReference returns FMEDAModel::PortFailureModeReference: 
	"[" part=[FMEDAModel::FMEDAComponentInstance] "." port=[FMEDAModel::Port] "."  failuremode=[FMEDAModel::FailureMode] "]"
;


ThisPortFailureModeReference returns FMEDAModel::ThisPortFailureModeReference: 
	"[" "this" "." port=[FMEDAModel::Port] "."  failuremode=[FMEDAModel::FailureMode] "]"
;




FailurePropagationDef returns FMEDAModel::FailurePropagation: 
	"FP" cause=FailureModeReference  "->" (effect+=FailureModeReference ",")* effect+=FailureModeReference ";"
;

terminal DOUBLE returns ecore::EDouble: ('0'..'9')+ ("." ('0'..'9')*) ;

