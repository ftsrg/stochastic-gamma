package orion_benchmark_system_4
import "orion_stoch_env_param"
import "interfaces"
import "summarizer_adapter"
stochastic async OrionBenchMarkSystem_Param_4(timerMean : decimal)[
	port SystemConnStatus : provides ConnectionState 
]
{
    component subSystem1_ : Orion_Environment_Param(timerMean)
    component subSystem2_ : Orion_Environment_Param(timerMean)
	component summarizer : Summarizer_Adapter
    channel [subSystem1_.SystemConnStatus] -o)- [summarizer.inPort]
    channel [subSystem2_.SystemConnStatus] -o)- [summarizer.inPort]
	bind SystemConnStatus->summarizer.outPort
}

analysis Orion_Performance_Cond_4 {
    in stochastic component orion : OrionBenchMarkSystem_Param_4(sample(uniform from=4, to=20)) 
    mean time of event orion.SystemConnStatus.conn ;
    @Conditions{
        observe time event orion.SystemConnStatus.conn ~ Normal(16.0,1.0)
    }
    @Configuration(ImportanceSampling){
        end condition raised event orion.SystemConnStatus.conn
        simulation time = 300.0
        batch sample size = 120
        simulation number = 10000
        joint sampling = true
    }
} 