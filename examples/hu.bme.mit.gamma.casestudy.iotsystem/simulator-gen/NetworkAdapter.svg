<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="429px" preserveAspectRatio="none" style="width:1217px;height:429px;background:#FFFFFF;" version="1.1" viewBox="0 0 1217 429" width="1217px" zoomAndPan="magnify"><defs/><g><!--MD5=[364546bcc733a358b7698d68091cd49a]
cluster NetworkAdapter--><g id="cluster_NetworkAdapter"><rect fill="#FFFFFF" height="371" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="977" x="49" y="52.4541"/><rect fill="#FFFFFF" height="10" style="stroke:#000000;stroke-width:1.0;" width="15" x="1006" y="57.4541"/><rect fill="#FFFFFF" height="2" style="stroke:#000000;stroke-width:1.0;" width="4" x="1004" y="59.4541"/><rect fill="#FFFFFF" height="2" style="stroke:#000000;stroke-width:1.0;" width="4" x="1004" y="63.4541"/><text fill="#000000" font-family="Verdana" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="179" x="448" y="84.5293">«Asynchronous Adapter»</text><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="205" x="435" y="119.5869">NetworkAdapter</text></g><!--MD5=[8cd91a8026ecd064a658212c3b3f8063]
cluster comp--><g id="cluster_comp"><rect fill="#FFFFFF" height="136" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="342" x="582" y="84.4541"/><rect fill="#FFFFFF" height="10" style="stroke:#000000;stroke-width:1.0;" width="15" x="904" y="89.4541"/><rect fill="#FFFFFF" height="2" style="stroke:#000000;stroke-width:1.0;" width="4" x="902" y="91.4541"/><rect fill="#FFFFFF" height="2" style="stroke:#000000;stroke-width:1.0;" width="4" x="902" y="95.4541"/><text fill="#000000" font-family="Verdana" font-size="22" font-weight="bold" lengthAdjust="spacing" textLength="236" x="635" y="124.5723">network : Network</text></g><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="57" x="20.5" y="194.5146">ImageIn</text><rect fill="#FFFFFF" height="12" style="stroke:#000000;stroke-width:1.5;" width="12" x="43" y="214.4541"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="76" x="11" y="58.5146">ImageLoss</text><rect fill="#FFFFFF" height="12" style="stroke:#000000;stroke-width:1.5;" width="12" x="43" y="78.4541"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="69" x="973.5" y="26.5146">ImageOut</text><rect fill="#FFFFFF" height="12" style="stroke:#000000;stroke-width:1.5;" width="12" x="1002" y="46.4541"/><!--MD5=[a5d096c5f06b241aeee762631183cc1c]
entity imageInQueue--><g id="elem_imageInQueue"><path d="M264.5,184.9541 L384.5,184.9541 C389.5,184.9541 389.5,220.4761 389.5,220.4761 C389.5,220.4761 389.5,255.998 384.5,255.998 L264.5,255.998 C259.5,255.998 259.5,220.4761 259.5,220.4761 C259.5,220.4761 259.5,184.9541 264.5,184.9541 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><path d="M384.5,184.9541 C379.5,184.9541 379.5,220.4761 379.5,220.4761 C379.5,255.998 384.5,255.998 384.5,255.998 " fill="none" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="100" x="269.5" y="209.0293">imageInQueue</text><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="81" x="269.5" y="226.0439">capacity=1,</text><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="70" x="269.5" y="243.0586">priority=1</text></g><!--MD5=[d5dfe4a32612fc5c0dd539ce2adf7b24]
entity imageLossQueue--><g id="elem_imageLossQueue"><path d="M255,83.9541 L394,83.9541 C399,83.9541 399,119.4761 399,119.4761 C399,119.4761 399,154.998 394,154.998 L255,154.998 C250,154.998 250,119.4761 250,119.4761 C250,119.4761 250,83.9541 255,83.9541 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><path d="M394,83.9541 C389,83.9541 389,119.4761 389,119.4761 C389,154.998 394,154.998 394,154.998 " fill="none" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="119" x="260" y="108.0293">imageLossQueue</text><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="81" x="260" y="125.0439">capacity=1,</text><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="70" x="260" y="142.0586">priority=2</text></g><!--MD5=[3a68d7c547b56375dac91d9bc4fd7026]
entity Triggers--><g id="elem_Triggers"><rect fill="#FFFFFF" height="121.0439" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="337" x="156" y="285.9541"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="58" x="171" y="308.0293">Triggers</text><line style="stroke:#000000;stroke-width:1.0;" x1="157" x2="492" y1="315.9688" y2="315.9688"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="269" x="171" y="339.0439">when ImageIn.ImageIn.any / run once</text><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="157" x2="492" y1="350.9834" y2="350.9834"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="307" x="171" y="374.0586">when ImageLoss.ImageLoss.any / run once</text><line style="stroke:#000000;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="157" x2="492" y1="385.998" y2="385.998"/></g><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="57" x="571.5" y="245.5293">ImageIn</text><rect fill="#FFFFFF" height="12" style="stroke:#000000;stroke-width:1.5;" width="12" x="594" y="214.4541"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="76" x="562" y="58.5146">ImageLoss</text><rect fill="#FFFFFF" height="12" style="stroke:#000000;stroke-width:1.5;" width="12" x="594" y="78.4541"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="69" x="889.5" y="69.5146">ImageOut</text><rect fill="#FFFFFF" height="12" style="stroke:#000000;stroke-width:1.5;" width="12" x="918" y="89.4541"/><g id="elem_note_ImageOut"><path d="M1046,26.4541 L1046,48.4541 L1014.38,52.4541 L1046,56.4541 L1046,78.0527 A0,0 0 0 0 1046,78.0527 L1210,78.0527 A0,0 0 0 0 1210,78.0527 L1210,36.4541 L1200,26.4541 L1046,26.4541 A0,0 0 0 0 1046,26.4541 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><path d="M1200,26.4541 L1200,36.4541 L1210,36.4541 L1200,26.4541 " fill="#FFFFFF" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="133" x="1057" y="49.5239">$ImageOut_Blurred$</text><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="110" x="1057" y="65.3232">$ImageOut_Car$</text></g><!--MD5=[b5cbde7d620a18a790135f43949523ef]
link comp_ImageOut to c_ImageOut--><g id="link_comp_ImageOut_c_ImageOut"><path d="M930.21,93.0641 C934.49,91.0841 940.67,88.1641 946,85.4541 C963.73,76.4441 983.98,65.3241 996.12,58.5641 " fill="none" id="comp_ImageOut-to-c_ImageOut" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#000000" points="1000.34,56.2041,990.5335,57.1164,995.9787,58.6493,994.4458,64.0945,1000.34,56.2041" style="stroke:#000000;stroke-width:1.0;"/></g><!--MD5=[45ecf564c44e1cda6f15ccb38d45ffa0]
link c_ImageIn to imageInQueue--><g id="link_c_ImageIn_imageInQueue"><path d="M55.22,220.4541 C79.34,220.4541 181.88,220.4541 252.96,220.4541 " fill="none" id="c_ImageIn-to-imageInQueue" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#000000" points="257.79,220.4541,248.79,216.4541,252.79,220.4541,248.79,224.4541,257.79,220.4541" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="24" x="94" y="212.5239">any</text></g><!--MD5=[533c568ff11385f3ba24bb74cacc4f50]
link imageInQueue to comp_ImageIn--><g id="link_imageInQueue_comp_ImageIn"><path d="M389.97,220.4541 C456.04,220.4541 553.7,220.4541 587.21,220.4541 " fill="none" id="imageInQueue-to-comp_ImageIn" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#000000" points="592.16,220.4541,583.16,216.4541,587.16,220.4541,583.16,224.4541,592.16,220.4541" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="24" x="530" y="212.5239">any</text></g><!--MD5=[626bd394fab0a6d7f420ff0fd8bb5443]
link c_ImageLoss to imageLossQueue--><g id="link_c_ImageLoss_imageLossQueue"><path d="M55.22,85.1241 C78.27,88.0741 172.89,100.1841 243.27,109.1841 " fill="none" id="c_ImageLoss-to-imageLossQueue" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#000000" points="248.08,109.8041,239.6547,104.7037,243.1197,109.1751,238.6483,112.6402,248.08,109.8041" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="24" x="94" y="82.5239">any</text></g><!--MD5=[b3ebec1b836f7e084ae3cddf8416822e]
link imageLossQueue to comp_ImageLoss--><g id="link_imageLossQueue_comp_ImageLoss"><path d="M399.37,135.4241 C447.01,142.2341 509.31,144.4541 560,123.4541 C573.46,117.8841 584.7,105.1541 591.6,95.7541 " fill="none" id="imageLossQueue-to-comp_ImageLoss" style="stroke:#000000;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#000000" points="594.28,91.9141,585.8526,97.0111,591.4213,96.0163,592.4161,101.585,594.28,91.9141" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="13" lengthAdjust="spacing" textLength="24" x="530" y="115.5239">any</text></g><!--MD5=[3a3636a05829099a5a4c3e2c8ae5a13d]
@startuml
skinparam shadowing false

skinparam shadowing false
!theme plain
left to right direction
skinparam nodesep 30
skinparam ranksep 30

skinparam padding 5


skinparam interface<<Invisible>> {
  borderColor Transparent
  backgroundColor Transparent
  stereotypeFontColor Transparent
}

component "NetworkAdapter"<<Asynchronous Adapter>> {
	
portin "ImageIn" as c_ImageIn
portin "ImageLoss" as c_ImageLoss

portin "ImageIn" as c_ImageIn
portin "ImageLoss" as c_ImageLoss

portout "ImageOut" as c_ImageOut

portout "ImageOut" as c_ImageOut

		
component "network : Network" as comp {
	portin "ImageIn" as comp_ImageIn
	portin "ImageLoss" as comp_ImageLoss
	portout "ImageOut" as comp_ImageOut
}


comp_ImageOut ...> c_ImageOut

queue imageInQueue  [
imageInQueue
capacity=1,
priority=1
]
c_ImageIn ...> imageInQueue : "any"
imageInQueue ...> comp_ImageIn : "any"
queue imageLossQueue  [
imageLossQueue
capacity=1,
priority=2
]
c_ImageLoss ...> imageLossQueue : "any"
imageLossQueue ...> comp_ImageLoss : "any"

card Triggers[
Triggers
- - - -
when ImageIn.ImageIn.any / run once
....
when ImageLoss.ImageLoss.any / run once
....
]
}
note "$ImageOut_Blurred$\n$ImageOut_Car$" as note_ImageOut
c_ImageOut .. note_ImageOut
@enduml

@startuml
skinparam shadowing false

skinparam shadowing false







<style>
  root {
    BackgroundColor white
    FontColor black
    FontName Verdana
    HyperLinkColor blue
    LineColor black
    LineThickness 1
    Margin 5
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  header {
    LineThickness 0
  }
  node {
    MaximumWidth 300
  }
  title {
    FontSize 22
    LineThickness 0
  }
</style>

skinparam ArrowLollipopColor black
skinparam BackgroundColor white
skinparam DefaultFontName Verdana
skinparam DefaultMonospacedFontName Courier
skinparam LifelineStrategy nosolid
skinparam ParticipantPadding 10
skinparam SequenceLifeLineBorderColor black
skinparam Shadowing false
skinparam UseBetaStyle true

skinparam Activity {
  BackgroundColor white
  BarColor black
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam Boundary {
  FontColor black
}
skinparam Box {
  Padding 5
}
skinparam CircledCharacter {
  FontColor black
  FontName Courier
  Radius 9
}
skinparam Class {
  BackgroundColor white
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam ClassAttribute {
  FontColor black
  FontName Verdana
}
skinparam ClassStereotype {
  FontColor black
  FontName Verdana
}
skinparam Footer {
  FontColor black
  FontName Verdana
}
skinparam Header {
  FontColor black
  FontName Verdana
}
skinparam Hyperlink {
  Color blue
}
skinparam IconPackage {
  Color black
  BackgroundColor white
}
skinparam IconPrivate {
  Color black
  BackgroundColor white
}
skinparam IconProtected {
  Color black
  BackgroundColor white
}
skinparam IconPublic {
  Color black
  BackgroundColor white
}
skinparam Note {
  FontColor black
  FontName Verdana
}
skinparam Object {
  BorderColor black
}
skinparam Package {
  BorderColor black
  FontColor black
  FontName Verdana
}
skinparam State {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeA {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeC {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeE {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeI {
  BackgroundColor white
  BorderColor black
}
skinparam StereotypeN {
  BackgroundColor white
  BorderColor black
}
skinparam UseCaseStereoType {
  FontColor black
  FontName Verdana
}
left to right direction
skinparam nodesep 30
skinparam ranksep 30

skinparam padding 5


skinparam interface<<Invisible>> {
  borderColor Transparent
  backgroundColor Transparent
  stereotypeFontColor Transparent
}

component "NetworkAdapter"<<Asynchronous Adapter>> {
	
portin "ImageIn" as c_ImageIn
portin "ImageLoss" as c_ImageLoss

portin "ImageIn" as c_ImageIn
portin "ImageLoss" as c_ImageLoss

portout "ImageOut" as c_ImageOut

portout "ImageOut" as c_ImageOut

		
component "network : Network" as comp {
	portin "ImageIn" as comp_ImageIn
	portin "ImageLoss" as comp_ImageLoss
	portout "ImageOut" as comp_ImageOut
}


comp_ImageOut ...> c_ImageOut

queue imageInQueue  [
imageInQueue
capacity=1,
priority=1
]
c_ImageIn ...> imageInQueue : "any"
imageInQueue ...> comp_ImageIn : "any"
queue imageLossQueue  [
imageLossQueue
capacity=1,
priority=2
]
c_ImageLoss ...> imageLossQueue : "any"
imageLossQueue ...> comp_ImageLoss : "any"

card Triggers[
Triggers
- - - -
when ImageIn.ImageIn.any / run once
....
when ImageLoss.ImageLoss.any / run once
....
]
}
note "$ImageOut_Blurred$\n$ImageOut_Car$" as note_ImageOut
c_ImageOut .. note_ImageOut
@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(EPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>