package iotsystem_param_4
import "camera_component_param"
import "edge_adapter"
import "interfaces"
import "traffic"

stochastic async IoTSystemParametric_4 (failureProb:decimal) [
	port Failures : provides EventStream 
	port CarLeave : provides EventStream
]{
	component camera1 : CameraComponentParam(failureProb)
	component camera2 : CameraComponentParam(failureProb)
	component camera3 : CameraComponentParam(failureProb)
	component camera4 : CameraComponentParam(failureProb)
	component edge : EdgeAdapter
	component traffic : RoadTraffic
	channel [traffic.Cars] -o)- [
		camera1.TrafficSensing,
		camera2.TrafficSensing,
		camera3.TrafficSensing,
		camera4.TrafficSensing,
		edge.TrafficStream
	]
	channel [camera1.OutputData] -o)- [edge.Camera]
	channel [camera2.OutputData] -o)- [edge.Camera]
	channel [camera3.OutputData] -o)- [edge.Camera]
	channel [camera4.OutputData] -o)- [edge.Camera]
	bind Failures -> edge.LostImage
	bind CarLeave -> edge.CarLeave
}

analysis ConditionalServiceAvailability_4 {
	in stochastic component system : IoTSystemParametric_4(sample(uniform from=0.01, to=0.99))
	probability of event system.Failures.newEvent;

	@Conditions{
		assume raised event system.Failures.newEvent ~ 0.9
	}
	@Configuration(ImportanceSampling){
		simulation number = 10000
		simulation time = 1.0
		batch sample size = 40
        joint sampling = true
		end condition raised event system.CarLeave.newEvent
	}
}
