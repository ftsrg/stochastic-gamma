package iotsystem_4
import "camera_component"
import "edge_adapter"
import "interfaces"
import "traffic"

stochastic async IoTSystem_4 [
	port Failures : provides EventStream 
	port CarLeave : provides EventStream
]{
	component camera1 : CameraComponent
	component camera2 : CameraComponent
	component camera3 : CameraComponent
	component camera4 : CameraComponent
	
	component edge : EdgeAdapter
	component traffic : RoadTraffic
	channel [traffic.Cars] -o)- [
								 camera1.TrafficSensing
								,camera2.TrafficSensing
								,camera3.TrafficSensing
								,camera4.TrafficSensing
								,edge.TrafficStream
	]
	channel [camera1.OutputData] -o)- [edge.Camera]
	channel [camera2.OutputData] -o)- [edge.Camera]
	channel [camera3.OutputData] -o)- [edge.Camera]
	channel [camera4.OutputData] -o)- [edge.Camera]
	bind Failures -> edge.LostImage
	bind CarLeave -> edge.CarLeave
}

analysis ServiceAvailability_4 {
	in stochastic component system : IoTSystem_4
	probability of event system.Failures.newEvent;
	@Configuration(Simulation){
		simulation number = 10000
		simulation time = 1.0
		batch sample size = 40
		end condition raised event system.CarLeave.newEvent
	}
}
