package camera_component_param
import "camera_adapter_param"
import "interfaces"
import "communication_adapter"
stochastic async CameraComponentParam (failureProb:decimal) [
	port TrafficSensing : requires TrafficEventStream
	port OutputData : provides DataStream
]{
	periodic source softwareTimer port events : provides EventStream{
		*.*: normal mean = 0.2 , scale = 0.02;
	}
	switch networkLoss port ImageIn : requires DataStream -> port ImageOut : provides DataStream,
															port LostImages: provides DataStream{
																ImageOut.* : 0.9;
																LostImages.* : 0.1;}
	component software : CameraAdapterParam(failureProb)
	component networkQueue : NetworkAdapter
	channel [softwareTimer.events] -o)- [software.SoftwareTimer]
	channel [software.Images] -o)- [networkLoss.ImageIn]
	channel [networkLoss.ImageOut] -o)- [networkQueue.ImageIn]
	channel [networkLoss.LostImages] -o)- [networkQueue.ImageLoss]
	bind TrafficSensing -> software.TrafficSensing
	bind OutputData -> networkQueue.ImageOut
} 
